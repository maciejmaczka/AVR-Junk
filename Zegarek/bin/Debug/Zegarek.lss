
bin/Debug/Zegarek.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000019c4  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000112  00800060  000019c4  00001a78  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800172  00800172  00001b8a  2**0
                  ALLOC
  3 .fuse         00000002  00820000  00820000  00001b8a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .stab         0000138c  00000000  00000000  00001b8c  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .stabstr      00000936  00000000  00000000  00002f18  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ec       	ldi	r30, 0xC4	; 196
      68:	f9 e1       	ldi	r31, 0x19	; 25
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a2 37       	cpi	r26, 0x72	; 114
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a2 e7       	ldi	r26, 0x72	; 114
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a6 37       	cpi	r26, 0x76	; 118
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 49 00 	call	0x92	; 0x92 <main>
      8a:	0c 94 e0 0c 	jmp	0x19c0	; 0x19c0 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:

int time_add = 0;
int tik = 0;

int main(void)
{
      92:	0f 93       	push	r16
      94:	1f 93       	push	r17
      96:	df 93       	push	r29
      98:	cf 93       	push	r28
      9a:	cd b7       	in	r28, 0x3d	; 61
      9c:	de b7       	in	r29, 0x3e	; 62
      9e:	c0 56       	subi	r28, 0x60	; 96
      a0:	d0 40       	sbci	r29, 0x00	; 0
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61

    DDRB = 0xff;    // wyjscie
      ac:	87 e3       	ldi	r24, 0x37	; 55
      ae:	90 e0       	ldi	r25, 0x00	; 0
      b0:	2f ef       	ldi	r18, 0xFF	; 255
      b2:	fc 01       	movw	r30, r24
      b4:	20 83       	st	Z, r18
    DDRA = 0xff;
      b6:	8a e3       	ldi	r24, 0x3A	; 58
      b8:	90 e0       	ldi	r25, 0x00	; 0
      ba:	2f ef       	ldi	r18, 0xFF	; 255
      bc:	fc 01       	movw	r30, r24
      be:	20 83       	st	Z, r18
      c0:	01 c0       	rjmp	.+2      	; 0xc4 <main+0x32>

    }



    };
      c2:	00 00       	nop
    while(1)
    {

        // minuta 2

    wys1;
      c4:	8b e3       	ldi	r24, 0x3B	; 59
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	2e ef       	ldi	r18, 0xFE	; 254
      ca:	fc 01       	movw	r30, r24
      cc:	20 83       	st	Z, r18
    PORTB = cyfra1;
      ce:	88 e3       	ldi	r24, 0x38	; 56
      d0:	90 e0       	ldi	r25, 0x00	; 0
      d2:	20 91 60 00 	lds	r18, 0x0060
      d6:	30 91 61 00 	lds	r19, 0x0061
      da:	fc 01       	movw	r30, r24
      dc:	20 83       	st	Z, r18
    _delay_us(led_delay_ms);
      de:	80 91 68 00 	lds	r24, 0x0068
      e2:	90 91 69 00 	lds	r25, 0x0069
      e6:	aa 27       	eor	r26, r26
      e8:	97 fd       	sbrc	r25, 7
      ea:	a0 95       	com	r26
      ec:	ba 2f       	mov	r27, r26
      ee:	bc 01       	movw	r22, r24
      f0:	cd 01       	movw	r24, r26
      f2:	0e 94 0d 0a 	call	0x141a	; 0x141a <__floatsisf>
      f6:	dc 01       	movw	r26, r24
      f8:	cb 01       	movw	r24, r22
      fa:	89 83       	std	Y+1, r24	; 0x01
      fc:	9a 83       	std	Y+2, r25	; 0x02
      fe:	ab 83       	std	Y+3, r26	; 0x03
     100:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     102:	69 81       	ldd	r22, Y+1	; 0x01
     104:	7a 81       	ldd	r23, Y+2	; 0x02
     106:	8b 81       	ldd	r24, Y+3	; 0x03
     108:	9c 81       	ldd	r25, Y+4	; 0x04
     10a:	2b ea       	ldi	r18, 0xAB	; 171
     10c:	3a ea       	ldi	r19, 0xAA	; 170
     10e:	4a ea       	ldi	r20, 0xAA	; 170
     110:	50 e4       	ldi	r21, 0x40	; 64
     112:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__mulsf3>
     116:	dc 01       	movw	r26, r24
     118:	cb 01       	movw	r24, r22
     11a:	8d 83       	std	Y+5, r24	; 0x05
     11c:	9e 83       	std	Y+6, r25	; 0x06
     11e:	af 83       	std	Y+7, r26	; 0x07
     120:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     122:	11 e0       	ldi	r17, 0x01	; 1
     124:	6d 81       	ldd	r22, Y+5	; 0x05
     126:	7e 81       	ldd	r23, Y+6	; 0x06
     128:	8f 81       	ldd	r24, Y+7	; 0x07
     12a:	98 85       	ldd	r25, Y+8	; 0x08
     12c:	20 e0       	ldi	r18, 0x00	; 0
     12e:	30 e0       	ldi	r19, 0x00	; 0
     130:	40 e8       	ldi	r20, 0x80	; 128
     132:	5f e3       	ldi	r21, 0x3F	; 63
     134:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__ltsf2>
     138:	88 23       	and	r24, r24
     13a:	0c f0       	brlt	.+2      	; 0x13e <main+0xac>
     13c:	10 e0       	ldi	r17, 0x00	; 0
     13e:	11 23       	and	r17, r17
     140:	19 f0       	breq	.+6      	; 0x148 <main+0xb6>
		__ticks = 1;
     142:	81 e0       	ldi	r24, 0x01	; 1
     144:	89 87       	std	Y+9, r24	; 0x09
     146:	a3 c0       	rjmp	.+326    	; 0x28e <main+0x1fc>
	else if (__tmp > 255)
     148:	11 e0       	ldi	r17, 0x01	; 1
     14a:	6d 81       	ldd	r22, Y+5	; 0x05
     14c:	7e 81       	ldd	r23, Y+6	; 0x06
     14e:	8f 81       	ldd	r24, Y+7	; 0x07
     150:	98 85       	ldd	r25, Y+8	; 0x08
     152:	20 e0       	ldi	r18, 0x00	; 0
     154:	30 e0       	ldi	r19, 0x00	; 0
     156:	4f e7       	ldi	r20, 0x7F	; 127
     158:	53 e4       	ldi	r21, 0x43	; 67
     15a:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__gtsf2>
     15e:	18 16       	cp	r1, r24
     160:	0c f0       	brlt	.+2      	; 0x164 <main+0xd2>
     162:	10 e0       	ldi	r17, 0x00	; 0
     164:	11 23       	and	r17, r17
     166:	09 f4       	brne	.+2      	; 0x16a <main+0xd8>
     168:	89 c0       	rjmp	.+274    	; 0x27c <main+0x1ea>
	{
		_delay_ms(__us / 1000.0);
     16a:	69 81       	ldd	r22, Y+1	; 0x01
     16c:	7a 81       	ldd	r23, Y+2	; 0x02
     16e:	8b 81       	ldd	r24, Y+3	; 0x03
     170:	9c 81       	ldd	r25, Y+4	; 0x04
     172:	20 e0       	ldi	r18, 0x00	; 0
     174:	30 e0       	ldi	r19, 0x00	; 0
     176:	4a e7       	ldi	r20, 0x7A	; 122
     178:	54 e4       	ldi	r21, 0x44	; 68
     17a:	0e 94 cf 08 	call	0x119e	; 0x119e <__divsf3>
     17e:	dc 01       	movw	r26, r24
     180:	cb 01       	movw	r24, r22
     182:	8a 87       	std	Y+10, r24	; 0x0a
     184:	9b 87       	std	Y+11, r25	; 0x0b
     186:	ac 87       	std	Y+12, r26	; 0x0c
     188:	bd 87       	std	Y+13, r27	; 0x0d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     18a:	6a 85       	ldd	r22, Y+10	; 0x0a
     18c:	7b 85       	ldd	r23, Y+11	; 0x0b
     18e:	8c 85       	ldd	r24, Y+12	; 0x0c
     190:	9d 85       	ldd	r25, Y+13	; 0x0d
     192:	20 e0       	ldi	r18, 0x00	; 0
     194:	30 e0       	ldi	r19, 0x00	; 0
     196:	4a e7       	ldi	r20, 0x7A	; 122
     198:	55 e4       	ldi	r21, 0x45	; 69
     19a:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__mulsf3>
     19e:	dc 01       	movw	r26, r24
     1a0:	cb 01       	movw	r24, r22
     1a2:	8e 87       	std	Y+14, r24	; 0x0e
     1a4:	9f 87       	std	Y+15, r25	; 0x0f
     1a6:	a8 8b       	std	Y+16, r26	; 0x10
     1a8:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     1aa:	11 e0       	ldi	r17, 0x01	; 1
     1ac:	6e 85       	ldd	r22, Y+14	; 0x0e
     1ae:	7f 85       	ldd	r23, Y+15	; 0x0f
     1b0:	88 89       	ldd	r24, Y+16	; 0x10
     1b2:	99 89       	ldd	r25, Y+17	; 0x11
     1b4:	20 e0       	ldi	r18, 0x00	; 0
     1b6:	30 e0       	ldi	r19, 0x00	; 0
     1b8:	40 e8       	ldi	r20, 0x80	; 128
     1ba:	5f e3       	ldi	r21, 0x3F	; 63
     1bc:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__ltsf2>
     1c0:	88 23       	and	r24, r24
     1c2:	0c f0       	brlt	.+2      	; 0x1c6 <main+0x134>
     1c4:	10 e0       	ldi	r17, 0x00	; 0
     1c6:	11 23       	and	r17, r17
     1c8:	29 f0       	breq	.+10     	; 0x1d4 <main+0x142>
		__ticks = 1;
     1ca:	81 e0       	ldi	r24, 0x01	; 1
     1cc:	90 e0       	ldi	r25, 0x00	; 0
     1ce:	9b 8b       	std	Y+19, r25	; 0x13
     1d0:	8a 8b       	std	Y+18, r24	; 0x12
     1d2:	46 c0       	rjmp	.+140    	; 0x260 <main+0x1ce>
	else if (__tmp > 65535)
     1d4:	11 e0       	ldi	r17, 0x01	; 1
     1d6:	6e 85       	ldd	r22, Y+14	; 0x0e
     1d8:	7f 85       	ldd	r23, Y+15	; 0x0f
     1da:	88 89       	ldd	r24, Y+16	; 0x10
     1dc:	99 89       	ldd	r25, Y+17	; 0x11
     1de:	20 e0       	ldi	r18, 0x00	; 0
     1e0:	3f ef       	ldi	r19, 0xFF	; 255
     1e2:	4f e7       	ldi	r20, 0x7F	; 127
     1e4:	57 e4       	ldi	r21, 0x47	; 71
     1e6:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__gtsf2>
     1ea:	18 16       	cp	r1, r24
     1ec:	0c f0       	brlt	.+2      	; 0x1f0 <main+0x15e>
     1ee:	10 e0       	ldi	r17, 0x00	; 0
     1f0:	11 23       	and	r17, r17
     1f2:	61 f1       	breq	.+88     	; 0x24c <main+0x1ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1f4:	6a 85       	ldd	r22, Y+10	; 0x0a
     1f6:	7b 85       	ldd	r23, Y+11	; 0x0b
     1f8:	8c 85       	ldd	r24, Y+12	; 0x0c
     1fa:	9d 85       	ldd	r25, Y+13	; 0x0d
     1fc:	20 e0       	ldi	r18, 0x00	; 0
     1fe:	30 e0       	ldi	r19, 0x00	; 0
     200:	40 e2       	ldi	r20, 0x20	; 32
     202:	51 e4       	ldi	r21, 0x41	; 65
     204:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__mulsf3>
     208:	dc 01       	movw	r26, r24
     20a:	cb 01       	movw	r24, r22
     20c:	bc 01       	movw	r22, r24
     20e:	cd 01       	movw	r24, r26
     210:	0e 94 01 06 	call	0xc02	; 0xc02 <__fixunssfsi>
     214:	dc 01       	movw	r26, r24
     216:	cb 01       	movw	r24, r22
     218:	9b 8b       	std	Y+19, r25	; 0x13
     21a:	8a 8b       	std	Y+18, r24	; 0x12
     21c:	12 c0       	rjmp	.+36     	; 0x242 <main+0x1b0>
     21e:	80 e9       	ldi	r24, 0x90	; 144
     220:	91 e0       	ldi	r25, 0x01	; 1
     222:	9d 8b       	std	Y+21, r25	; 0x15
     224:	8c 8b       	std	Y+20, r24	; 0x14
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     226:	8c 89       	ldd	r24, Y+20	; 0x14
     228:	9d 89       	ldd	r25, Y+21	; 0x15
     22a:	8c 01       	movw	r16, r24
     22c:	c8 01       	movw	r24, r16
     22e:	01 97       	sbiw	r24, 0x01	; 1
     230:	f1 f7       	brne	.-4      	; 0x22e <main+0x19c>
     232:	8c 01       	movw	r16, r24
     234:	1d 8b       	std	Y+21, r17	; 0x15
     236:	0c 8b       	std	Y+20, r16	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     238:	8a 89       	ldd	r24, Y+18	; 0x12
     23a:	9b 89       	ldd	r25, Y+19	; 0x13
     23c:	01 97       	sbiw	r24, 0x01	; 1
     23e:	9b 8b       	std	Y+19, r25	; 0x13
     240:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     242:	8a 89       	ldd	r24, Y+18	; 0x12
     244:	9b 89       	ldd	r25, Y+19	; 0x13
     246:	00 97       	sbiw	r24, 0x00	; 0
     248:	51 f7       	brne	.-44     	; 0x21e <main+0x18c>
     24a:	28 c0       	rjmp	.+80     	; 0x29c <main+0x20a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     24c:	6e 85       	ldd	r22, Y+14	; 0x0e
     24e:	7f 85       	ldd	r23, Y+15	; 0x0f
     250:	88 89       	ldd	r24, Y+16	; 0x10
     252:	99 89       	ldd	r25, Y+17	; 0x11
     254:	0e 94 01 06 	call	0xc02	; 0xc02 <__fixunssfsi>
     258:	dc 01       	movw	r26, r24
     25a:	cb 01       	movw	r24, r22
     25c:	9b 8b       	std	Y+19, r25	; 0x13
     25e:	8a 8b       	std	Y+18, r24	; 0x12
     260:	8a 89       	ldd	r24, Y+18	; 0x12
     262:	9b 89       	ldd	r25, Y+19	; 0x13
     264:	9f 8b       	std	Y+23, r25	; 0x17
     266:	8e 8b       	std	Y+22, r24	; 0x16
     268:	8e 89       	ldd	r24, Y+22	; 0x16
     26a:	9f 89       	ldd	r25, Y+23	; 0x17
     26c:	8c 01       	movw	r16, r24
     26e:	f8 01       	movw	r30, r16
     270:	31 97       	sbiw	r30, 0x01	; 1
     272:	f1 f7       	brne	.-4      	; 0x270 <main+0x1de>
     274:	8f 01       	movw	r16, r30
     276:	1f 8b       	std	Y+23, r17	; 0x17
     278:	0e 8b       	std	Y+22, r16	; 0x16
     27a:	10 c0       	rjmp	.+32     	; 0x29c <main+0x20a>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     27c:	6d 81       	ldd	r22, Y+5	; 0x05
     27e:	7e 81       	ldd	r23, Y+6	; 0x06
     280:	8f 81       	ldd	r24, Y+7	; 0x07
     282:	98 85       	ldd	r25, Y+8	; 0x08
     284:	0e 94 01 06 	call	0xc02	; 0xc02 <__fixunssfsi>
     288:	dc 01       	movw	r26, r24
     28a:	cb 01       	movw	r24, r22
     28c:	89 87       	std	Y+9, r24	; 0x09
     28e:	89 85       	ldd	r24, Y+9	; 0x09
     290:	88 8f       	std	Y+24, r24	; 0x18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     292:	88 8d       	ldd	r24, Y+24	; 0x18
     294:	18 2f       	mov	r17, r24
     296:	1a 95       	dec	r17
     298:	f1 f7       	brne	.-4      	; 0x296 <main+0x204>
     29a:	18 8f       	std	Y+24, r17	; 0x18



        // minuta 1
    wys2;
     29c:	8b e3       	ldi	r24, 0x3B	; 59
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	2d ef       	ldi	r18, 0xFD	; 253
     2a2:	fc 01       	movw	r30, r24
     2a4:	20 83       	st	Z, r18
    PORTB = cyfra2;
     2a6:	88 e3       	ldi	r24, 0x38	; 56
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	20 91 62 00 	lds	r18, 0x0062
     2ae:	30 91 63 00 	lds	r19, 0x0063
     2b2:	fc 01       	movw	r30, r24
     2b4:	20 83       	st	Z, r18
    _delay_us(led_delay_ms);
     2b6:	80 91 68 00 	lds	r24, 0x0068
     2ba:	90 91 69 00 	lds	r25, 0x0069
     2be:	aa 27       	eor	r26, r26
     2c0:	97 fd       	sbrc	r25, 7
     2c2:	a0 95       	com	r26
     2c4:	ba 2f       	mov	r27, r26
     2c6:	bc 01       	movw	r22, r24
     2c8:	cd 01       	movw	r24, r26
     2ca:	0e 94 0d 0a 	call	0x141a	; 0x141a <__floatsisf>
     2ce:	dc 01       	movw	r26, r24
     2d0:	cb 01       	movw	r24, r22
     2d2:	89 8f       	std	Y+25, r24	; 0x19
     2d4:	9a 8f       	std	Y+26, r25	; 0x1a
     2d6:	ab 8f       	std	Y+27, r26	; 0x1b
     2d8:	bc 8f       	std	Y+28, r27	; 0x1c
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     2da:	69 8d       	ldd	r22, Y+25	; 0x19
     2dc:	7a 8d       	ldd	r23, Y+26	; 0x1a
     2de:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2e0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2e2:	2b ea       	ldi	r18, 0xAB	; 171
     2e4:	3a ea       	ldi	r19, 0xAA	; 170
     2e6:	4a ea       	ldi	r20, 0xAA	; 170
     2e8:	50 e4       	ldi	r21, 0x40	; 64
     2ea:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__mulsf3>
     2ee:	dc 01       	movw	r26, r24
     2f0:	cb 01       	movw	r24, r22
     2f2:	8d 8f       	std	Y+29, r24	; 0x1d
     2f4:	9e 8f       	std	Y+30, r25	; 0x1e
     2f6:	af 8f       	std	Y+31, r26	; 0x1f
     2f8:	b8 a3       	std	Y+32, r27	; 0x20
	if (__tmp < 1.0)
     2fa:	11 e0       	ldi	r17, 0x01	; 1
     2fc:	6d 8d       	ldd	r22, Y+29	; 0x1d
     2fe:	7e 8d       	ldd	r23, Y+30	; 0x1e
     300:	8f 8d       	ldd	r24, Y+31	; 0x1f
     302:	98 a1       	ldd	r25, Y+32	; 0x20
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	40 e8       	ldi	r20, 0x80	; 128
     30a:	5f e3       	ldi	r21, 0x3F	; 63
     30c:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__ltsf2>
     310:	88 23       	and	r24, r24
     312:	0c f0       	brlt	.+2      	; 0x316 <main+0x284>
     314:	10 e0       	ldi	r17, 0x00	; 0
     316:	11 23       	and	r17, r17
     318:	19 f0       	breq	.+6      	; 0x320 <main+0x28e>
		__ticks = 1;
     31a:	81 e0       	ldi	r24, 0x01	; 1
     31c:	89 a3       	std	Y+33, r24	; 0x21
     31e:	a3 c0       	rjmp	.+326    	; 0x466 <main+0x3d4>
	else if (__tmp > 255)
     320:	11 e0       	ldi	r17, 0x01	; 1
     322:	6d 8d       	ldd	r22, Y+29	; 0x1d
     324:	7e 8d       	ldd	r23, Y+30	; 0x1e
     326:	8f 8d       	ldd	r24, Y+31	; 0x1f
     328:	98 a1       	ldd	r25, Y+32	; 0x20
     32a:	20 e0       	ldi	r18, 0x00	; 0
     32c:	30 e0       	ldi	r19, 0x00	; 0
     32e:	4f e7       	ldi	r20, 0x7F	; 127
     330:	53 e4       	ldi	r21, 0x43	; 67
     332:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__gtsf2>
     336:	18 16       	cp	r1, r24
     338:	0c f0       	brlt	.+2      	; 0x33c <main+0x2aa>
     33a:	10 e0       	ldi	r17, 0x00	; 0
     33c:	11 23       	and	r17, r17
     33e:	09 f4       	brne	.+2      	; 0x342 <main+0x2b0>
     340:	89 c0       	rjmp	.+274    	; 0x454 <main+0x3c2>
	{
		_delay_ms(__us / 1000.0);
     342:	69 8d       	ldd	r22, Y+25	; 0x19
     344:	7a 8d       	ldd	r23, Y+26	; 0x1a
     346:	8b 8d       	ldd	r24, Y+27	; 0x1b
     348:	9c 8d       	ldd	r25, Y+28	; 0x1c
     34a:	20 e0       	ldi	r18, 0x00	; 0
     34c:	30 e0       	ldi	r19, 0x00	; 0
     34e:	4a e7       	ldi	r20, 0x7A	; 122
     350:	54 e4       	ldi	r21, 0x44	; 68
     352:	0e 94 cf 08 	call	0x119e	; 0x119e <__divsf3>
     356:	dc 01       	movw	r26, r24
     358:	cb 01       	movw	r24, r22
     35a:	8a a3       	std	Y+34, r24	; 0x22
     35c:	9b a3       	std	Y+35, r25	; 0x23
     35e:	ac a3       	std	Y+36, r26	; 0x24
     360:	bd a3       	std	Y+37, r27	; 0x25
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     362:	6a a1       	ldd	r22, Y+34	; 0x22
     364:	7b a1       	ldd	r23, Y+35	; 0x23
     366:	8c a1       	ldd	r24, Y+36	; 0x24
     368:	9d a1       	ldd	r25, Y+37	; 0x25
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	4a e7       	ldi	r20, 0x7A	; 122
     370:	55 e4       	ldi	r21, 0x45	; 69
     372:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__mulsf3>
     376:	dc 01       	movw	r26, r24
     378:	cb 01       	movw	r24, r22
     37a:	8e a3       	std	Y+38, r24	; 0x26
     37c:	9f a3       	std	Y+39, r25	; 0x27
     37e:	a8 a7       	std	Y+40, r26	; 0x28
     380:	b9 a7       	std	Y+41, r27	; 0x29
	if (__tmp < 1.0)
     382:	11 e0       	ldi	r17, 0x01	; 1
     384:	6e a1       	ldd	r22, Y+38	; 0x26
     386:	7f a1       	ldd	r23, Y+39	; 0x27
     388:	88 a5       	ldd	r24, Y+40	; 0x28
     38a:	99 a5       	ldd	r25, Y+41	; 0x29
     38c:	20 e0       	ldi	r18, 0x00	; 0
     38e:	30 e0       	ldi	r19, 0x00	; 0
     390:	40 e8       	ldi	r20, 0x80	; 128
     392:	5f e3       	ldi	r21, 0x3F	; 63
     394:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__ltsf2>
     398:	88 23       	and	r24, r24
     39a:	0c f0       	brlt	.+2      	; 0x39e <main+0x30c>
     39c:	10 e0       	ldi	r17, 0x00	; 0
     39e:	11 23       	and	r17, r17
     3a0:	29 f0       	breq	.+10     	; 0x3ac <main+0x31a>
		__ticks = 1;
     3a2:	81 e0       	ldi	r24, 0x01	; 1
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	9b a7       	std	Y+43, r25	; 0x2b
     3a8:	8a a7       	std	Y+42, r24	; 0x2a
     3aa:	46 c0       	rjmp	.+140    	; 0x438 <main+0x3a6>
	else if (__tmp > 65535)
     3ac:	11 e0       	ldi	r17, 0x01	; 1
     3ae:	6e a1       	ldd	r22, Y+38	; 0x26
     3b0:	7f a1       	ldd	r23, Y+39	; 0x27
     3b2:	88 a5       	ldd	r24, Y+40	; 0x28
     3b4:	99 a5       	ldd	r25, Y+41	; 0x29
     3b6:	20 e0       	ldi	r18, 0x00	; 0
     3b8:	3f ef       	ldi	r19, 0xFF	; 255
     3ba:	4f e7       	ldi	r20, 0x7F	; 127
     3bc:	57 e4       	ldi	r21, 0x47	; 71
     3be:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__gtsf2>
     3c2:	18 16       	cp	r1, r24
     3c4:	0c f0       	brlt	.+2      	; 0x3c8 <main+0x336>
     3c6:	10 e0       	ldi	r17, 0x00	; 0
     3c8:	11 23       	and	r17, r17
     3ca:	61 f1       	breq	.+88     	; 0x424 <main+0x392>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3cc:	6a a1       	ldd	r22, Y+34	; 0x22
     3ce:	7b a1       	ldd	r23, Y+35	; 0x23
     3d0:	8c a1       	ldd	r24, Y+36	; 0x24
     3d2:	9d a1       	ldd	r25, Y+37	; 0x25
     3d4:	20 e0       	ldi	r18, 0x00	; 0
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	40 e2       	ldi	r20, 0x20	; 32
     3da:	51 e4       	ldi	r21, 0x41	; 65
     3dc:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__mulsf3>
     3e0:	dc 01       	movw	r26, r24
     3e2:	cb 01       	movw	r24, r22
     3e4:	bc 01       	movw	r22, r24
     3e6:	cd 01       	movw	r24, r26
     3e8:	0e 94 01 06 	call	0xc02	; 0xc02 <__fixunssfsi>
     3ec:	dc 01       	movw	r26, r24
     3ee:	cb 01       	movw	r24, r22
     3f0:	9b a7       	std	Y+43, r25	; 0x2b
     3f2:	8a a7       	std	Y+42, r24	; 0x2a
     3f4:	12 c0       	rjmp	.+36     	; 0x41a <main+0x388>
     3f6:	80 e9       	ldi	r24, 0x90	; 144
     3f8:	91 e0       	ldi	r25, 0x01	; 1
     3fa:	9d a7       	std	Y+45, r25	; 0x2d
     3fc:	8c a7       	std	Y+44, r24	; 0x2c
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     3fe:	8c a5       	ldd	r24, Y+44	; 0x2c
     400:	9d a5       	ldd	r25, Y+45	; 0x2d
     402:	8c 01       	movw	r16, r24
     404:	c8 01       	movw	r24, r16
     406:	01 97       	sbiw	r24, 0x01	; 1
     408:	f1 f7       	brne	.-4      	; 0x406 <main+0x374>
     40a:	8c 01       	movw	r16, r24
     40c:	1d a7       	std	Y+45, r17	; 0x2d
     40e:	0c a7       	std	Y+44, r16	; 0x2c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     410:	8a a5       	ldd	r24, Y+42	; 0x2a
     412:	9b a5       	ldd	r25, Y+43	; 0x2b
     414:	01 97       	sbiw	r24, 0x01	; 1
     416:	9b a7       	std	Y+43, r25	; 0x2b
     418:	8a a7       	std	Y+42, r24	; 0x2a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     41a:	8a a5       	ldd	r24, Y+42	; 0x2a
     41c:	9b a5       	ldd	r25, Y+43	; 0x2b
     41e:	00 97       	sbiw	r24, 0x00	; 0
     420:	51 f7       	brne	.-44     	; 0x3f6 <main+0x364>
     422:	28 c0       	rjmp	.+80     	; 0x474 <main+0x3e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     424:	6e a1       	ldd	r22, Y+38	; 0x26
     426:	7f a1       	ldd	r23, Y+39	; 0x27
     428:	88 a5       	ldd	r24, Y+40	; 0x28
     42a:	99 a5       	ldd	r25, Y+41	; 0x29
     42c:	0e 94 01 06 	call	0xc02	; 0xc02 <__fixunssfsi>
     430:	dc 01       	movw	r26, r24
     432:	cb 01       	movw	r24, r22
     434:	9b a7       	std	Y+43, r25	; 0x2b
     436:	8a a7       	std	Y+42, r24	; 0x2a
     438:	8a a5       	ldd	r24, Y+42	; 0x2a
     43a:	9b a5       	ldd	r25, Y+43	; 0x2b
     43c:	9f a7       	std	Y+47, r25	; 0x2f
     43e:	8e a7       	std	Y+46, r24	; 0x2e
     440:	8e a5       	ldd	r24, Y+46	; 0x2e
     442:	9f a5       	ldd	r25, Y+47	; 0x2f
     444:	8c 01       	movw	r16, r24
     446:	f8 01       	movw	r30, r16
     448:	31 97       	sbiw	r30, 0x01	; 1
     44a:	f1 f7       	brne	.-4      	; 0x448 <main+0x3b6>
     44c:	8f 01       	movw	r16, r30
     44e:	1f a7       	std	Y+47, r17	; 0x2f
     450:	0e a7       	std	Y+46, r16	; 0x2e
     452:	10 c0       	rjmp	.+32     	; 0x474 <main+0x3e2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     454:	6d 8d       	ldd	r22, Y+29	; 0x1d
     456:	7e 8d       	ldd	r23, Y+30	; 0x1e
     458:	8f 8d       	ldd	r24, Y+31	; 0x1f
     45a:	98 a1       	ldd	r25, Y+32	; 0x20
     45c:	0e 94 01 06 	call	0xc02	; 0xc02 <__fixunssfsi>
     460:	dc 01       	movw	r26, r24
     462:	cb 01       	movw	r24, r22
     464:	89 a3       	std	Y+33, r24	; 0x21
     466:	89 a1       	ldd	r24, Y+33	; 0x21
     468:	88 ab       	std	Y+48, r24	; 0x30
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     46a:	88 a9       	ldd	r24, Y+48	; 0x30
     46c:	18 2f       	mov	r17, r24
     46e:	1a 95       	dec	r17
     470:	f1 f7       	brne	.-4      	; 0x46e <main+0x3dc>
     472:	18 ab       	std	Y+48, r17	; 0x30


        // godzina 2
    wys3;
     474:	8b e3       	ldi	r24, 0x3B	; 59
     476:	90 e0       	ldi	r25, 0x00	; 0
     478:	2b eb       	ldi	r18, 0xBB	; 187
     47a:	fc 01       	movw	r30, r24
     47c:	20 83       	st	Z, r18
    PORTB = cyfra3;
     47e:	88 e3       	ldi	r24, 0x38	; 56
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	20 91 64 00 	lds	r18, 0x0064
     486:	30 91 65 00 	lds	r19, 0x0065
     48a:	fc 01       	movw	r30, r24
     48c:	20 83       	st	Z, r18
    _delay_us(led_delay_ms);
     48e:	80 91 68 00 	lds	r24, 0x0068
     492:	90 91 69 00 	lds	r25, 0x0069
     496:	aa 27       	eor	r26, r26
     498:	97 fd       	sbrc	r25, 7
     49a:	a0 95       	com	r26
     49c:	ba 2f       	mov	r27, r26
     49e:	bc 01       	movw	r22, r24
     4a0:	cd 01       	movw	r24, r26
     4a2:	0e 94 0d 0a 	call	0x141a	; 0x141a <__floatsisf>
     4a6:	dc 01       	movw	r26, r24
     4a8:	cb 01       	movw	r24, r22
     4aa:	89 ab       	std	Y+49, r24	; 0x31
     4ac:	9a ab       	std	Y+50, r25	; 0x32
     4ae:	ab ab       	std	Y+51, r26	; 0x33
     4b0:	bc ab       	std	Y+52, r27	; 0x34
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     4b2:	69 a9       	ldd	r22, Y+49	; 0x31
     4b4:	7a a9       	ldd	r23, Y+50	; 0x32
     4b6:	8b a9       	ldd	r24, Y+51	; 0x33
     4b8:	9c a9       	ldd	r25, Y+52	; 0x34
     4ba:	2b ea       	ldi	r18, 0xAB	; 171
     4bc:	3a ea       	ldi	r19, 0xAA	; 170
     4be:	4a ea       	ldi	r20, 0xAA	; 170
     4c0:	50 e4       	ldi	r21, 0x40	; 64
     4c2:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__mulsf3>
     4c6:	dc 01       	movw	r26, r24
     4c8:	cb 01       	movw	r24, r22
     4ca:	8d ab       	std	Y+53, r24	; 0x35
     4cc:	9e ab       	std	Y+54, r25	; 0x36
     4ce:	af ab       	std	Y+55, r26	; 0x37
     4d0:	b8 af       	std	Y+56, r27	; 0x38
	if (__tmp < 1.0)
     4d2:	11 e0       	ldi	r17, 0x01	; 1
     4d4:	6d a9       	ldd	r22, Y+53	; 0x35
     4d6:	7e a9       	ldd	r23, Y+54	; 0x36
     4d8:	8f a9       	ldd	r24, Y+55	; 0x37
     4da:	98 ad       	ldd	r25, Y+56	; 0x38
     4dc:	20 e0       	ldi	r18, 0x00	; 0
     4de:	30 e0       	ldi	r19, 0x00	; 0
     4e0:	40 e8       	ldi	r20, 0x80	; 128
     4e2:	5f e3       	ldi	r21, 0x3F	; 63
     4e4:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__ltsf2>
     4e8:	88 23       	and	r24, r24
     4ea:	0c f0       	brlt	.+2      	; 0x4ee <main+0x45c>
     4ec:	10 e0       	ldi	r17, 0x00	; 0
     4ee:	11 23       	and	r17, r17
     4f0:	19 f0       	breq	.+6      	; 0x4f8 <main+0x466>
		__ticks = 1;
     4f2:	81 e0       	ldi	r24, 0x01	; 1
     4f4:	89 af       	std	Y+57, r24	; 0x39
     4f6:	e6 c0       	rjmp	.+460    	; 0x6c4 <main+0x632>
	else if (__tmp > 255)
     4f8:	11 e0       	ldi	r17, 0x01	; 1
     4fa:	6d a9       	ldd	r22, Y+53	; 0x35
     4fc:	7e a9       	ldd	r23, Y+54	; 0x36
     4fe:	8f a9       	ldd	r24, Y+55	; 0x37
     500:	98 ad       	ldd	r25, Y+56	; 0x38
     502:	20 e0       	ldi	r18, 0x00	; 0
     504:	30 e0       	ldi	r19, 0x00	; 0
     506:	4f e7       	ldi	r20, 0x7F	; 127
     508:	53 e4       	ldi	r21, 0x43	; 67
     50a:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__gtsf2>
     50e:	18 16       	cp	r1, r24
     510:	0c f0       	brlt	.+2      	; 0x514 <main+0x482>
     512:	10 e0       	ldi	r17, 0x00	; 0
     514:	11 23       	and	r17, r17
     516:	09 f4       	brne	.+2      	; 0x51a <main+0x488>
     518:	cc c0       	rjmp	.+408    	; 0x6b2 <main+0x620>
	{
		_delay_ms(__us / 1000.0);
     51a:	69 a9       	ldd	r22, Y+49	; 0x31
     51c:	7a a9       	ldd	r23, Y+50	; 0x32
     51e:	8b a9       	ldd	r24, Y+51	; 0x33
     520:	9c a9       	ldd	r25, Y+52	; 0x34
     522:	20 e0       	ldi	r18, 0x00	; 0
     524:	30 e0       	ldi	r19, 0x00	; 0
     526:	4a e7       	ldi	r20, 0x7A	; 122
     528:	54 e4       	ldi	r21, 0x44	; 68
     52a:	0e 94 cf 08 	call	0x119e	; 0x119e <__divsf3>
     52e:	dc 01       	movw	r26, r24
     530:	cb 01       	movw	r24, r22
     532:	8a af       	std	Y+58, r24	; 0x3a
     534:	9b af       	std	Y+59, r25	; 0x3b
     536:	ac af       	std	Y+60, r26	; 0x3c
     538:	bd af       	std	Y+61, r27	; 0x3d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     53a:	8e 01       	movw	r16, r28
     53c:	02 5c       	subi	r16, 0xC2	; 194
     53e:	1f 4f       	sbci	r17, 0xFF	; 255
     540:	6a ad       	ldd	r22, Y+58	; 0x3a
     542:	7b ad       	ldd	r23, Y+59	; 0x3b
     544:	8c ad       	ldd	r24, Y+60	; 0x3c
     546:	9d ad       	ldd	r25, Y+61	; 0x3d
     548:	20 e0       	ldi	r18, 0x00	; 0
     54a:	30 e0       	ldi	r19, 0x00	; 0
     54c:	4a e7       	ldi	r20, 0x7A	; 122
     54e:	55 e4       	ldi	r21, 0x45	; 69
     550:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__mulsf3>
     554:	dc 01       	movw	r26, r24
     556:	cb 01       	movw	r24, r22
     558:	f8 01       	movw	r30, r16
     55a:	80 83       	st	Z, r24
     55c:	91 83       	std	Z+1, r25	; 0x01
     55e:	a2 83       	std	Z+2, r26	; 0x02
     560:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     562:	ce 01       	movw	r24, r28
     564:	ce 96       	adiw	r24, 0x3e	; 62
     566:	11 e0       	ldi	r17, 0x01	; 1
     568:	fc 01       	movw	r30, r24
     56a:	60 81       	ld	r22, Z
     56c:	71 81       	ldd	r23, Z+1	; 0x01
     56e:	82 81       	ldd	r24, Z+2	; 0x02
     570:	93 81       	ldd	r25, Z+3	; 0x03
     572:	20 e0       	ldi	r18, 0x00	; 0
     574:	30 e0       	ldi	r19, 0x00	; 0
     576:	40 e8       	ldi	r20, 0x80	; 128
     578:	5f e3       	ldi	r21, 0x3F	; 63
     57a:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__ltsf2>
     57e:	88 23       	and	r24, r24
     580:	0c f0       	brlt	.+2      	; 0x584 <main+0x4f2>
     582:	10 e0       	ldi	r17, 0x00	; 0
     584:	11 23       	and	r17, r17
     586:	49 f0       	breq	.+18     	; 0x59a <main+0x508>
		__ticks = 1;
     588:	ce 01       	movw	r24, r28
     58a:	8e 5b       	subi	r24, 0xBE	; 190
     58c:	9f 4f       	sbci	r25, 0xFF	; 255
     58e:	21 e0       	ldi	r18, 0x01	; 1
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	fc 01       	movw	r30, r24
     594:	31 83       	std	Z+1, r19	; 0x01
     596:	20 83       	st	Z, r18
     598:	6e c0       	rjmp	.+220    	; 0x676 <main+0x5e4>
	else if (__tmp > 65535)
     59a:	ce 01       	movw	r24, r28
     59c:	ce 96       	adiw	r24, 0x3e	; 62
     59e:	11 e0       	ldi	r17, 0x01	; 1
     5a0:	fc 01       	movw	r30, r24
     5a2:	60 81       	ld	r22, Z
     5a4:	71 81       	ldd	r23, Z+1	; 0x01
     5a6:	82 81       	ldd	r24, Z+2	; 0x02
     5a8:	93 81       	ldd	r25, Z+3	; 0x03
     5aa:	20 e0       	ldi	r18, 0x00	; 0
     5ac:	3f ef       	ldi	r19, 0xFF	; 255
     5ae:	4f e7       	ldi	r20, 0x7F	; 127
     5b0:	57 e4       	ldi	r21, 0x47	; 71
     5b2:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__gtsf2>
     5b6:	18 16       	cp	r1, r24
     5b8:	0c f0       	brlt	.+2      	; 0x5bc <main+0x52a>
     5ba:	10 e0       	ldi	r17, 0x00	; 0
     5bc:	11 23       	and	r17, r17
     5be:	09 f4       	brne	.+2      	; 0x5c2 <main+0x530>
     5c0:	49 c0       	rjmp	.+146    	; 0x654 <main+0x5c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5c2:	6a ad       	ldd	r22, Y+58	; 0x3a
     5c4:	7b ad       	ldd	r23, Y+59	; 0x3b
     5c6:	8c ad       	ldd	r24, Y+60	; 0x3c
     5c8:	9d ad       	ldd	r25, Y+61	; 0x3d
     5ca:	20 e0       	ldi	r18, 0x00	; 0
     5cc:	30 e0       	ldi	r19, 0x00	; 0
     5ce:	40 e2       	ldi	r20, 0x20	; 32
     5d0:	51 e4       	ldi	r21, 0x41	; 65
     5d2:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__mulsf3>
     5d6:	dc 01       	movw	r26, r24
     5d8:	cb 01       	movw	r24, r22
     5da:	8e 01       	movw	r16, r28
     5dc:	0e 5b       	subi	r16, 0xBE	; 190
     5de:	1f 4f       	sbci	r17, 0xFF	; 255
     5e0:	bc 01       	movw	r22, r24
     5e2:	cd 01       	movw	r24, r26
     5e4:	0e 94 01 06 	call	0xc02	; 0xc02 <__fixunssfsi>
     5e8:	dc 01       	movw	r26, r24
     5ea:	cb 01       	movw	r24, r22
     5ec:	f8 01       	movw	r30, r16
     5ee:	91 83       	std	Z+1, r25	; 0x01
     5f0:	80 83       	st	Z, r24
     5f2:	27 c0       	rjmp	.+78     	; 0x642 <main+0x5b0>
     5f4:	ce 01       	movw	r24, r28
     5f6:	8c 5b       	subi	r24, 0xBC	; 188
     5f8:	9f 4f       	sbci	r25, 0xFF	; 255
     5fa:	20 e9       	ldi	r18, 0x90	; 144
     5fc:	31 e0       	ldi	r19, 0x01	; 1
     5fe:	fc 01       	movw	r30, r24
     600:	31 83       	std	Z+1, r19	; 0x01
     602:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     604:	ce 01       	movw	r24, r28
     606:	8c 5b       	subi	r24, 0xBC	; 188
     608:	9f 4f       	sbci	r25, 0xFF	; 255
     60a:	fc 01       	movw	r30, r24
     60c:	80 81       	ld	r24, Z
     60e:	91 81       	ldd	r25, Z+1	; 0x01
     610:	8c 01       	movw	r16, r24
     612:	c8 01       	movw	r24, r16
     614:	01 97       	sbiw	r24, 0x01	; 1
     616:	f1 f7       	brne	.-4      	; 0x614 <main+0x582>
     618:	8c 01       	movw	r16, r24
     61a:	ce 01       	movw	r24, r28
     61c:	8c 5b       	subi	r24, 0xBC	; 188
     61e:	9f 4f       	sbci	r25, 0xFF	; 255
     620:	fc 01       	movw	r30, r24
     622:	11 83       	std	Z+1, r17	; 0x01
     624:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     626:	ce 01       	movw	r24, r28
     628:	8e 5b       	subi	r24, 0xBE	; 190
     62a:	9f 4f       	sbci	r25, 0xFF	; 255
     62c:	9e 01       	movw	r18, r28
     62e:	2e 5b       	subi	r18, 0xBE	; 190
     630:	3f 4f       	sbci	r19, 0xFF	; 255
     632:	f9 01       	movw	r30, r18
     634:	20 81       	ld	r18, Z
     636:	31 81       	ldd	r19, Z+1	; 0x01
     638:	21 50       	subi	r18, 0x01	; 1
     63a:	30 40       	sbci	r19, 0x00	; 0
     63c:	fc 01       	movw	r30, r24
     63e:	31 83       	std	Z+1, r19	; 0x01
     640:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     642:	ce 01       	movw	r24, r28
     644:	8e 5b       	subi	r24, 0xBE	; 190
     646:	9f 4f       	sbci	r25, 0xFF	; 255
     648:	fc 01       	movw	r30, r24
     64a:	80 81       	ld	r24, Z
     64c:	91 81       	ldd	r25, Z+1	; 0x01
     64e:	00 97       	sbiw	r24, 0x00	; 0
     650:	89 f6       	brne	.-94     	; 0x5f4 <main+0x562>
     652:	4b c0       	rjmp	.+150    	; 0x6ea <main+0x658>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     654:	8e 01       	movw	r16, r28
     656:	0e 5b       	subi	r16, 0xBE	; 190
     658:	1f 4f       	sbci	r17, 0xFF	; 255
     65a:	ce 01       	movw	r24, r28
     65c:	ce 96       	adiw	r24, 0x3e	; 62
     65e:	fc 01       	movw	r30, r24
     660:	60 81       	ld	r22, Z
     662:	71 81       	ldd	r23, Z+1	; 0x01
     664:	82 81       	ldd	r24, Z+2	; 0x02
     666:	93 81       	ldd	r25, Z+3	; 0x03
     668:	0e 94 01 06 	call	0xc02	; 0xc02 <__fixunssfsi>
     66c:	dc 01       	movw	r26, r24
     66e:	cb 01       	movw	r24, r22
     670:	f8 01       	movw	r30, r16
     672:	91 83       	std	Z+1, r25	; 0x01
     674:	80 83       	st	Z, r24
     676:	ce 01       	movw	r24, r28
     678:	8a 5b       	subi	r24, 0xBA	; 186
     67a:	9f 4f       	sbci	r25, 0xFF	; 255
     67c:	9e 01       	movw	r18, r28
     67e:	2e 5b       	subi	r18, 0xBE	; 190
     680:	3f 4f       	sbci	r19, 0xFF	; 255
     682:	f9 01       	movw	r30, r18
     684:	20 81       	ld	r18, Z
     686:	31 81       	ldd	r19, Z+1	; 0x01
     688:	fc 01       	movw	r30, r24
     68a:	31 83       	std	Z+1, r19	; 0x01
     68c:	20 83       	st	Z, r18
     68e:	ce 01       	movw	r24, r28
     690:	8a 5b       	subi	r24, 0xBA	; 186
     692:	9f 4f       	sbci	r25, 0xFF	; 255
     694:	fc 01       	movw	r30, r24
     696:	80 81       	ld	r24, Z
     698:	91 81       	ldd	r25, Z+1	; 0x01
     69a:	8c 01       	movw	r16, r24
     69c:	c8 01       	movw	r24, r16
     69e:	01 97       	sbiw	r24, 0x01	; 1
     6a0:	f1 f7       	brne	.-4      	; 0x69e <main+0x60c>
     6a2:	8c 01       	movw	r16, r24
     6a4:	ce 01       	movw	r24, r28
     6a6:	8a 5b       	subi	r24, 0xBA	; 186
     6a8:	9f 4f       	sbci	r25, 0xFF	; 255
     6aa:	fc 01       	movw	r30, r24
     6ac:	11 83       	std	Z+1, r17	; 0x01
     6ae:	00 83       	st	Z, r16
     6b0:	1c c0       	rjmp	.+56     	; 0x6ea <main+0x658>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     6b2:	6d a9       	ldd	r22, Y+53	; 0x35
     6b4:	7e a9       	ldd	r23, Y+54	; 0x36
     6b6:	8f a9       	ldd	r24, Y+55	; 0x37
     6b8:	98 ad       	ldd	r25, Y+56	; 0x38
     6ba:	0e 94 01 06 	call	0xc02	; 0xc02 <__fixunssfsi>
     6be:	dc 01       	movw	r26, r24
     6c0:	cb 01       	movw	r24, r22
     6c2:	89 af       	std	Y+57, r24	; 0x39
     6c4:	ce 01       	movw	r24, r28
     6c6:	88 5b       	subi	r24, 0xB8	; 184
     6c8:	9f 4f       	sbci	r25, 0xFF	; 255
     6ca:	29 ad       	ldd	r18, Y+57	; 0x39
     6cc:	fc 01       	movw	r30, r24
     6ce:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     6d0:	ce 01       	movw	r24, r28
     6d2:	88 5b       	subi	r24, 0xB8	; 184
     6d4:	9f 4f       	sbci	r25, 0xFF	; 255
     6d6:	fc 01       	movw	r30, r24
     6d8:	80 81       	ld	r24, Z
     6da:	18 2f       	mov	r17, r24
     6dc:	1a 95       	dec	r17
     6de:	f1 f7       	brne	.-4      	; 0x6dc <main+0x64a>
     6e0:	ce 01       	movw	r24, r28
     6e2:	88 5b       	subi	r24, 0xB8	; 184
     6e4:	9f 4f       	sbci	r25, 0xFF	; 255
     6e6:	fc 01       	movw	r30, r24
     6e8:	10 83       	st	Z, r17


    // godzina 1

    wys4;
     6ea:	8b e3       	ldi	r24, 0x3B	; 59
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	27 e7       	ldi	r18, 0x77	; 119
     6f0:	fc 01       	movw	r30, r24
     6f2:	20 83       	st	Z, r18
    PORTB = cyfra4;
     6f4:	88 e3       	ldi	r24, 0x38	; 56
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	20 91 66 00 	lds	r18, 0x0066
     6fc:	30 91 67 00 	lds	r19, 0x0067
     700:	fc 01       	movw	r30, r24
     702:	20 83       	st	Z, r18
    _delay_us(led_delay_ms);
     704:	80 91 68 00 	lds	r24, 0x0068
     708:	90 91 69 00 	lds	r25, 0x0069
     70c:	aa 27       	eor	r26, r26
     70e:	97 fd       	sbrc	r25, 7
     710:	a0 95       	com	r26
     712:	ba 2f       	mov	r27, r26
     714:	bc 01       	movw	r22, r24
     716:	cd 01       	movw	r24, r26
     718:	0e 94 0d 0a 	call	0x141a	; 0x141a <__floatsisf>
     71c:	dc 01       	movw	r26, r24
     71e:	cb 01       	movw	r24, r22
     720:	9e 01       	movw	r18, r28
     722:	27 5b       	subi	r18, 0xB7	; 183
     724:	3f 4f       	sbci	r19, 0xFF	; 255
     726:	f9 01       	movw	r30, r18
     728:	80 83       	st	Z, r24
     72a:	91 83       	std	Z+1, r25	; 0x01
     72c:	a2 83       	std	Z+2, r26	; 0x02
     72e:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     730:	8e 01       	movw	r16, r28
     732:	03 5b       	subi	r16, 0xB3	; 179
     734:	1f 4f       	sbci	r17, 0xFF	; 255
     736:	ce 01       	movw	r24, r28
     738:	87 5b       	subi	r24, 0xB7	; 183
     73a:	9f 4f       	sbci	r25, 0xFF	; 255
     73c:	fc 01       	movw	r30, r24
     73e:	60 81       	ld	r22, Z
     740:	71 81       	ldd	r23, Z+1	; 0x01
     742:	82 81       	ldd	r24, Z+2	; 0x02
     744:	93 81       	ldd	r25, Z+3	; 0x03
     746:	2b ea       	ldi	r18, 0xAB	; 171
     748:	3a ea       	ldi	r19, 0xAA	; 170
     74a:	4a ea       	ldi	r20, 0xAA	; 170
     74c:	50 e4       	ldi	r21, 0x40	; 64
     74e:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__mulsf3>
     752:	dc 01       	movw	r26, r24
     754:	cb 01       	movw	r24, r22
     756:	f8 01       	movw	r30, r16
     758:	80 83       	st	Z, r24
     75a:	91 83       	std	Z+1, r25	; 0x01
     75c:	a2 83       	std	Z+2, r26	; 0x02
     75e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     760:	ce 01       	movw	r24, r28
     762:	83 5b       	subi	r24, 0xB3	; 179
     764:	9f 4f       	sbci	r25, 0xFF	; 255
     766:	11 e0       	ldi	r17, 0x01	; 1
     768:	fc 01       	movw	r30, r24
     76a:	60 81       	ld	r22, Z
     76c:	71 81       	ldd	r23, Z+1	; 0x01
     76e:	82 81       	ldd	r24, Z+2	; 0x02
     770:	93 81       	ldd	r25, Z+3	; 0x03
     772:	20 e0       	ldi	r18, 0x00	; 0
     774:	30 e0       	ldi	r19, 0x00	; 0
     776:	40 e8       	ldi	r20, 0x80	; 128
     778:	5f e3       	ldi	r21, 0x3F	; 63
     77a:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__ltsf2>
     77e:	88 23       	and	r24, r24
     780:	0c f0       	brlt	.+2      	; 0x784 <main+0x6f2>
     782:	10 e0       	ldi	r17, 0x00	; 0
     784:	11 23       	and	r17, r17
     786:	39 f0       	breq	.+14     	; 0x796 <main+0x704>
		__ticks = 1;
     788:	ce 01       	movw	r24, r28
     78a:	8f 5a       	subi	r24, 0xAF	; 175
     78c:	9f 4f       	sbci	r25, 0xFF	; 255
     78e:	21 e0       	ldi	r18, 0x01	; 1
     790:	fc 01       	movw	r30, r24
     792:	20 83       	st	Z, r18
     794:	05 c1       	rjmp	.+522    	; 0x9a0 <__stack+0x141>
	else if (__tmp > 255)
     796:	ce 01       	movw	r24, r28
     798:	83 5b       	subi	r24, 0xB3	; 179
     79a:	9f 4f       	sbci	r25, 0xFF	; 255
     79c:	11 e0       	ldi	r17, 0x01	; 1
     79e:	fc 01       	movw	r30, r24
     7a0:	60 81       	ld	r22, Z
     7a2:	71 81       	ldd	r23, Z+1	; 0x01
     7a4:	82 81       	ldd	r24, Z+2	; 0x02
     7a6:	93 81       	ldd	r25, Z+3	; 0x03
     7a8:	20 e0       	ldi	r18, 0x00	; 0
     7aa:	30 e0       	ldi	r19, 0x00	; 0
     7ac:	4f e7       	ldi	r20, 0x7F	; 127
     7ae:	53 e4       	ldi	r21, 0x43	; 67
     7b0:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__gtsf2>
     7b4:	18 16       	cp	r1, r24
     7b6:	0c f0       	brlt	.+2      	; 0x7ba <main+0x728>
     7b8:	10 e0       	ldi	r17, 0x00	; 0
     7ba:	11 23       	and	r17, r17
     7bc:	09 f4       	brne	.+2      	; 0x7c0 <main+0x72e>
     7be:	df c0       	rjmp	.+446    	; 0x97e <__stack+0x11f>
	{
		_delay_ms(__us / 1000.0);
     7c0:	ce 01       	movw	r24, r28
     7c2:	87 5b       	subi	r24, 0xB7	; 183
     7c4:	9f 4f       	sbci	r25, 0xFF	; 255
     7c6:	fc 01       	movw	r30, r24
     7c8:	60 81       	ld	r22, Z
     7ca:	71 81       	ldd	r23, Z+1	; 0x01
     7cc:	82 81       	ldd	r24, Z+2	; 0x02
     7ce:	93 81       	ldd	r25, Z+3	; 0x03
     7d0:	20 e0       	ldi	r18, 0x00	; 0
     7d2:	30 e0       	ldi	r19, 0x00	; 0
     7d4:	4a e7       	ldi	r20, 0x7A	; 122
     7d6:	54 e4       	ldi	r21, 0x44	; 68
     7d8:	0e 94 cf 08 	call	0x119e	; 0x119e <__divsf3>
     7dc:	dc 01       	movw	r26, r24
     7de:	cb 01       	movw	r24, r22
     7e0:	9e 01       	movw	r18, r28
     7e2:	2e 5a       	subi	r18, 0xAE	; 174
     7e4:	3f 4f       	sbci	r19, 0xFF	; 255
     7e6:	f9 01       	movw	r30, r18
     7e8:	80 83       	st	Z, r24
     7ea:	91 83       	std	Z+1, r25	; 0x01
     7ec:	a2 83       	std	Z+2, r26	; 0x02
     7ee:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     7f0:	8e 01       	movw	r16, r28
     7f2:	0a 5a       	subi	r16, 0xAA	; 170
     7f4:	1f 4f       	sbci	r17, 0xFF	; 255
     7f6:	ce 01       	movw	r24, r28
     7f8:	8e 5a       	subi	r24, 0xAE	; 174
     7fa:	9f 4f       	sbci	r25, 0xFF	; 255
     7fc:	fc 01       	movw	r30, r24
     7fe:	60 81       	ld	r22, Z
     800:	71 81       	ldd	r23, Z+1	; 0x01
     802:	82 81       	ldd	r24, Z+2	; 0x02
     804:	93 81       	ldd	r25, Z+3	; 0x03
     806:	20 e0       	ldi	r18, 0x00	; 0
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	4a e7       	ldi	r20, 0x7A	; 122
     80c:	55 e4       	ldi	r21, 0x45	; 69
     80e:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__mulsf3>
     812:	dc 01       	movw	r26, r24
     814:	cb 01       	movw	r24, r22
     816:	f8 01       	movw	r30, r16
     818:	80 83       	st	Z, r24
     81a:	91 83       	std	Z+1, r25	; 0x01
     81c:	a2 83       	std	Z+2, r26	; 0x02
     81e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     820:	ce 01       	movw	r24, r28
     822:	8a 5a       	subi	r24, 0xAA	; 170
     824:	9f 4f       	sbci	r25, 0xFF	; 255
     826:	11 e0       	ldi	r17, 0x01	; 1
     828:	fc 01       	movw	r30, r24
     82a:	60 81       	ld	r22, Z
     82c:	71 81       	ldd	r23, Z+1	; 0x01
     82e:	82 81       	ldd	r24, Z+2	; 0x02
     830:	93 81       	ldd	r25, Z+3	; 0x03
     832:	20 e0       	ldi	r18, 0x00	; 0
     834:	30 e0       	ldi	r19, 0x00	; 0
     836:	40 e8       	ldi	r20, 0x80	; 128
     838:	5f e3       	ldi	r21, 0x3F	; 63
     83a:	0e 94 dd 09 	call	0x13ba	; 0x13ba <__ltsf2>
     83e:	88 23       	and	r24, r24
     840:	0c f0       	brlt	.+2      	; 0x844 <main+0x7b2>
     842:	10 e0       	ldi	r17, 0x00	; 0
     844:	11 23       	and	r17, r17
     846:	49 f0       	breq	.+18     	; 0x85a <main+0x7c8>
		__ticks = 1;
     848:	ce 01       	movw	r24, r28
     84a:	86 5a       	subi	r24, 0xA6	; 166
     84c:	9f 4f       	sbci	r25, 0xFF	; 255
     84e:	21 e0       	ldi	r18, 0x01	; 1
     850:	30 e0       	ldi	r19, 0x00	; 0
     852:	fc 01       	movw	r30, r24
     854:	31 83       	std	Z+1, r19	; 0x01
     856:	20 83       	st	Z, r18
     858:	74 c0       	rjmp	.+232    	; 0x942 <__stack+0xe3>
	else if (__tmp > 65535)
     85a:	ce 01       	movw	r24, r28
     85c:	8a 5a       	subi	r24, 0xAA	; 170
     85e:	9f 4f       	sbci	r25, 0xFF	; 255
     860:	11 e0       	ldi	r17, 0x01	; 1
     862:	fc 01       	movw	r30, r24
     864:	60 81       	ld	r22, Z
     866:	71 81       	ldd	r23, Z+1	; 0x01
     868:	82 81       	ldd	r24, Z+2	; 0x02
     86a:	93 81       	ldd	r25, Z+3	; 0x03
     86c:	20 e0       	ldi	r18, 0x00	; 0
     86e:	3f ef       	ldi	r19, 0xFF	; 255
     870:	4f e7       	ldi	r20, 0x7F	; 127
     872:	57 e4       	ldi	r21, 0x47	; 71
     874:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__gtsf2>
     878:	18 16       	cp	r1, r24
     87a:	0c f0       	brlt	.+2      	; 0x87e <__stack+0x1f>
     87c:	10 e0       	ldi	r17, 0x00	; 0
     87e:	11 23       	and	r17, r17
     880:	09 f4       	brne	.+2      	; 0x884 <__stack+0x25>
     882:	4d c0       	rjmp	.+154    	; 0x91e <__stack+0xbf>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     884:	ce 01       	movw	r24, r28
     886:	8e 5a       	subi	r24, 0xAE	; 174
     888:	9f 4f       	sbci	r25, 0xFF	; 255
     88a:	fc 01       	movw	r30, r24
     88c:	60 81       	ld	r22, Z
     88e:	71 81       	ldd	r23, Z+1	; 0x01
     890:	82 81       	ldd	r24, Z+2	; 0x02
     892:	93 81       	ldd	r25, Z+3	; 0x03
     894:	20 e0       	ldi	r18, 0x00	; 0
     896:	30 e0       	ldi	r19, 0x00	; 0
     898:	40 e2       	ldi	r20, 0x20	; 32
     89a:	51 e4       	ldi	r21, 0x41	; 65
     89c:	0e 94 d5 07 	call	0xfaa	; 0xfaa <__mulsf3>
     8a0:	dc 01       	movw	r26, r24
     8a2:	cb 01       	movw	r24, r22
     8a4:	8e 01       	movw	r16, r28
     8a6:	06 5a       	subi	r16, 0xA6	; 166
     8a8:	1f 4f       	sbci	r17, 0xFF	; 255
     8aa:	bc 01       	movw	r22, r24
     8ac:	cd 01       	movw	r24, r26
     8ae:	0e 94 01 06 	call	0xc02	; 0xc02 <__fixunssfsi>
     8b2:	dc 01       	movw	r26, r24
     8b4:	cb 01       	movw	r24, r22
     8b6:	f8 01       	movw	r30, r16
     8b8:	91 83       	std	Z+1, r25	; 0x01
     8ba:	80 83       	st	Z, r24
     8bc:	27 c0       	rjmp	.+78     	; 0x90c <__stack+0xad>
     8be:	ce 01       	movw	r24, r28
     8c0:	84 5a       	subi	r24, 0xA4	; 164
     8c2:	9f 4f       	sbci	r25, 0xFF	; 255
     8c4:	20 e9       	ldi	r18, 0x90	; 144
     8c6:	31 e0       	ldi	r19, 0x01	; 1
     8c8:	fc 01       	movw	r30, r24
     8ca:	31 83       	std	Z+1, r19	; 0x01
     8cc:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     8ce:	ce 01       	movw	r24, r28
     8d0:	84 5a       	subi	r24, 0xA4	; 164
     8d2:	9f 4f       	sbci	r25, 0xFF	; 255
     8d4:	fc 01       	movw	r30, r24
     8d6:	80 81       	ld	r24, Z
     8d8:	91 81       	ldd	r25, Z+1	; 0x01
     8da:	8c 01       	movw	r16, r24
     8dc:	c8 01       	movw	r24, r16
     8de:	01 97       	sbiw	r24, 0x01	; 1
     8e0:	f1 f7       	brne	.-4      	; 0x8de <__stack+0x7f>
     8e2:	8c 01       	movw	r16, r24
     8e4:	ce 01       	movw	r24, r28
     8e6:	84 5a       	subi	r24, 0xA4	; 164
     8e8:	9f 4f       	sbci	r25, 0xFF	; 255
     8ea:	fc 01       	movw	r30, r24
     8ec:	11 83       	std	Z+1, r17	; 0x01
     8ee:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     8f0:	ce 01       	movw	r24, r28
     8f2:	86 5a       	subi	r24, 0xA6	; 166
     8f4:	9f 4f       	sbci	r25, 0xFF	; 255
     8f6:	9e 01       	movw	r18, r28
     8f8:	26 5a       	subi	r18, 0xA6	; 166
     8fa:	3f 4f       	sbci	r19, 0xFF	; 255
     8fc:	f9 01       	movw	r30, r18
     8fe:	20 81       	ld	r18, Z
     900:	31 81       	ldd	r19, Z+1	; 0x01
     902:	21 50       	subi	r18, 0x01	; 1
     904:	30 40       	sbci	r19, 0x00	; 0
     906:	fc 01       	movw	r30, r24
     908:	31 83       	std	Z+1, r19	; 0x01
     90a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     90c:	ce 01       	movw	r24, r28
     90e:	86 5a       	subi	r24, 0xA6	; 166
     910:	9f 4f       	sbci	r25, 0xFF	; 255
     912:	fc 01       	movw	r30, r24
     914:	80 81       	ld	r24, Z
     916:	91 81       	ldd	r25, Z+1	; 0x01
     918:	00 97       	sbiw	r24, 0x00	; 0
     91a:	89 f6       	brne	.-94     	; 0x8be <__stack+0x5f>
     91c:	58 c0       	rjmp	.+176    	; 0x9ce <__stack+0x16f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     91e:	8e 01       	movw	r16, r28
     920:	06 5a       	subi	r16, 0xA6	; 166
     922:	1f 4f       	sbci	r17, 0xFF	; 255
     924:	ce 01       	movw	r24, r28
     926:	8a 5a       	subi	r24, 0xAA	; 170
     928:	9f 4f       	sbci	r25, 0xFF	; 255
     92a:	fc 01       	movw	r30, r24
     92c:	60 81       	ld	r22, Z
     92e:	71 81       	ldd	r23, Z+1	; 0x01
     930:	82 81       	ldd	r24, Z+2	; 0x02
     932:	93 81       	ldd	r25, Z+3	; 0x03
     934:	0e 94 01 06 	call	0xc02	; 0xc02 <__fixunssfsi>
     938:	dc 01       	movw	r26, r24
     93a:	cb 01       	movw	r24, r22
     93c:	f8 01       	movw	r30, r16
     93e:	91 83       	std	Z+1, r25	; 0x01
     940:	80 83       	st	Z, r24
     942:	ce 01       	movw	r24, r28
     944:	82 5a       	subi	r24, 0xA2	; 162
     946:	9f 4f       	sbci	r25, 0xFF	; 255
     948:	9e 01       	movw	r18, r28
     94a:	26 5a       	subi	r18, 0xA6	; 166
     94c:	3f 4f       	sbci	r19, 0xFF	; 255
     94e:	f9 01       	movw	r30, r18
     950:	20 81       	ld	r18, Z
     952:	31 81       	ldd	r19, Z+1	; 0x01
     954:	fc 01       	movw	r30, r24
     956:	31 83       	std	Z+1, r19	; 0x01
     958:	20 83       	st	Z, r18
     95a:	ce 01       	movw	r24, r28
     95c:	82 5a       	subi	r24, 0xA2	; 162
     95e:	9f 4f       	sbci	r25, 0xFF	; 255
     960:	fc 01       	movw	r30, r24
     962:	80 81       	ld	r24, Z
     964:	91 81       	ldd	r25, Z+1	; 0x01
     966:	8c 01       	movw	r16, r24
     968:	c8 01       	movw	r24, r16
     96a:	01 97       	sbiw	r24, 0x01	; 1
     96c:	f1 f7       	brne	.-4      	; 0x96a <__stack+0x10b>
     96e:	8c 01       	movw	r16, r24
     970:	ce 01       	movw	r24, r28
     972:	82 5a       	subi	r24, 0xA2	; 162
     974:	9f 4f       	sbci	r25, 0xFF	; 255
     976:	fc 01       	movw	r30, r24
     978:	11 83       	std	Z+1, r17	; 0x01
     97a:	00 83       	st	Z, r16
     97c:	28 c0       	rjmp	.+80     	; 0x9ce <__stack+0x16f>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     97e:	8e 01       	movw	r16, r28
     980:	0f 5a       	subi	r16, 0xAF	; 175
     982:	1f 4f       	sbci	r17, 0xFF	; 255
     984:	ce 01       	movw	r24, r28
     986:	83 5b       	subi	r24, 0xB3	; 179
     988:	9f 4f       	sbci	r25, 0xFF	; 255
     98a:	fc 01       	movw	r30, r24
     98c:	60 81       	ld	r22, Z
     98e:	71 81       	ldd	r23, Z+1	; 0x01
     990:	82 81       	ldd	r24, Z+2	; 0x02
     992:	93 81       	ldd	r25, Z+3	; 0x03
     994:	0e 94 01 06 	call	0xc02	; 0xc02 <__fixunssfsi>
     998:	dc 01       	movw	r26, r24
     99a:	cb 01       	movw	r24, r22
     99c:	f8 01       	movw	r30, r16
     99e:	80 83       	st	Z, r24
     9a0:	ce 01       	movw	r24, r28
     9a2:	80 5a       	subi	r24, 0xA0	; 160
     9a4:	9f 4f       	sbci	r25, 0xFF	; 255
     9a6:	9e 01       	movw	r18, r28
     9a8:	2f 5a       	subi	r18, 0xAF	; 175
     9aa:	3f 4f       	sbci	r19, 0xFF	; 255
     9ac:	f9 01       	movw	r30, r18
     9ae:	20 81       	ld	r18, Z
     9b0:	fc 01       	movw	r30, r24
     9b2:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     9b4:	ce 01       	movw	r24, r28
     9b6:	80 5a       	subi	r24, 0xA0	; 160
     9b8:	9f 4f       	sbci	r25, 0xFF	; 255
     9ba:	fc 01       	movw	r30, r24
     9bc:	80 81       	ld	r24, Z
     9be:	18 2f       	mov	r17, r24
     9c0:	1a 95       	dec	r17
     9c2:	f1 f7       	brne	.-4      	; 0x9c0 <__stack+0x161>
     9c4:	ce 01       	movw	r24, r28
     9c6:	80 5a       	subi	r24, 0xA0	; 160
     9c8:	9f 4f       	sbci	r25, 0xFF	; 255
     9ca:	fc 01       	movw	r30, r24
     9cc:	10 83       	st	Z, r17

    // ok 25 mikrosekundy



    time_add++;
     9ce:	80 91 72 01 	lds	r24, 0x0172
     9d2:	90 91 73 01 	lds	r25, 0x0173
     9d6:	01 96       	adiw	r24, 0x01	; 1
     9d8:	90 93 73 01 	sts	0x0173, r25
     9dc:	80 93 72 01 	sts	0x0172, r24

   if (time_add == 500)
     9e0:	80 91 72 01 	lds	r24, 0x0172
     9e4:	90 91 73 01 	lds	r25, 0x0173
     9e8:	f1 e0       	ldi	r31, 0x01	; 1
     9ea:	84 3f       	cpi	r24, 0xF4	; 244
     9ec:	9f 07       	cpc	r25, r31
     9ee:	09 f0       	breq	.+2      	; 0x9f2 <__stack+0x193>
     9f0:	68 cb       	rjmp	.-2352   	; 0xc2 <main+0x30>
    {

        if (tik == 0)
     9f2:	80 91 74 01 	lds	r24, 0x0174
     9f6:	90 91 75 01 	lds	r25, 0x0175
     9fa:	00 97       	sbiw	r24, 0x00	; 0
     9fc:	59 f5       	brne	.+86     	; 0xa54 <__stack+0x1f5>
        {
            cyfra1 = cyfra(3);
     9fe:	83 e0       	ldi	r24, 0x03	; 3
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	0e 94 53 05 	call	0xaa6	; 0xaa6 <cyfra>
     a06:	90 93 61 00 	sts	0x0061, r25
     a0a:	80 93 60 00 	sts	0x0060, r24
            cyfra2 = cyfra(2);
     a0e:	82 e0       	ldi	r24, 0x02	; 2
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	0e 94 53 05 	call	0xaa6	; 0xaa6 <cyfra>
     a16:	90 93 63 00 	sts	0x0063, r25
     a1a:	80 93 62 00 	sts	0x0062, r24
            cyfra3 = cyfra(1);
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	90 e0       	ldi	r25, 0x00	; 0
     a22:	0e 94 53 05 	call	0xaa6	; 0xaa6 <cyfra>
     a26:	90 93 65 00 	sts	0x0065, r25
     a2a:	80 93 64 00 	sts	0x0064, r24
            cyfra4 = cyfra(0);
     a2e:	80 e0       	ldi	r24, 0x00	; 0
     a30:	90 e0       	ldi	r25, 0x00	; 0
     a32:	0e 94 53 05 	call	0xaa6	; 0xaa6 <cyfra>
     a36:	90 93 67 00 	sts	0x0067, r25
     a3a:	80 93 66 00 	sts	0x0066, r24

            time_add = 0;
     a3e:	10 92 73 01 	sts	0x0173, r1
     a42:	10 92 72 01 	sts	0x0172, r1
            tik = 1;
     a46:	81 e0       	ldi	r24, 0x01	; 1
     a48:	90 e0       	ldi	r25, 0x00	; 0
     a4a:	90 93 75 01 	sts	0x0175, r25
     a4e:	80 93 74 01 	sts	0x0174, r24

    }



    };
     a52:	38 cb       	rjmp	.-2448   	; 0xc4 <main+0x32>
            tik = 1;
        }
        else
        {

            cyfra1 = cyfra(0);
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	0e 94 53 05 	call	0xaa6	; 0xaa6 <cyfra>
     a5c:	90 93 61 00 	sts	0x0061, r25
     a60:	80 93 60 00 	sts	0x0060, r24
            cyfra2 = cyfra(1);
     a64:	81 e0       	ldi	r24, 0x01	; 1
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	0e 94 53 05 	call	0xaa6	; 0xaa6 <cyfra>
     a6c:	90 93 63 00 	sts	0x0063, r25
     a70:	80 93 62 00 	sts	0x0062, r24
            cyfra3 = cyfra(2);
     a74:	82 e0       	ldi	r24, 0x02	; 2
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	0e 94 53 05 	call	0xaa6	; 0xaa6 <cyfra>
     a7c:	90 93 65 00 	sts	0x0065, r25
     a80:	80 93 64 00 	sts	0x0064, r24
            cyfra4 = cyfra(3);
     a84:	83 e0       	ldi	r24, 0x03	; 3
     a86:	90 e0       	ldi	r25, 0x00	; 0
     a88:	0e 94 53 05 	call	0xaa6	; 0xaa6 <cyfra>
     a8c:	90 93 67 00 	sts	0x0067, r25
     a90:	80 93 66 00 	sts	0x0066, r24

            time_add = 0;
     a94:	10 92 73 01 	sts	0x0173, r1
     a98:	10 92 72 01 	sts	0x0172, r1
            tik = 0;
     a9c:	10 92 75 01 	sts	0x0175, r1
     aa0:	10 92 74 01 	sts	0x0174, r1

    }



    };
     aa4:	0f cb       	rjmp	.-2530   	; 0xc4 <main+0x32>

00000aa6 <cyfra>:
}



int cyfra(int _cyfra)
{
     aa6:	df 93       	push	r29
     aa8:	cf 93       	push	r28
     aaa:	00 d0       	rcall	.+0      	; 0xaac <cyfra+0x6>
     aac:	cd b7       	in	r28, 0x3d	; 61
     aae:	de b7       	in	r29, 0x3e	; 62
     ab0:	9a 83       	std	Y+2, r25	; 0x02
     ab2:	89 83       	std	Y+1, r24	; 0x01
		switch(_cyfra)
     ab4:	89 81       	ldd	r24, Y+1	; 0x01
     ab6:	9a 81       	ldd	r25, Y+2	; 0x02
     ab8:	84 30       	cpi	r24, 0x04	; 4
     aba:	91 05       	cpc	r25, r1
     abc:	99 f1       	breq	.+102    	; 0xb24 <cyfra+0x7e>
     abe:	85 30       	cpi	r24, 0x05	; 5
     ac0:	91 05       	cpc	r25, r1
     ac2:	84 f4       	brge	.+32     	; 0xae4 <cyfra+0x3e>
     ac4:	81 30       	cpi	r24, 0x01	; 1
     ac6:	91 05       	cpc	r25, r1
     ac8:	21 f1       	breq	.+72     	; 0xb12 <cyfra+0x6c>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	91 05       	cpc	r25, r1
     ace:	1c f4       	brge	.+6      	; 0xad6 <cyfra+0x30>
     ad0:	00 97       	sbiw	r24, 0x00	; 0
     ad2:	e1 f0       	breq	.+56     	; 0xb0c <cyfra+0x66>
     ad4:	39 c0       	rjmp	.+114    	; 0xb48 <cyfra+0xa2>
     ad6:	82 30       	cpi	r24, 0x02	; 2
     ad8:	91 05       	cpc	r25, r1
     ada:	f1 f0       	breq	.+60     	; 0xb18 <cyfra+0x72>
     adc:	83 30       	cpi	r24, 0x03	; 3
     ade:	91 05       	cpc	r25, r1
     ae0:	f1 f0       	breq	.+60     	; 0xb1e <cyfra+0x78>
     ae2:	32 c0       	rjmp	.+100    	; 0xb48 <cyfra+0xa2>
     ae4:	87 30       	cpi	r24, 0x07	; 7
     ae6:	91 05       	cpc	r25, r1
     ae8:	31 f1       	breq	.+76     	; 0xb36 <cyfra+0x90>
     aea:	88 30       	cpi	r24, 0x08	; 8
     aec:	91 05       	cpc	r25, r1
     aee:	3c f4       	brge	.+14     	; 0xafe <cyfra+0x58>
     af0:	85 30       	cpi	r24, 0x05	; 5
     af2:	91 05       	cpc	r25, r1
     af4:	d1 f0       	breq	.+52     	; 0xb2a <cyfra+0x84>
     af6:	86 30       	cpi	r24, 0x06	; 6
     af8:	91 05       	cpc	r25, r1
     afa:	d1 f0       	breq	.+52     	; 0xb30 <cyfra+0x8a>
     afc:	25 c0       	rjmp	.+74     	; 0xb48 <cyfra+0xa2>
     afe:	88 30       	cpi	r24, 0x08	; 8
     b00:	91 05       	cpc	r25, r1
     b02:	e1 f0       	breq	.+56     	; 0xb3c <cyfra+0x96>
     b04:	89 30       	cpi	r24, 0x09	; 9
     b06:	91 05       	cpc	r25, r1
     b08:	e1 f0       	breq	.+56     	; 0xb42 <cyfra+0x9c>
     b0a:	1e c0       	rjmp	.+60     	; 0xb48 <cyfra+0xa2>
		{
		case 0:
		return 0b11000000; //0
     b0c:	80 ec       	ldi	r24, 0xC0	; 192
     b0e:	90 e0       	ldi	r25, 0x00	; 0
     b10:	1c c0       	rjmp	.+56     	; 0xb4a <cyfra+0xa4>

		case 1:
		return 0b11111001; //1
     b12:	89 ef       	ldi	r24, 0xF9	; 249
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	19 c0       	rjmp	.+50     	; 0xb4a <cyfra+0xa4>

		case 2:
		return 0b10100100; //2
     b18:	84 ea       	ldi	r24, 0xA4	; 164
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	16 c0       	rjmp	.+44     	; 0xb4a <cyfra+0xa4>

		case 3:
		return 0b10110000; //3
     b1e:	80 eb       	ldi	r24, 0xB0	; 176
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	13 c0       	rjmp	.+38     	; 0xb4a <cyfra+0xa4>

		case 4:
		return 0b10011001; //4
     b24:	89 e9       	ldi	r24, 0x99	; 153
     b26:	90 e0       	ldi	r25, 0x00	; 0
     b28:	10 c0       	rjmp	.+32     	; 0xb4a <cyfra+0xa4>

		case 5:
		return 0b10010010; //5
     b2a:	82 e9       	ldi	r24, 0x92	; 146
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	0d c0       	rjmp	.+26     	; 0xb4a <cyfra+0xa4>

		case 6:
		return 0b10000010; //6
     b30:	82 e8       	ldi	r24, 0x82	; 130
     b32:	90 e0       	ldi	r25, 0x00	; 0
     b34:	0a c0       	rjmp	.+20     	; 0xb4a <cyfra+0xa4>

		case 7:
		return 0b11111000; //7
     b36:	88 ef       	ldi	r24, 0xF8	; 248
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	07 c0       	rjmp	.+14     	; 0xb4a <cyfra+0xa4>

		case 8:
		return 0b10000000; //8
     b3c:	80 e8       	ldi	r24, 0x80	; 128
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	04 c0       	rjmp	.+8      	; 0xb4a <cyfra+0xa4>

		case 9:
		return 0b10010000; //9
     b42:	80 e9       	ldi	r24, 0x90	; 144
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	01 c0       	rjmp	.+2      	; 0xb4a <cyfra+0xa4>
     b48:	00 c0       	rjmp	.+0      	; 0xb4a <cyfra+0xa4>



		}
}
     b4a:	0f 90       	pop	r0
     b4c:	0f 90       	pop	r0
     b4e:	cf 91       	pop	r28
     b50:	df 91       	pop	r29
     b52:	08 95       	ret

00000b54 <cyfra_tok>:

int cyfra_tok(int _cyfra)
{
     b54:	df 93       	push	r29
     b56:	cf 93       	push	r28
     b58:	00 d0       	rcall	.+0      	; 0xb5a <cyfra_tok+0x6>
     b5a:	cd b7       	in	r28, 0x3d	; 61
     b5c:	de b7       	in	r29, 0x3e	; 62
     b5e:	9a 83       	std	Y+2, r25	; 0x02
     b60:	89 83       	std	Y+1, r24	; 0x01
		switch(_cyfra)
     b62:	89 81       	ldd	r24, Y+1	; 0x01
     b64:	9a 81       	ldd	r25, Y+2	; 0x02
     b66:	84 30       	cpi	r24, 0x04	; 4
     b68:	91 05       	cpc	r25, r1
     b6a:	99 f1       	breq	.+102    	; 0xbd2 <cyfra_tok+0x7e>
     b6c:	85 30       	cpi	r24, 0x05	; 5
     b6e:	91 05       	cpc	r25, r1
     b70:	84 f4       	brge	.+32     	; 0xb92 <cyfra_tok+0x3e>
     b72:	81 30       	cpi	r24, 0x01	; 1
     b74:	91 05       	cpc	r25, r1
     b76:	21 f1       	breq	.+72     	; 0xbc0 <cyfra_tok+0x6c>
     b78:	82 30       	cpi	r24, 0x02	; 2
     b7a:	91 05       	cpc	r25, r1
     b7c:	1c f4       	brge	.+6      	; 0xb84 <cyfra_tok+0x30>
     b7e:	00 97       	sbiw	r24, 0x00	; 0
     b80:	e1 f0       	breq	.+56     	; 0xbba <cyfra_tok+0x66>
     b82:	39 c0       	rjmp	.+114    	; 0xbf6 <cyfra_tok+0xa2>
     b84:	82 30       	cpi	r24, 0x02	; 2
     b86:	91 05       	cpc	r25, r1
     b88:	f1 f0       	breq	.+60     	; 0xbc6 <cyfra_tok+0x72>
     b8a:	83 30       	cpi	r24, 0x03	; 3
     b8c:	91 05       	cpc	r25, r1
     b8e:	f1 f0       	breq	.+60     	; 0xbcc <cyfra_tok+0x78>
     b90:	32 c0       	rjmp	.+100    	; 0xbf6 <cyfra_tok+0xa2>
     b92:	87 30       	cpi	r24, 0x07	; 7
     b94:	91 05       	cpc	r25, r1
     b96:	31 f1       	breq	.+76     	; 0xbe4 <cyfra_tok+0x90>
     b98:	88 30       	cpi	r24, 0x08	; 8
     b9a:	91 05       	cpc	r25, r1
     b9c:	3c f4       	brge	.+14     	; 0xbac <cyfra_tok+0x58>
     b9e:	85 30       	cpi	r24, 0x05	; 5
     ba0:	91 05       	cpc	r25, r1
     ba2:	d1 f0       	breq	.+52     	; 0xbd8 <cyfra_tok+0x84>
     ba4:	86 30       	cpi	r24, 0x06	; 6
     ba6:	91 05       	cpc	r25, r1
     ba8:	d1 f0       	breq	.+52     	; 0xbde <cyfra_tok+0x8a>
     baa:	25 c0       	rjmp	.+74     	; 0xbf6 <cyfra_tok+0xa2>
     bac:	88 30       	cpi	r24, 0x08	; 8
     bae:	91 05       	cpc	r25, r1
     bb0:	e1 f0       	breq	.+56     	; 0xbea <cyfra_tok+0x96>
     bb2:	89 30       	cpi	r24, 0x09	; 9
     bb4:	91 05       	cpc	r25, r1
     bb6:	e1 f0       	breq	.+56     	; 0xbf0 <cyfra_tok+0x9c>
     bb8:	1e c0       	rjmp	.+60     	; 0xbf6 <cyfra_tok+0xa2>
		{
		case 0:
		return 0b01000000; //0
     bba:	80 e4       	ldi	r24, 0x40	; 64
     bbc:	90 e0       	ldi	r25, 0x00	; 0
     bbe:	1c c0       	rjmp	.+56     	; 0xbf8 <cyfra_tok+0xa4>

		case 1:
		return 0b01111001; //1
     bc0:	89 e7       	ldi	r24, 0x79	; 121
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	19 c0       	rjmp	.+50     	; 0xbf8 <cyfra_tok+0xa4>

		case 2:
		return 0b00100100; //2
     bc6:	84 e2       	ldi	r24, 0x24	; 36
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	16 c0       	rjmp	.+44     	; 0xbf8 <cyfra_tok+0xa4>

		case 3:
		return 0b00110000; //3
     bcc:	80 e3       	ldi	r24, 0x30	; 48
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	13 c0       	rjmp	.+38     	; 0xbf8 <cyfra_tok+0xa4>

		case 4:
		return 0b00011001; //4
     bd2:	89 e1       	ldi	r24, 0x19	; 25
     bd4:	90 e0       	ldi	r25, 0x00	; 0
     bd6:	10 c0       	rjmp	.+32     	; 0xbf8 <cyfra_tok+0xa4>

		case 5:
		return 0b00010010; //5
     bd8:	82 e1       	ldi	r24, 0x12	; 18
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	0d c0       	rjmp	.+26     	; 0xbf8 <cyfra_tok+0xa4>

		case 6:
		return 0b00000010; //6
     bde:	82 e0       	ldi	r24, 0x02	; 2
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	0a c0       	rjmp	.+20     	; 0xbf8 <cyfra_tok+0xa4>

		case 7:
		return 0b01111000; //7
     be4:	88 e7       	ldi	r24, 0x78	; 120
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	07 c0       	rjmp	.+14     	; 0xbf8 <cyfra_tok+0xa4>

		case 8:
		return 0b00000000; //8
     bea:	80 e0       	ldi	r24, 0x00	; 0
     bec:	90 e0       	ldi	r25, 0x00	; 0
     bee:	04 c0       	rjmp	.+8      	; 0xbf8 <cyfra_tok+0xa4>

		case 9:
		return 0b00010000; //9
     bf0:	80 e1       	ldi	r24, 0x10	; 16
     bf2:	90 e0       	ldi	r25, 0x00	; 0
     bf4:	01 c0       	rjmp	.+2      	; 0xbf8 <cyfra_tok+0xa4>
     bf6:	00 c0       	rjmp	.+0      	; 0xbf8 <cyfra_tok+0xa4>



		}
}
     bf8:	0f 90       	pop	r0
     bfa:	0f 90       	pop	r0
     bfc:	cf 91       	pop	r28
     bfe:	df 91       	pop	r29
     c00:	08 95       	ret

00000c02 <__fixunssfsi>:
     c02:	ef 92       	push	r14
     c04:	ff 92       	push	r15
     c06:	0f 93       	push	r16
     c08:	1f 93       	push	r17
     c0a:	7b 01       	movw	r14, r22
     c0c:	8c 01       	movw	r16, r24
     c0e:	20 e0       	ldi	r18, 0x00	; 0
     c10:	30 e0       	ldi	r19, 0x00	; 0
     c12:	40 e0       	ldi	r20, 0x00	; 0
     c14:	5f e4       	ldi	r21, 0x4F	; 79
     c16:	0e 94 ad 09 	call	0x135a	; 0x135a <__gesf2>
     c1a:	87 fd       	sbrc	r24, 7
     c1c:	11 c0       	rjmp	.+34     	; 0xc40 <__fixunssfsi+0x3e>
     c1e:	c8 01       	movw	r24, r16
     c20:	b7 01       	movw	r22, r14
     c22:	20 e0       	ldi	r18, 0x00	; 0
     c24:	30 e0       	ldi	r19, 0x00	; 0
     c26:	40 e0       	ldi	r20, 0x00	; 0
     c28:	5f e4       	ldi	r21, 0x4F	; 79
     c2a:	0e 94 a4 07 	call	0xf48	; 0xf48 <__subsf3>
     c2e:	0e 94 6d 0a 	call	0x14da	; 0x14da <__fixsfsi>
     c32:	9b 01       	movw	r18, r22
     c34:	ac 01       	movw	r20, r24
     c36:	20 50       	subi	r18, 0x00	; 0
     c38:	30 40       	sbci	r19, 0x00	; 0
     c3a:	40 40       	sbci	r20, 0x00	; 0
     c3c:	50 48       	sbci	r21, 0x80	; 128
     c3e:	06 c0       	rjmp	.+12     	; 0xc4c <__fixunssfsi+0x4a>
     c40:	c8 01       	movw	r24, r16
     c42:	b7 01       	movw	r22, r14
     c44:	0e 94 6d 0a 	call	0x14da	; 0x14da <__fixsfsi>
     c48:	9b 01       	movw	r18, r22
     c4a:	ac 01       	movw	r20, r24
     c4c:	b9 01       	movw	r22, r18
     c4e:	ca 01       	movw	r24, r20
     c50:	1f 91       	pop	r17
     c52:	0f 91       	pop	r16
     c54:	ff 90       	pop	r15
     c56:	ef 90       	pop	r14
     c58:	08 95       	ret

00000c5a <_fpadd_parts>:
     c5a:	a0 e0       	ldi	r26, 0x00	; 0
     c5c:	b0 e0       	ldi	r27, 0x00	; 0
     c5e:	e3 e3       	ldi	r30, 0x33	; 51
     c60:	f6 e0       	ldi	r31, 0x06	; 6
     c62:	0c 94 ad 0c 	jmp	0x195a	; 0x195a <__prologue_saves__+0x8>
     c66:	fc 01       	movw	r30, r24
     c68:	ea 01       	movw	r28, r20
     c6a:	80 81       	ld	r24, Z
     c6c:	82 30       	cpi	r24, 0x02	; 2
     c6e:	08 f4       	brcc	.+2      	; 0xc72 <_fpadd_parts+0x18>
     c70:	38 c1       	rjmp	.+624    	; 0xee2 <_fpadd_parts+0x288>
     c72:	db 01       	movw	r26, r22
     c74:	9c 91       	ld	r25, X
     c76:	92 30       	cpi	r25, 0x02	; 2
     c78:	08 f4       	brcc	.+2      	; 0xc7c <_fpadd_parts+0x22>
     c7a:	30 c1       	rjmp	.+608    	; 0xedc <_fpadd_parts+0x282>
     c7c:	84 30       	cpi	r24, 0x04	; 4
     c7e:	59 f4       	brne	.+22     	; 0xc96 <_fpadd_parts+0x3c>
     c80:	94 30       	cpi	r25, 0x04	; 4
     c82:	09 f0       	breq	.+2      	; 0xc86 <_fpadd_parts+0x2c>
     c84:	2e c1       	rjmp	.+604    	; 0xee2 <_fpadd_parts+0x288>
     c86:	91 81       	ldd	r25, Z+1	; 0x01
     c88:	11 96       	adiw	r26, 0x01	; 1
     c8a:	8c 91       	ld	r24, X
     c8c:	11 97       	sbiw	r26, 0x01	; 1
     c8e:	98 17       	cp	r25, r24
     c90:	09 f0       	breq	.+2      	; 0xc94 <_fpadd_parts+0x3a>
     c92:	21 c1       	rjmp	.+578    	; 0xed6 <_fpadd_parts+0x27c>
     c94:	26 c1       	rjmp	.+588    	; 0xee2 <_fpadd_parts+0x288>
     c96:	94 30       	cpi	r25, 0x04	; 4
     c98:	09 f4       	brne	.+2      	; 0xc9c <_fpadd_parts+0x42>
     c9a:	20 c1       	rjmp	.+576    	; 0xedc <_fpadd_parts+0x282>
     c9c:	92 30       	cpi	r25, 0x02	; 2
     c9e:	b1 f4       	brne	.+44     	; 0xccc <_fpadd_parts+0x72>
     ca0:	82 30       	cpi	r24, 0x02	; 2
     ca2:	09 f0       	breq	.+2      	; 0xca6 <_fpadd_parts+0x4c>
     ca4:	1e c1       	rjmp	.+572    	; 0xee2 <_fpadd_parts+0x288>
     ca6:	ca 01       	movw	r24, r20
     ca8:	af 01       	movw	r20, r30
     caa:	28 e0       	ldi	r18, 0x08	; 8
     cac:	da 01       	movw	r26, r20
     cae:	0d 90       	ld	r0, X+
     cb0:	ad 01       	movw	r20, r26
     cb2:	dc 01       	movw	r26, r24
     cb4:	0d 92       	st	X+, r0
     cb6:	cd 01       	movw	r24, r26
     cb8:	21 50       	subi	r18, 0x01	; 1
     cba:	c1 f7       	brne	.-16     	; 0xcac <_fpadd_parts+0x52>
     cbc:	db 01       	movw	r26, r22
     cbe:	11 96       	adiw	r26, 0x01	; 1
     cc0:	8c 91       	ld	r24, X
     cc2:	11 97       	sbiw	r26, 0x01	; 1
     cc4:	91 81       	ldd	r25, Z+1	; 0x01
     cc6:	89 23       	and	r24, r25
     cc8:	89 83       	std	Y+1, r24	; 0x01
     cca:	0a c1       	rjmp	.+532    	; 0xee0 <_fpadd_parts+0x286>
     ccc:	82 30       	cpi	r24, 0x02	; 2
     cce:	09 f4       	brne	.+2      	; 0xcd2 <_fpadd_parts+0x78>
     cd0:	05 c1       	rjmp	.+522    	; 0xedc <_fpadd_parts+0x282>
     cd2:	c2 80       	ldd	r12, Z+2	; 0x02
     cd4:	d3 80       	ldd	r13, Z+3	; 0x03
     cd6:	db 01       	movw	r26, r22
     cd8:	12 96       	adiw	r26, 0x02	; 2
     cda:	6d 90       	ld	r6, X+
     cdc:	7c 90       	ld	r7, X
     cde:	13 97       	sbiw	r26, 0x03	; 3
     ce0:	24 81       	ldd	r18, Z+4	; 0x04
     ce2:	35 81       	ldd	r19, Z+5	; 0x05
     ce4:	46 81       	ldd	r20, Z+6	; 0x06
     ce6:	57 81       	ldd	r21, Z+7	; 0x07
     ce8:	14 96       	adiw	r26, 0x04	; 4
     cea:	ed 90       	ld	r14, X+
     cec:	fd 90       	ld	r15, X+
     cee:	0d 91       	ld	r16, X+
     cf0:	1c 91       	ld	r17, X
     cf2:	17 97       	sbiw	r26, 0x07	; 7
     cf4:	c6 01       	movw	r24, r12
     cf6:	86 19       	sub	r24, r6
     cf8:	97 09       	sbc	r25, r7
     cfa:	5c 01       	movw	r10, r24
     cfc:	97 ff       	sbrs	r25, 7
     cfe:	04 c0       	rjmp	.+8      	; 0xd08 <_fpadd_parts+0xae>
     d00:	aa 24       	eor	r10, r10
     d02:	bb 24       	eor	r11, r11
     d04:	a8 1a       	sub	r10, r24
     d06:	b9 0a       	sbc	r11, r25
     d08:	b0 e2       	ldi	r27, 0x20	; 32
     d0a:	ab 16       	cp	r10, r27
     d0c:	b1 04       	cpc	r11, r1
     d0e:	0c f0       	brlt	.+2      	; 0xd12 <_fpadd_parts+0xb8>
     d10:	61 c0       	rjmp	.+194    	; 0xdd4 <_fpadd_parts+0x17a>
     d12:	18 16       	cp	r1, r24
     d14:	19 06       	cpc	r1, r25
     d16:	6c f5       	brge	.+90     	; 0xd72 <_fpadd_parts+0x118>
     d18:	37 01       	movw	r6, r14
     d1a:	48 01       	movw	r8, r16
     d1c:	0a 2c       	mov	r0, r10
     d1e:	04 c0       	rjmp	.+8      	; 0xd28 <_fpadd_parts+0xce>
     d20:	96 94       	lsr	r9
     d22:	87 94       	ror	r8
     d24:	77 94       	ror	r7
     d26:	67 94       	ror	r6
     d28:	0a 94       	dec	r0
     d2a:	d2 f7       	brpl	.-12     	; 0xd20 <_fpadd_parts+0xc6>
     d2c:	81 e0       	ldi	r24, 0x01	; 1
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	a0 e0       	ldi	r26, 0x00	; 0
     d32:	b0 e0       	ldi	r27, 0x00	; 0
     d34:	0a 2c       	mov	r0, r10
     d36:	04 c0       	rjmp	.+8      	; 0xd40 <_fpadd_parts+0xe6>
     d38:	88 0f       	add	r24, r24
     d3a:	99 1f       	adc	r25, r25
     d3c:	aa 1f       	adc	r26, r26
     d3e:	bb 1f       	adc	r27, r27
     d40:	0a 94       	dec	r0
     d42:	d2 f7       	brpl	.-12     	; 0xd38 <_fpadd_parts+0xde>
     d44:	01 97       	sbiw	r24, 0x01	; 1
     d46:	a1 09       	sbc	r26, r1
     d48:	b1 09       	sbc	r27, r1
     d4a:	8e 21       	and	r24, r14
     d4c:	9f 21       	and	r25, r15
     d4e:	a0 23       	and	r26, r16
     d50:	b1 23       	and	r27, r17
     d52:	ee 24       	eor	r14, r14
     d54:	ff 24       	eor	r15, r15
     d56:	87 01       	movw	r16, r14
     d58:	e3 94       	inc	r14
     d5a:	00 97       	sbiw	r24, 0x00	; 0
     d5c:	a1 05       	cpc	r26, r1
     d5e:	b1 05       	cpc	r27, r1
     d60:	19 f4       	brne	.+6      	; 0xd68 <_fpadd_parts+0x10e>
     d62:	ee 24       	eor	r14, r14
     d64:	ff 24       	eor	r15, r15
     d66:	87 01       	movw	r16, r14
     d68:	e6 28       	or	r14, r6
     d6a:	f7 28       	or	r15, r7
     d6c:	08 29       	or	r16, r8
     d6e:	19 29       	or	r17, r9
     d70:	3c c0       	rjmp	.+120    	; 0xdea <_fpadd_parts+0x190>
     d72:	00 97       	sbiw	r24, 0x00	; 0
     d74:	d1 f1       	breq	.+116    	; 0xdea <_fpadd_parts+0x190>
     d76:	ca 0c       	add	r12, r10
     d78:	db 1c       	adc	r13, r11
     d7a:	39 01       	movw	r6, r18
     d7c:	4a 01       	movw	r8, r20
     d7e:	0a 2c       	mov	r0, r10
     d80:	04 c0       	rjmp	.+8      	; 0xd8a <_fpadd_parts+0x130>
     d82:	96 94       	lsr	r9
     d84:	87 94       	ror	r8
     d86:	77 94       	ror	r7
     d88:	67 94       	ror	r6
     d8a:	0a 94       	dec	r0
     d8c:	d2 f7       	brpl	.-12     	; 0xd82 <_fpadd_parts+0x128>
     d8e:	81 e0       	ldi	r24, 0x01	; 1
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	a0 e0       	ldi	r26, 0x00	; 0
     d94:	b0 e0       	ldi	r27, 0x00	; 0
     d96:	0a 2c       	mov	r0, r10
     d98:	04 c0       	rjmp	.+8      	; 0xda2 <_fpadd_parts+0x148>
     d9a:	88 0f       	add	r24, r24
     d9c:	99 1f       	adc	r25, r25
     d9e:	aa 1f       	adc	r26, r26
     da0:	bb 1f       	adc	r27, r27
     da2:	0a 94       	dec	r0
     da4:	d2 f7       	brpl	.-12     	; 0xd9a <_fpadd_parts+0x140>
     da6:	01 97       	sbiw	r24, 0x01	; 1
     da8:	a1 09       	sbc	r26, r1
     daa:	b1 09       	sbc	r27, r1
     dac:	82 23       	and	r24, r18
     dae:	93 23       	and	r25, r19
     db0:	a4 23       	and	r26, r20
     db2:	b5 23       	and	r27, r21
     db4:	21 e0       	ldi	r18, 0x01	; 1
     db6:	30 e0       	ldi	r19, 0x00	; 0
     db8:	40 e0       	ldi	r20, 0x00	; 0
     dba:	50 e0       	ldi	r21, 0x00	; 0
     dbc:	00 97       	sbiw	r24, 0x00	; 0
     dbe:	a1 05       	cpc	r26, r1
     dc0:	b1 05       	cpc	r27, r1
     dc2:	19 f4       	brne	.+6      	; 0xdca <_fpadd_parts+0x170>
     dc4:	20 e0       	ldi	r18, 0x00	; 0
     dc6:	30 e0       	ldi	r19, 0x00	; 0
     dc8:	a9 01       	movw	r20, r18
     dca:	26 29       	or	r18, r6
     dcc:	37 29       	or	r19, r7
     dce:	48 29       	or	r20, r8
     dd0:	59 29       	or	r21, r9
     dd2:	0b c0       	rjmp	.+22     	; 0xdea <_fpadd_parts+0x190>
     dd4:	6c 14       	cp	r6, r12
     dd6:	7d 04       	cpc	r7, r13
     dd8:	24 f4       	brge	.+8      	; 0xde2 <_fpadd_parts+0x188>
     dda:	ee 24       	eor	r14, r14
     ddc:	ff 24       	eor	r15, r15
     dde:	87 01       	movw	r16, r14
     de0:	04 c0       	rjmp	.+8      	; 0xdea <_fpadd_parts+0x190>
     de2:	63 01       	movw	r12, r6
     de4:	20 e0       	ldi	r18, 0x00	; 0
     de6:	30 e0       	ldi	r19, 0x00	; 0
     de8:	a9 01       	movw	r20, r18
     dea:	81 81       	ldd	r24, Z+1	; 0x01
     dec:	fb 01       	movw	r30, r22
     dee:	91 81       	ldd	r25, Z+1	; 0x01
     df0:	89 17       	cp	r24, r25
     df2:	09 f4       	brne	.+2      	; 0xdf6 <_fpadd_parts+0x19c>
     df4:	45 c0       	rjmp	.+138    	; 0xe80 <_fpadd_parts+0x226>
     df6:	88 23       	and	r24, r24
     df8:	49 f0       	breq	.+18     	; 0xe0c <_fpadd_parts+0x1b2>
     dfa:	d8 01       	movw	r26, r16
     dfc:	c7 01       	movw	r24, r14
     dfe:	82 1b       	sub	r24, r18
     e00:	93 0b       	sbc	r25, r19
     e02:	a4 0b       	sbc	r26, r20
     e04:	b5 0b       	sbc	r27, r21
     e06:	9c 01       	movw	r18, r24
     e08:	ad 01       	movw	r20, r26
     e0a:	04 c0       	rjmp	.+8      	; 0xe14 <_fpadd_parts+0x1ba>
     e0c:	2e 19       	sub	r18, r14
     e0e:	3f 09       	sbc	r19, r15
     e10:	40 0b       	sbc	r20, r16
     e12:	51 0b       	sbc	r21, r17
     e14:	57 fd       	sbrc	r21, 7
     e16:	04 c0       	rjmp	.+8      	; 0xe20 <_fpadd_parts+0x1c6>
     e18:	19 82       	std	Y+1, r1	; 0x01
     e1a:	db 82       	std	Y+3, r13	; 0x03
     e1c:	ca 82       	std	Y+2, r12	; 0x02
     e1e:	0b c0       	rjmp	.+22     	; 0xe36 <_fpadd_parts+0x1dc>
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	89 83       	std	Y+1, r24	; 0x01
     e24:	db 82       	std	Y+3, r13	; 0x03
     e26:	ca 82       	std	Y+2, r12	; 0x02
     e28:	50 95       	com	r21
     e2a:	40 95       	com	r20
     e2c:	30 95       	com	r19
     e2e:	21 95       	neg	r18
     e30:	3f 4f       	sbci	r19, 0xFF	; 255
     e32:	4f 4f       	sbci	r20, 0xFF	; 255
     e34:	5f 4f       	sbci	r21, 0xFF	; 255
     e36:	2c 83       	std	Y+4, r18	; 0x04
     e38:	3d 83       	std	Y+5, r19	; 0x05
     e3a:	4e 83       	std	Y+6, r20	; 0x06
     e3c:	5f 83       	std	Y+7, r21	; 0x07
     e3e:	0d c0       	rjmp	.+26     	; 0xe5a <_fpadd_parts+0x200>
     e40:	88 0f       	add	r24, r24
     e42:	99 1f       	adc	r25, r25
     e44:	aa 1f       	adc	r26, r26
     e46:	bb 1f       	adc	r27, r27
     e48:	8c 83       	std	Y+4, r24	; 0x04
     e4a:	9d 83       	std	Y+5, r25	; 0x05
     e4c:	ae 83       	std	Y+6, r26	; 0x06
     e4e:	bf 83       	std	Y+7, r27	; 0x07
     e50:	8a 81       	ldd	r24, Y+2	; 0x02
     e52:	9b 81       	ldd	r25, Y+3	; 0x03
     e54:	01 97       	sbiw	r24, 0x01	; 1
     e56:	9b 83       	std	Y+3, r25	; 0x03
     e58:	8a 83       	std	Y+2, r24	; 0x02
     e5a:	8c 81       	ldd	r24, Y+4	; 0x04
     e5c:	9d 81       	ldd	r25, Y+5	; 0x05
     e5e:	ae 81       	ldd	r26, Y+6	; 0x06
     e60:	bf 81       	ldd	r27, Y+7	; 0x07
     e62:	9c 01       	movw	r18, r24
     e64:	ad 01       	movw	r20, r26
     e66:	21 50       	subi	r18, 0x01	; 1
     e68:	30 40       	sbci	r19, 0x00	; 0
     e6a:	40 40       	sbci	r20, 0x00	; 0
     e6c:	50 40       	sbci	r21, 0x00	; 0
     e6e:	2f 3f       	cpi	r18, 0xFF	; 255
     e70:	ef ef       	ldi	r30, 0xFF	; 255
     e72:	3e 07       	cpc	r19, r30
     e74:	ef ef       	ldi	r30, 0xFF	; 255
     e76:	4e 07       	cpc	r20, r30
     e78:	ef e3       	ldi	r30, 0x3F	; 63
     e7a:	5e 07       	cpc	r21, r30
     e7c:	08 f3       	brcs	.-62     	; 0xe40 <_fpadd_parts+0x1e6>
     e7e:	0b c0       	rjmp	.+22     	; 0xe96 <_fpadd_parts+0x23c>
     e80:	89 83       	std	Y+1, r24	; 0x01
     e82:	db 82       	std	Y+3, r13	; 0x03
     e84:	ca 82       	std	Y+2, r12	; 0x02
     e86:	2e 0d       	add	r18, r14
     e88:	3f 1d       	adc	r19, r15
     e8a:	40 1f       	adc	r20, r16
     e8c:	51 1f       	adc	r21, r17
     e8e:	2c 83       	std	Y+4, r18	; 0x04
     e90:	3d 83       	std	Y+5, r19	; 0x05
     e92:	4e 83       	std	Y+6, r20	; 0x06
     e94:	5f 83       	std	Y+7, r21	; 0x07
     e96:	83 e0       	ldi	r24, 0x03	; 3
     e98:	88 83       	st	Y, r24
     e9a:	2c 81       	ldd	r18, Y+4	; 0x04
     e9c:	3d 81       	ldd	r19, Y+5	; 0x05
     e9e:	4e 81       	ldd	r20, Y+6	; 0x06
     ea0:	5f 81       	ldd	r21, Y+7	; 0x07
     ea2:	57 ff       	sbrs	r21, 7
     ea4:	1d c0       	rjmp	.+58     	; 0xee0 <_fpadd_parts+0x286>
     ea6:	da 01       	movw	r26, r20
     ea8:	c9 01       	movw	r24, r18
     eaa:	81 70       	andi	r24, 0x01	; 1
     eac:	90 70       	andi	r25, 0x00	; 0
     eae:	a0 70       	andi	r26, 0x00	; 0
     eb0:	b0 70       	andi	r27, 0x00	; 0
     eb2:	56 95       	lsr	r21
     eb4:	47 95       	ror	r20
     eb6:	37 95       	ror	r19
     eb8:	27 95       	ror	r18
     eba:	82 2b       	or	r24, r18
     ebc:	93 2b       	or	r25, r19
     ebe:	a4 2b       	or	r26, r20
     ec0:	b5 2b       	or	r27, r21
     ec2:	8c 83       	std	Y+4, r24	; 0x04
     ec4:	9d 83       	std	Y+5, r25	; 0x05
     ec6:	ae 83       	std	Y+6, r26	; 0x06
     ec8:	bf 83       	std	Y+7, r27	; 0x07
     eca:	8a 81       	ldd	r24, Y+2	; 0x02
     ecc:	9b 81       	ldd	r25, Y+3	; 0x03
     ece:	01 96       	adiw	r24, 0x01	; 1
     ed0:	9b 83       	std	Y+3, r25	; 0x03
     ed2:	8a 83       	std	Y+2, r24	; 0x02
     ed4:	05 c0       	rjmp	.+10     	; 0xee0 <_fpadd_parts+0x286>
     ed6:	ea e6       	ldi	r30, 0x6A	; 106
     ed8:	f0 e0       	ldi	r31, 0x00	; 0
     eda:	03 c0       	rjmp	.+6      	; 0xee2 <_fpadd_parts+0x288>
     edc:	fb 01       	movw	r30, r22
     ede:	01 c0       	rjmp	.+2      	; 0xee2 <_fpadd_parts+0x288>
     ee0:	fe 01       	movw	r30, r28
     ee2:	cf 01       	movw	r24, r30
     ee4:	cd b7       	in	r28, 0x3d	; 61
     ee6:	de b7       	in	r29, 0x3e	; 62
     ee8:	ee e0       	ldi	r30, 0x0E	; 14
     eea:	0c 94 c9 0c 	jmp	0x1992	; 0x1992 <__epilogue_restores__+0x8>

00000eee <__addsf3>:
     eee:	a0 e2       	ldi	r26, 0x20	; 32
     ef0:	b0 e0       	ldi	r27, 0x00	; 0
     ef2:	ed e7       	ldi	r30, 0x7D	; 125
     ef4:	f7 e0       	ldi	r31, 0x07	; 7
     ef6:	0c 94 b5 0c 	jmp	0x196a	; 0x196a <__prologue_saves__+0x18>
     efa:	69 83       	std	Y+1, r22	; 0x01
     efc:	7a 83       	std	Y+2, r23	; 0x02
     efe:	8b 83       	std	Y+3, r24	; 0x03
     f00:	9c 83       	std	Y+4, r25	; 0x04
     f02:	2d 83       	std	Y+5, r18	; 0x05
     f04:	3e 83       	std	Y+6, r19	; 0x06
     f06:	4f 83       	std	Y+7, r20	; 0x07
     f08:	58 87       	std	Y+8, r21	; 0x08
     f0a:	89 e0       	ldi	r24, 0x09	; 9
     f0c:	e8 2e       	mov	r14, r24
     f0e:	f1 2c       	mov	r15, r1
     f10:	ec 0e       	add	r14, r28
     f12:	fd 1e       	adc	r15, r29
     f14:	ce 01       	movw	r24, r28
     f16:	01 96       	adiw	r24, 0x01	; 1
     f18:	b7 01       	movw	r22, r14
     f1a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
     f1e:	8e 01       	movw	r16, r28
     f20:	0f 5e       	subi	r16, 0xEF	; 239
     f22:	1f 4f       	sbci	r17, 0xFF	; 255
     f24:	ce 01       	movw	r24, r28
     f26:	05 96       	adiw	r24, 0x05	; 5
     f28:	b8 01       	movw	r22, r16
     f2a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
     f2e:	c7 01       	movw	r24, r14
     f30:	b8 01       	movw	r22, r16
     f32:	ae 01       	movw	r20, r28
     f34:	47 5e       	subi	r20, 0xE7	; 231
     f36:	5f 4f       	sbci	r21, 0xFF	; 255
     f38:	0e 94 2d 06 	call	0xc5a	; 0xc5a <_fpadd_parts>
     f3c:	0e 94 19 0b 	call	0x1632	; 0x1632 <__pack_f>
     f40:	a0 96       	adiw	r28, 0x20	; 32
     f42:	e6 e0       	ldi	r30, 0x06	; 6
     f44:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__epilogue_restores__+0x18>

00000f48 <__subsf3>:
     f48:	a0 e2       	ldi	r26, 0x20	; 32
     f4a:	b0 e0       	ldi	r27, 0x00	; 0
     f4c:	ea ea       	ldi	r30, 0xAA	; 170
     f4e:	f7 e0       	ldi	r31, 0x07	; 7
     f50:	0c 94 b5 0c 	jmp	0x196a	; 0x196a <__prologue_saves__+0x18>
     f54:	69 83       	std	Y+1, r22	; 0x01
     f56:	7a 83       	std	Y+2, r23	; 0x02
     f58:	8b 83       	std	Y+3, r24	; 0x03
     f5a:	9c 83       	std	Y+4, r25	; 0x04
     f5c:	2d 83       	std	Y+5, r18	; 0x05
     f5e:	3e 83       	std	Y+6, r19	; 0x06
     f60:	4f 83       	std	Y+7, r20	; 0x07
     f62:	58 87       	std	Y+8, r21	; 0x08
     f64:	8e 01       	movw	r16, r28
     f66:	07 5f       	subi	r16, 0xF7	; 247
     f68:	1f 4f       	sbci	r17, 0xFF	; 255
     f6a:	ce 01       	movw	r24, r28
     f6c:	01 96       	adiw	r24, 0x01	; 1
     f6e:	b8 01       	movw	r22, r16
     f70:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
     f74:	91 e1       	ldi	r25, 0x11	; 17
     f76:	e9 2e       	mov	r14, r25
     f78:	f1 2c       	mov	r15, r1
     f7a:	ec 0e       	add	r14, r28
     f7c:	fd 1e       	adc	r15, r29
     f7e:	ce 01       	movw	r24, r28
     f80:	05 96       	adiw	r24, 0x05	; 5
     f82:	b7 01       	movw	r22, r14
     f84:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
     f88:	8a 89       	ldd	r24, Y+18	; 0x12
     f8a:	91 e0       	ldi	r25, 0x01	; 1
     f8c:	89 27       	eor	r24, r25
     f8e:	8a 8b       	std	Y+18, r24	; 0x12
     f90:	c8 01       	movw	r24, r16
     f92:	b7 01       	movw	r22, r14
     f94:	ae 01       	movw	r20, r28
     f96:	47 5e       	subi	r20, 0xE7	; 231
     f98:	5f 4f       	sbci	r21, 0xFF	; 255
     f9a:	0e 94 2d 06 	call	0xc5a	; 0xc5a <_fpadd_parts>
     f9e:	0e 94 19 0b 	call	0x1632	; 0x1632 <__pack_f>
     fa2:	a0 96       	adiw	r28, 0x20	; 32
     fa4:	e6 e0       	ldi	r30, 0x06	; 6
     fa6:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__epilogue_restores__+0x18>

00000faa <__mulsf3>:
     faa:	a0 e2       	ldi	r26, 0x20	; 32
     fac:	b0 e0       	ldi	r27, 0x00	; 0
     fae:	eb ed       	ldi	r30, 0xDB	; 219
     fb0:	f7 e0       	ldi	r31, 0x07	; 7
     fb2:	0c 94 a9 0c 	jmp	0x1952	; 0x1952 <__prologue_saves__>
     fb6:	69 83       	std	Y+1, r22	; 0x01
     fb8:	7a 83       	std	Y+2, r23	; 0x02
     fba:	8b 83       	std	Y+3, r24	; 0x03
     fbc:	9c 83       	std	Y+4, r25	; 0x04
     fbe:	2d 83       	std	Y+5, r18	; 0x05
     fc0:	3e 83       	std	Y+6, r19	; 0x06
     fc2:	4f 83       	std	Y+7, r20	; 0x07
     fc4:	58 87       	std	Y+8, r21	; 0x08
     fc6:	ce 01       	movw	r24, r28
     fc8:	01 96       	adiw	r24, 0x01	; 1
     fca:	be 01       	movw	r22, r28
     fcc:	67 5f       	subi	r22, 0xF7	; 247
     fce:	7f 4f       	sbci	r23, 0xFF	; 255
     fd0:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
     fd4:	ce 01       	movw	r24, r28
     fd6:	05 96       	adiw	r24, 0x05	; 5
     fd8:	be 01       	movw	r22, r28
     fda:	6f 5e       	subi	r22, 0xEF	; 239
     fdc:	7f 4f       	sbci	r23, 0xFF	; 255
     fde:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
     fe2:	99 85       	ldd	r25, Y+9	; 0x09
     fe4:	92 30       	cpi	r25, 0x02	; 2
     fe6:	78 f0       	brcs	.+30     	; 0x1006 <__mulsf3+0x5c>
     fe8:	89 89       	ldd	r24, Y+17	; 0x11
     fea:	82 30       	cpi	r24, 0x02	; 2
     fec:	c0 f0       	brcs	.+48     	; 0x101e <__mulsf3+0x74>
     fee:	94 30       	cpi	r25, 0x04	; 4
     ff0:	19 f4       	brne	.+6      	; 0xff8 <__mulsf3+0x4e>
     ff2:	82 30       	cpi	r24, 0x02	; 2
     ff4:	41 f4       	brne	.+16     	; 0x1006 <__mulsf3+0x5c>
     ff6:	cb c0       	rjmp	.+406    	; 0x118e <__mulsf3+0x1e4>
     ff8:	84 30       	cpi	r24, 0x04	; 4
     ffa:	19 f4       	brne	.+6      	; 0x1002 <__mulsf3+0x58>
     ffc:	92 30       	cpi	r25, 0x02	; 2
     ffe:	79 f4       	brne	.+30     	; 0x101e <__mulsf3+0x74>
    1000:	c6 c0       	rjmp	.+396    	; 0x118e <__mulsf3+0x1e4>
    1002:	92 30       	cpi	r25, 0x02	; 2
    1004:	51 f4       	brne	.+20     	; 0x101a <__mulsf3+0x70>
    1006:	81 e0       	ldi	r24, 0x01	; 1
    1008:	2a 85       	ldd	r18, Y+10	; 0x0a
    100a:	9a 89       	ldd	r25, Y+18	; 0x12
    100c:	29 17       	cp	r18, r25
    100e:	09 f4       	brne	.+2      	; 0x1012 <__mulsf3+0x68>
    1010:	80 e0       	ldi	r24, 0x00	; 0
    1012:	8a 87       	std	Y+10, r24	; 0x0a
    1014:	ce 01       	movw	r24, r28
    1016:	09 96       	adiw	r24, 0x09	; 9
    1018:	bc c0       	rjmp	.+376    	; 0x1192 <__mulsf3+0x1e8>
    101a:	82 30       	cpi	r24, 0x02	; 2
    101c:	51 f4       	brne	.+20     	; 0x1032 <__mulsf3+0x88>
    101e:	81 e0       	ldi	r24, 0x01	; 1
    1020:	2a 85       	ldd	r18, Y+10	; 0x0a
    1022:	9a 89       	ldd	r25, Y+18	; 0x12
    1024:	29 17       	cp	r18, r25
    1026:	09 f4       	brne	.+2      	; 0x102a <__mulsf3+0x80>
    1028:	80 e0       	ldi	r24, 0x00	; 0
    102a:	8a 8b       	std	Y+18, r24	; 0x12
    102c:	ce 01       	movw	r24, r28
    102e:	41 96       	adiw	r24, 0x11	; 17
    1030:	b0 c0       	rjmp	.+352    	; 0x1192 <__mulsf3+0x1e8>
    1032:	6d 84       	ldd	r6, Y+13	; 0x0d
    1034:	7e 84       	ldd	r7, Y+14	; 0x0e
    1036:	8f 84       	ldd	r8, Y+15	; 0x0f
    1038:	98 88       	ldd	r9, Y+16	; 0x10
    103a:	ed 88       	ldd	r14, Y+21	; 0x15
    103c:	fe 88       	ldd	r15, Y+22	; 0x16
    103e:	0f 89       	ldd	r16, Y+23	; 0x17
    1040:	18 8d       	ldd	r17, Y+24	; 0x18
    1042:	e0 e2       	ldi	r30, 0x20	; 32
    1044:	f0 e0       	ldi	r31, 0x00	; 0
    1046:	80 e0       	ldi	r24, 0x00	; 0
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	dc 01       	movw	r26, r24
    104c:	aa 24       	eor	r10, r10
    104e:	bb 24       	eor	r11, r11
    1050:	65 01       	movw	r12, r10
    1052:	20 e0       	ldi	r18, 0x00	; 0
    1054:	30 e0       	ldi	r19, 0x00	; 0
    1056:	a9 01       	movw	r20, r18
    1058:	b3 01       	movw	r22, r6
    105a:	61 70       	andi	r22, 0x01	; 1
    105c:	70 70       	andi	r23, 0x00	; 0
    105e:	61 15       	cp	r22, r1
    1060:	71 05       	cpc	r23, r1
    1062:	d1 f0       	breq	.+52     	; 0x1098 <__mulsf3+0xee>
    1064:	2e 0d       	add	r18, r14
    1066:	3f 1d       	adc	r19, r15
    1068:	40 1f       	adc	r20, r16
    106a:	51 1f       	adc	r21, r17
    106c:	15 01       	movw	r2, r10
    106e:	26 01       	movw	r4, r12
    1070:	28 0e       	add	r2, r24
    1072:	39 1e       	adc	r3, r25
    1074:	4a 1e       	adc	r4, r26
    1076:	5b 1e       	adc	r5, r27
    1078:	81 e0       	ldi	r24, 0x01	; 1
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	a0 e0       	ldi	r26, 0x00	; 0
    107e:	b0 e0       	ldi	r27, 0x00	; 0
    1080:	2e 15       	cp	r18, r14
    1082:	3f 05       	cpc	r19, r15
    1084:	40 07       	cpc	r20, r16
    1086:	51 07       	cpc	r21, r17
    1088:	18 f0       	brcs	.+6      	; 0x1090 <__mulsf3+0xe6>
    108a:	80 e0       	ldi	r24, 0x00	; 0
    108c:	90 e0       	ldi	r25, 0x00	; 0
    108e:	dc 01       	movw	r26, r24
    1090:	82 0d       	add	r24, r2
    1092:	93 1d       	adc	r25, r3
    1094:	a4 1d       	adc	r26, r4
    1096:	b5 1d       	adc	r27, r5
    1098:	aa 0c       	add	r10, r10
    109a:	bb 1c       	adc	r11, r11
    109c:	cc 1c       	adc	r12, r12
    109e:	dd 1c       	adc	r13, r13
    10a0:	17 ff       	sbrs	r17, 7
    10a2:	09 c0       	rjmp	.+18     	; 0x10b6 <__mulsf3+0x10c>
    10a4:	61 e0       	ldi	r22, 0x01	; 1
    10a6:	26 2e       	mov	r2, r22
    10a8:	31 2c       	mov	r3, r1
    10aa:	41 2c       	mov	r4, r1
    10ac:	51 2c       	mov	r5, r1
    10ae:	a2 28       	or	r10, r2
    10b0:	b3 28       	or	r11, r3
    10b2:	c4 28       	or	r12, r4
    10b4:	d5 28       	or	r13, r5
    10b6:	31 97       	sbiw	r30, 0x01	; 1
    10b8:	49 f0       	breq	.+18     	; 0x10cc <__mulsf3+0x122>
    10ba:	ee 0c       	add	r14, r14
    10bc:	ff 1c       	adc	r15, r15
    10be:	00 1f       	adc	r16, r16
    10c0:	11 1f       	adc	r17, r17
    10c2:	96 94       	lsr	r9
    10c4:	87 94       	ror	r8
    10c6:	77 94       	ror	r7
    10c8:	67 94       	ror	r6
    10ca:	c6 cf       	rjmp	.-116    	; 0x1058 <__mulsf3+0xae>
    10cc:	6b 89       	ldd	r22, Y+19	; 0x13
    10ce:	7c 89       	ldd	r23, Y+20	; 0x14
    10d0:	eb 85       	ldd	r30, Y+11	; 0x0b
    10d2:	fc 85       	ldd	r31, Y+12	; 0x0c
    10d4:	6e 0f       	add	r22, r30
    10d6:	7f 1f       	adc	r23, r31
    10d8:	6e 5f       	subi	r22, 0xFE	; 254
    10da:	7f 4f       	sbci	r23, 0xFF	; 255
    10dc:	7c 8f       	std	Y+28, r23	; 0x1c
    10de:	6b 8f       	std	Y+27, r22	; 0x1b
    10e0:	61 e0       	ldi	r22, 0x01	; 1
    10e2:	ea 85       	ldd	r30, Y+10	; 0x0a
    10e4:	7a 89       	ldd	r23, Y+18	; 0x12
    10e6:	e7 17       	cp	r30, r23
    10e8:	09 f4       	brne	.+2      	; 0x10ec <__mulsf3+0x142>
    10ea:	60 e0       	ldi	r22, 0x00	; 0
    10ec:	6a 8f       	std	Y+26, r22	; 0x1a
    10ee:	6b 8d       	ldd	r22, Y+27	; 0x1b
    10f0:	7c 8d       	ldd	r23, Y+28	; 0x1c
    10f2:	10 c0       	rjmp	.+32     	; 0x1114 <__mulsf3+0x16a>
    10f4:	fc 01       	movw	r30, r24
    10f6:	e1 70       	andi	r30, 0x01	; 1
    10f8:	f0 70       	andi	r31, 0x00	; 0
    10fa:	30 97       	sbiw	r30, 0x00	; 0
    10fc:	29 f0       	breq	.+10     	; 0x1108 <__mulsf3+0x15e>
    10fe:	56 95       	lsr	r21
    1100:	47 95       	ror	r20
    1102:	37 95       	ror	r19
    1104:	27 95       	ror	r18
    1106:	50 68       	ori	r21, 0x80	; 128
    1108:	b6 95       	lsr	r27
    110a:	a7 95       	ror	r26
    110c:	97 95       	ror	r25
    110e:	87 95       	ror	r24
    1110:	6f 5f       	subi	r22, 0xFF	; 255
    1112:	7f 4f       	sbci	r23, 0xFF	; 255
    1114:	b7 fd       	sbrc	r27, 7
    1116:	ee cf       	rjmp	.-36     	; 0x10f4 <__mulsf3+0x14a>
    1118:	0c c0       	rjmp	.+24     	; 0x1132 <__mulsf3+0x188>
    111a:	88 0f       	add	r24, r24
    111c:	99 1f       	adc	r25, r25
    111e:	aa 1f       	adc	r26, r26
    1120:	bb 1f       	adc	r27, r27
    1122:	57 fd       	sbrc	r21, 7
    1124:	81 60       	ori	r24, 0x01	; 1
    1126:	22 0f       	add	r18, r18
    1128:	33 1f       	adc	r19, r19
    112a:	44 1f       	adc	r20, r20
    112c:	55 1f       	adc	r21, r21
    112e:	61 50       	subi	r22, 0x01	; 1
    1130:	70 40       	sbci	r23, 0x00	; 0
    1132:	80 30       	cpi	r24, 0x00	; 0
    1134:	e0 e0       	ldi	r30, 0x00	; 0
    1136:	9e 07       	cpc	r25, r30
    1138:	e0 e0       	ldi	r30, 0x00	; 0
    113a:	ae 07       	cpc	r26, r30
    113c:	e0 e4       	ldi	r30, 0x40	; 64
    113e:	be 07       	cpc	r27, r30
    1140:	60 f3       	brcs	.-40     	; 0x111a <__mulsf3+0x170>
    1142:	6b 8f       	std	Y+27, r22	; 0x1b
    1144:	7c 8f       	std	Y+28, r23	; 0x1c
    1146:	6f e7       	ldi	r22, 0x7F	; 127
    1148:	e6 2e       	mov	r14, r22
    114a:	f1 2c       	mov	r15, r1
    114c:	01 2d       	mov	r16, r1
    114e:	11 2d       	mov	r17, r1
    1150:	e8 22       	and	r14, r24
    1152:	f9 22       	and	r15, r25
    1154:	0a 23       	and	r16, r26
    1156:	1b 23       	and	r17, r27
    1158:	60 e4       	ldi	r22, 0x40	; 64
    115a:	e6 16       	cp	r14, r22
    115c:	f1 04       	cpc	r15, r1
    115e:	01 05       	cpc	r16, r1
    1160:	11 05       	cpc	r17, r1
    1162:	61 f4       	brne	.+24     	; 0x117c <__mulsf3+0x1d2>
    1164:	87 fd       	sbrc	r24, 7
    1166:	0a c0       	rjmp	.+20     	; 0x117c <__mulsf3+0x1d2>
    1168:	21 15       	cp	r18, r1
    116a:	31 05       	cpc	r19, r1
    116c:	41 05       	cpc	r20, r1
    116e:	51 05       	cpc	r21, r1
    1170:	29 f0       	breq	.+10     	; 0x117c <__mulsf3+0x1d2>
    1172:	80 5c       	subi	r24, 0xC0	; 192
    1174:	9f 4f       	sbci	r25, 0xFF	; 255
    1176:	af 4f       	sbci	r26, 0xFF	; 255
    1178:	bf 4f       	sbci	r27, 0xFF	; 255
    117a:	80 78       	andi	r24, 0x80	; 128
    117c:	8d 8f       	std	Y+29, r24	; 0x1d
    117e:	9e 8f       	std	Y+30, r25	; 0x1e
    1180:	af 8f       	std	Y+31, r26	; 0x1f
    1182:	b8 a3       	std	Y+32, r27	; 0x20
    1184:	83 e0       	ldi	r24, 0x03	; 3
    1186:	89 8f       	std	Y+25, r24	; 0x19
    1188:	ce 01       	movw	r24, r28
    118a:	49 96       	adiw	r24, 0x19	; 25
    118c:	02 c0       	rjmp	.+4      	; 0x1192 <__mulsf3+0x1e8>
    118e:	8a e6       	ldi	r24, 0x6A	; 106
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	0e 94 19 0b 	call	0x1632	; 0x1632 <__pack_f>
    1196:	a0 96       	adiw	r28, 0x20	; 32
    1198:	e2 e1       	ldi	r30, 0x12	; 18
    119a:	0c 94 c5 0c 	jmp	0x198a	; 0x198a <__epilogue_restores__>

0000119e <__divsf3>:
    119e:	a8 e1       	ldi	r26, 0x18	; 24
    11a0:	b0 e0       	ldi	r27, 0x00	; 0
    11a2:	e5 ed       	ldi	r30, 0xD5	; 213
    11a4:	f8 e0       	ldi	r31, 0x08	; 8
    11a6:	0c 94 b1 0c 	jmp	0x1962	; 0x1962 <__prologue_saves__+0x10>
    11aa:	69 83       	std	Y+1, r22	; 0x01
    11ac:	7a 83       	std	Y+2, r23	; 0x02
    11ae:	8b 83       	std	Y+3, r24	; 0x03
    11b0:	9c 83       	std	Y+4, r25	; 0x04
    11b2:	2d 83       	std	Y+5, r18	; 0x05
    11b4:	3e 83       	std	Y+6, r19	; 0x06
    11b6:	4f 83       	std	Y+7, r20	; 0x07
    11b8:	58 87       	std	Y+8, r21	; 0x08
    11ba:	8e 01       	movw	r16, r28
    11bc:	07 5f       	subi	r16, 0xF7	; 247
    11be:	1f 4f       	sbci	r17, 0xFF	; 255
    11c0:	ce 01       	movw	r24, r28
    11c2:	01 96       	adiw	r24, 0x01	; 1
    11c4:	b8 01       	movw	r22, r16
    11c6:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
    11ca:	81 e1       	ldi	r24, 0x11	; 17
    11cc:	e8 2e       	mov	r14, r24
    11ce:	f1 2c       	mov	r15, r1
    11d0:	ec 0e       	add	r14, r28
    11d2:	fd 1e       	adc	r15, r29
    11d4:	ce 01       	movw	r24, r28
    11d6:	05 96       	adiw	r24, 0x05	; 5
    11d8:	b7 01       	movw	r22, r14
    11da:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
    11de:	99 85       	ldd	r25, Y+9	; 0x09
    11e0:	92 30       	cpi	r25, 0x02	; 2
    11e2:	08 f4       	brcc	.+2      	; 0x11e6 <__divsf3+0x48>
    11e4:	83 c0       	rjmp	.+262    	; 0x12ec <__divsf3+0x14e>
    11e6:	89 89       	ldd	r24, Y+17	; 0x11
    11e8:	82 30       	cpi	r24, 0x02	; 2
    11ea:	08 f4       	brcc	.+2      	; 0x11ee <__divsf3+0x50>
    11ec:	7b c0       	rjmp	.+246    	; 0x12e4 <__divsf3+0x146>
    11ee:	2a 85       	ldd	r18, Y+10	; 0x0a
    11f0:	3a 89       	ldd	r19, Y+18	; 0x12
    11f2:	23 27       	eor	r18, r19
    11f4:	2a 87       	std	Y+10, r18	; 0x0a
    11f6:	94 30       	cpi	r25, 0x04	; 4
    11f8:	11 f0       	breq	.+4      	; 0x11fe <__divsf3+0x60>
    11fa:	92 30       	cpi	r25, 0x02	; 2
    11fc:	21 f4       	brne	.+8      	; 0x1206 <__divsf3+0x68>
    11fe:	98 17       	cp	r25, r24
    1200:	09 f0       	breq	.+2      	; 0x1204 <__divsf3+0x66>
    1202:	6c c0       	rjmp	.+216    	; 0x12dc <__divsf3+0x13e>
    1204:	71 c0       	rjmp	.+226    	; 0x12e8 <__divsf3+0x14a>
    1206:	84 30       	cpi	r24, 0x04	; 4
    1208:	39 f4       	brne	.+14     	; 0x1218 <__divsf3+0x7a>
    120a:	1d 86       	std	Y+13, r1	; 0x0d
    120c:	1e 86       	std	Y+14, r1	; 0x0e
    120e:	1f 86       	std	Y+15, r1	; 0x0f
    1210:	18 8a       	std	Y+16, r1	; 0x10
    1212:	1c 86       	std	Y+12, r1	; 0x0c
    1214:	1b 86       	std	Y+11, r1	; 0x0b
    1216:	6a c0       	rjmp	.+212    	; 0x12ec <__divsf3+0x14e>
    1218:	82 30       	cpi	r24, 0x02	; 2
    121a:	19 f4       	brne	.+6      	; 0x1222 <__divsf3+0x84>
    121c:	84 e0       	ldi	r24, 0x04	; 4
    121e:	89 87       	std	Y+9, r24	; 0x09
    1220:	65 c0       	rjmp	.+202    	; 0x12ec <__divsf3+0x14e>
    1222:	8b 85       	ldd	r24, Y+11	; 0x0b
    1224:	9c 85       	ldd	r25, Y+12	; 0x0c
    1226:	2b 89       	ldd	r18, Y+19	; 0x13
    1228:	3c 89       	ldd	r19, Y+20	; 0x14
    122a:	82 1b       	sub	r24, r18
    122c:	93 0b       	sbc	r25, r19
    122e:	9c 87       	std	Y+12, r25	; 0x0c
    1230:	8b 87       	std	Y+11, r24	; 0x0b
    1232:	2d 85       	ldd	r18, Y+13	; 0x0d
    1234:	3e 85       	ldd	r19, Y+14	; 0x0e
    1236:	4f 85       	ldd	r20, Y+15	; 0x0f
    1238:	58 89       	ldd	r21, Y+16	; 0x10
    123a:	ed 88       	ldd	r14, Y+21	; 0x15
    123c:	fe 88       	ldd	r15, Y+22	; 0x16
    123e:	0f 89       	ldd	r16, Y+23	; 0x17
    1240:	18 8d       	ldd	r17, Y+24	; 0x18
    1242:	2e 15       	cp	r18, r14
    1244:	3f 05       	cpc	r19, r15
    1246:	40 07       	cpc	r20, r16
    1248:	51 07       	cpc	r21, r17
    124a:	38 f4       	brcc	.+14     	; 0x125a <__divsf3+0xbc>
    124c:	22 0f       	add	r18, r18
    124e:	33 1f       	adc	r19, r19
    1250:	44 1f       	adc	r20, r20
    1252:	55 1f       	adc	r21, r21
    1254:	01 97       	sbiw	r24, 0x01	; 1
    1256:	9c 87       	std	Y+12, r25	; 0x0c
    1258:	8b 87       	std	Y+11, r24	; 0x0b
    125a:	6f e1       	ldi	r22, 0x1F	; 31
    125c:	70 e0       	ldi	r23, 0x00	; 0
    125e:	a1 2c       	mov	r10, r1
    1260:	b1 2c       	mov	r11, r1
    1262:	c1 2c       	mov	r12, r1
    1264:	a0 e4       	ldi	r26, 0x40	; 64
    1266:	da 2e       	mov	r13, r26
    1268:	80 e0       	ldi	r24, 0x00	; 0
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	dc 01       	movw	r26, r24
    126e:	2e 15       	cp	r18, r14
    1270:	3f 05       	cpc	r19, r15
    1272:	40 07       	cpc	r20, r16
    1274:	51 07       	cpc	r21, r17
    1276:	40 f0       	brcs	.+16     	; 0x1288 <__divsf3+0xea>
    1278:	8a 29       	or	r24, r10
    127a:	9b 29       	or	r25, r11
    127c:	ac 29       	or	r26, r12
    127e:	bd 29       	or	r27, r13
    1280:	2e 19       	sub	r18, r14
    1282:	3f 09       	sbc	r19, r15
    1284:	40 0b       	sbc	r20, r16
    1286:	51 0b       	sbc	r21, r17
    1288:	d6 94       	lsr	r13
    128a:	c7 94       	ror	r12
    128c:	b7 94       	ror	r11
    128e:	a7 94       	ror	r10
    1290:	22 0f       	add	r18, r18
    1292:	33 1f       	adc	r19, r19
    1294:	44 1f       	adc	r20, r20
    1296:	55 1f       	adc	r21, r21
    1298:	61 50       	subi	r22, 0x01	; 1
    129a:	70 40       	sbci	r23, 0x00	; 0
    129c:	41 f7       	brne	.-48     	; 0x126e <__divsf3+0xd0>
    129e:	6f e7       	ldi	r22, 0x7F	; 127
    12a0:	e6 2e       	mov	r14, r22
    12a2:	f1 2c       	mov	r15, r1
    12a4:	01 2d       	mov	r16, r1
    12a6:	11 2d       	mov	r17, r1
    12a8:	e8 22       	and	r14, r24
    12aa:	f9 22       	and	r15, r25
    12ac:	0a 23       	and	r16, r26
    12ae:	1b 23       	and	r17, r27
    12b0:	60 e4       	ldi	r22, 0x40	; 64
    12b2:	e6 16       	cp	r14, r22
    12b4:	f1 04       	cpc	r15, r1
    12b6:	01 05       	cpc	r16, r1
    12b8:	11 05       	cpc	r17, r1
    12ba:	61 f4       	brne	.+24     	; 0x12d4 <__divsf3+0x136>
    12bc:	87 fd       	sbrc	r24, 7
    12be:	0a c0       	rjmp	.+20     	; 0x12d4 <__divsf3+0x136>
    12c0:	21 15       	cp	r18, r1
    12c2:	31 05       	cpc	r19, r1
    12c4:	41 05       	cpc	r20, r1
    12c6:	51 05       	cpc	r21, r1
    12c8:	29 f0       	breq	.+10     	; 0x12d4 <__divsf3+0x136>
    12ca:	80 5c       	subi	r24, 0xC0	; 192
    12cc:	9f 4f       	sbci	r25, 0xFF	; 255
    12ce:	af 4f       	sbci	r26, 0xFF	; 255
    12d0:	bf 4f       	sbci	r27, 0xFF	; 255
    12d2:	80 78       	andi	r24, 0x80	; 128
    12d4:	8d 87       	std	Y+13, r24	; 0x0d
    12d6:	9e 87       	std	Y+14, r25	; 0x0e
    12d8:	af 87       	std	Y+15, r26	; 0x0f
    12da:	b8 8b       	std	Y+16, r27	; 0x10
    12dc:	8e 01       	movw	r16, r28
    12de:	07 5f       	subi	r16, 0xF7	; 247
    12e0:	1f 4f       	sbci	r17, 0xFF	; 255
    12e2:	04 c0       	rjmp	.+8      	; 0x12ec <__divsf3+0x14e>
    12e4:	87 01       	movw	r16, r14
    12e6:	02 c0       	rjmp	.+4      	; 0x12ec <__divsf3+0x14e>
    12e8:	0a e6       	ldi	r16, 0x6A	; 106
    12ea:	10 e0       	ldi	r17, 0x00	; 0
    12ec:	c8 01       	movw	r24, r16
    12ee:	0e 94 19 0b 	call	0x1632	; 0x1632 <__pack_f>
    12f2:	68 96       	adiw	r28, 0x18	; 24
    12f4:	ea e0       	ldi	r30, 0x0A	; 10
    12f6:	0c 94 cd 0c 	jmp	0x199a	; 0x199a <__epilogue_restores__+0x10>

000012fa <__gtsf2>:
    12fa:	a8 e1       	ldi	r26, 0x18	; 24
    12fc:	b0 e0       	ldi	r27, 0x00	; 0
    12fe:	e3 e8       	ldi	r30, 0x83	; 131
    1300:	f9 e0       	ldi	r31, 0x09	; 9
    1302:	0c 94 b5 0c 	jmp	0x196a	; 0x196a <__prologue_saves__+0x18>
    1306:	69 83       	std	Y+1, r22	; 0x01
    1308:	7a 83       	std	Y+2, r23	; 0x02
    130a:	8b 83       	std	Y+3, r24	; 0x03
    130c:	9c 83       	std	Y+4, r25	; 0x04
    130e:	2d 83       	std	Y+5, r18	; 0x05
    1310:	3e 83       	std	Y+6, r19	; 0x06
    1312:	4f 83       	std	Y+7, r20	; 0x07
    1314:	58 87       	std	Y+8, r21	; 0x08
    1316:	8e 01       	movw	r16, r28
    1318:	07 5f       	subi	r16, 0xF7	; 247
    131a:	1f 4f       	sbci	r17, 0xFF	; 255
    131c:	ce 01       	movw	r24, r28
    131e:	01 96       	adiw	r24, 0x01	; 1
    1320:	b8 01       	movw	r22, r16
    1322:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
    1326:	81 e1       	ldi	r24, 0x11	; 17
    1328:	e8 2e       	mov	r14, r24
    132a:	f1 2c       	mov	r15, r1
    132c:	ec 0e       	add	r14, r28
    132e:	fd 1e       	adc	r15, r29
    1330:	ce 01       	movw	r24, r28
    1332:	05 96       	adiw	r24, 0x05	; 5
    1334:	b7 01       	movw	r22, r14
    1336:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
    133a:	89 85       	ldd	r24, Y+9	; 0x09
    133c:	82 30       	cpi	r24, 0x02	; 2
    133e:	40 f0       	brcs	.+16     	; 0x1350 <__gtsf2+0x56>
    1340:	89 89       	ldd	r24, Y+17	; 0x11
    1342:	82 30       	cpi	r24, 0x02	; 2
    1344:	28 f0       	brcs	.+10     	; 0x1350 <__gtsf2+0x56>
    1346:	c8 01       	movw	r24, r16
    1348:	b7 01       	movw	r22, r14
    134a:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <__fpcmp_parts_f>
    134e:	01 c0       	rjmp	.+2      	; 0x1352 <__gtsf2+0x58>
    1350:	8f ef       	ldi	r24, 0xFF	; 255
    1352:	68 96       	adiw	r28, 0x18	; 24
    1354:	e6 e0       	ldi	r30, 0x06	; 6
    1356:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__epilogue_restores__+0x18>

0000135a <__gesf2>:
    135a:	a8 e1       	ldi	r26, 0x18	; 24
    135c:	b0 e0       	ldi	r27, 0x00	; 0
    135e:	e3 eb       	ldi	r30, 0xB3	; 179
    1360:	f9 e0       	ldi	r31, 0x09	; 9
    1362:	0c 94 b5 0c 	jmp	0x196a	; 0x196a <__prologue_saves__+0x18>
    1366:	69 83       	std	Y+1, r22	; 0x01
    1368:	7a 83       	std	Y+2, r23	; 0x02
    136a:	8b 83       	std	Y+3, r24	; 0x03
    136c:	9c 83       	std	Y+4, r25	; 0x04
    136e:	2d 83       	std	Y+5, r18	; 0x05
    1370:	3e 83       	std	Y+6, r19	; 0x06
    1372:	4f 83       	std	Y+7, r20	; 0x07
    1374:	58 87       	std	Y+8, r21	; 0x08
    1376:	8e 01       	movw	r16, r28
    1378:	07 5f       	subi	r16, 0xF7	; 247
    137a:	1f 4f       	sbci	r17, 0xFF	; 255
    137c:	ce 01       	movw	r24, r28
    137e:	01 96       	adiw	r24, 0x01	; 1
    1380:	b8 01       	movw	r22, r16
    1382:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
    1386:	81 e1       	ldi	r24, 0x11	; 17
    1388:	e8 2e       	mov	r14, r24
    138a:	f1 2c       	mov	r15, r1
    138c:	ec 0e       	add	r14, r28
    138e:	fd 1e       	adc	r15, r29
    1390:	ce 01       	movw	r24, r28
    1392:	05 96       	adiw	r24, 0x05	; 5
    1394:	b7 01       	movw	r22, r14
    1396:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
    139a:	89 85       	ldd	r24, Y+9	; 0x09
    139c:	82 30       	cpi	r24, 0x02	; 2
    139e:	40 f0       	brcs	.+16     	; 0x13b0 <__gesf2+0x56>
    13a0:	89 89       	ldd	r24, Y+17	; 0x11
    13a2:	82 30       	cpi	r24, 0x02	; 2
    13a4:	28 f0       	brcs	.+10     	; 0x13b0 <__gesf2+0x56>
    13a6:	c8 01       	movw	r24, r16
    13a8:	b7 01       	movw	r22, r14
    13aa:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <__fpcmp_parts_f>
    13ae:	01 c0       	rjmp	.+2      	; 0x13b2 <__gesf2+0x58>
    13b0:	8f ef       	ldi	r24, 0xFF	; 255
    13b2:	68 96       	adiw	r28, 0x18	; 24
    13b4:	e6 e0       	ldi	r30, 0x06	; 6
    13b6:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__epilogue_restores__+0x18>

000013ba <__ltsf2>:
    13ba:	a8 e1       	ldi	r26, 0x18	; 24
    13bc:	b0 e0       	ldi	r27, 0x00	; 0
    13be:	e3 ee       	ldi	r30, 0xE3	; 227
    13c0:	f9 e0       	ldi	r31, 0x09	; 9
    13c2:	0c 94 b5 0c 	jmp	0x196a	; 0x196a <__prologue_saves__+0x18>
    13c6:	69 83       	std	Y+1, r22	; 0x01
    13c8:	7a 83       	std	Y+2, r23	; 0x02
    13ca:	8b 83       	std	Y+3, r24	; 0x03
    13cc:	9c 83       	std	Y+4, r25	; 0x04
    13ce:	2d 83       	std	Y+5, r18	; 0x05
    13d0:	3e 83       	std	Y+6, r19	; 0x06
    13d2:	4f 83       	std	Y+7, r20	; 0x07
    13d4:	58 87       	std	Y+8, r21	; 0x08
    13d6:	8e 01       	movw	r16, r28
    13d8:	07 5f       	subi	r16, 0xF7	; 247
    13da:	1f 4f       	sbci	r17, 0xFF	; 255
    13dc:	ce 01       	movw	r24, r28
    13de:	01 96       	adiw	r24, 0x01	; 1
    13e0:	b8 01       	movw	r22, r16
    13e2:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
    13e6:	81 e1       	ldi	r24, 0x11	; 17
    13e8:	e8 2e       	mov	r14, r24
    13ea:	f1 2c       	mov	r15, r1
    13ec:	ec 0e       	add	r14, r28
    13ee:	fd 1e       	adc	r15, r29
    13f0:	ce 01       	movw	r24, r28
    13f2:	05 96       	adiw	r24, 0x05	; 5
    13f4:	b7 01       	movw	r22, r14
    13f6:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
    13fa:	89 85       	ldd	r24, Y+9	; 0x09
    13fc:	82 30       	cpi	r24, 0x02	; 2
    13fe:	40 f0       	brcs	.+16     	; 0x1410 <__ltsf2+0x56>
    1400:	89 89       	ldd	r24, Y+17	; 0x11
    1402:	82 30       	cpi	r24, 0x02	; 2
    1404:	28 f0       	brcs	.+10     	; 0x1410 <__ltsf2+0x56>
    1406:	c8 01       	movw	r24, r16
    1408:	b7 01       	movw	r22, r14
    140a:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <__fpcmp_parts_f>
    140e:	01 c0       	rjmp	.+2      	; 0x1412 <__ltsf2+0x58>
    1410:	81 e0       	ldi	r24, 0x01	; 1
    1412:	68 96       	adiw	r28, 0x18	; 24
    1414:	e6 e0       	ldi	r30, 0x06	; 6
    1416:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__epilogue_restores__+0x18>

0000141a <__floatsisf>:
    141a:	a8 e0       	ldi	r26, 0x08	; 8
    141c:	b0 e0       	ldi	r27, 0x00	; 0
    141e:	e3 e1       	ldi	r30, 0x13	; 19
    1420:	fa e0       	ldi	r31, 0x0A	; 10
    1422:	0c 94 b5 0c 	jmp	0x196a	; 0x196a <__prologue_saves__+0x18>
    1426:	7b 01       	movw	r14, r22
    1428:	8c 01       	movw	r16, r24
    142a:	83 e0       	ldi	r24, 0x03	; 3
    142c:	89 83       	std	Y+1, r24	; 0x01
    142e:	d8 01       	movw	r26, r16
    1430:	c7 01       	movw	r24, r14
    1432:	88 27       	eor	r24, r24
    1434:	b7 fd       	sbrc	r27, 7
    1436:	83 95       	inc	r24
    1438:	99 27       	eor	r25, r25
    143a:	aa 27       	eor	r26, r26
    143c:	bb 27       	eor	r27, r27
    143e:	28 2f       	mov	r18, r24
    1440:	8a 83       	std	Y+2, r24	; 0x02
    1442:	e1 14       	cp	r14, r1
    1444:	f1 04       	cpc	r15, r1
    1446:	01 05       	cpc	r16, r1
    1448:	11 05       	cpc	r17, r1
    144a:	19 f4       	brne	.+6      	; 0x1452 <__floatsisf+0x38>
    144c:	82 e0       	ldi	r24, 0x02	; 2
    144e:	89 83       	std	Y+1, r24	; 0x01
    1450:	37 c0       	rjmp	.+110    	; 0x14c0 <__floatsisf+0xa6>
    1452:	8e e1       	ldi	r24, 0x1E	; 30
    1454:	90 e0       	ldi	r25, 0x00	; 0
    1456:	9c 83       	std	Y+4, r25	; 0x04
    1458:	8b 83       	std	Y+3, r24	; 0x03
    145a:	22 23       	and	r18, r18
    145c:	89 f0       	breq	.+34     	; 0x1480 <__floatsisf+0x66>
    145e:	80 e0       	ldi	r24, 0x00	; 0
    1460:	e8 16       	cp	r14, r24
    1462:	80 e0       	ldi	r24, 0x00	; 0
    1464:	f8 06       	cpc	r15, r24
    1466:	80 e0       	ldi	r24, 0x00	; 0
    1468:	08 07       	cpc	r16, r24
    146a:	80 e8       	ldi	r24, 0x80	; 128
    146c:	18 07       	cpc	r17, r24
    146e:	69 f1       	breq	.+90     	; 0x14ca <__floatsisf+0xb0>
    1470:	10 95       	com	r17
    1472:	00 95       	com	r16
    1474:	f0 94       	com	r15
    1476:	e0 94       	com	r14
    1478:	e1 1c       	adc	r14, r1
    147a:	f1 1c       	adc	r15, r1
    147c:	01 1d       	adc	r16, r1
    147e:	11 1d       	adc	r17, r1
    1480:	ed 82       	std	Y+5, r14	; 0x05
    1482:	fe 82       	std	Y+6, r15	; 0x06
    1484:	0f 83       	std	Y+7, r16	; 0x07
    1486:	18 87       	std	Y+8, r17	; 0x08
    1488:	c8 01       	movw	r24, r16
    148a:	b7 01       	movw	r22, r14
    148c:	0e 94 bf 0a 	call	0x157e	; 0x157e <__clzsi2>
    1490:	9c 01       	movw	r18, r24
    1492:	21 50       	subi	r18, 0x01	; 1
    1494:	30 40       	sbci	r19, 0x00	; 0
    1496:	12 16       	cp	r1, r18
    1498:	13 06       	cpc	r1, r19
    149a:	94 f4       	brge	.+36     	; 0x14c0 <__floatsisf+0xa6>
    149c:	02 2e       	mov	r0, r18
    149e:	04 c0       	rjmp	.+8      	; 0x14a8 <__floatsisf+0x8e>
    14a0:	ee 0c       	add	r14, r14
    14a2:	ff 1c       	adc	r15, r15
    14a4:	00 1f       	adc	r16, r16
    14a6:	11 1f       	adc	r17, r17
    14a8:	0a 94       	dec	r0
    14aa:	d2 f7       	brpl	.-12     	; 0x14a0 <__floatsisf+0x86>
    14ac:	ed 82       	std	Y+5, r14	; 0x05
    14ae:	fe 82       	std	Y+6, r15	; 0x06
    14b0:	0f 83       	std	Y+7, r16	; 0x07
    14b2:	18 87       	std	Y+8, r17	; 0x08
    14b4:	8e e1       	ldi	r24, 0x1E	; 30
    14b6:	90 e0       	ldi	r25, 0x00	; 0
    14b8:	82 1b       	sub	r24, r18
    14ba:	93 0b       	sbc	r25, r19
    14bc:	9c 83       	std	Y+4, r25	; 0x04
    14be:	8b 83       	std	Y+3, r24	; 0x03
    14c0:	ce 01       	movw	r24, r28
    14c2:	01 96       	adiw	r24, 0x01	; 1
    14c4:	0e 94 19 0b 	call	0x1632	; 0x1632 <__pack_f>
    14c8:	04 c0       	rjmp	.+8      	; 0x14d2 <__floatsisf+0xb8>
    14ca:	60 e0       	ldi	r22, 0x00	; 0
    14cc:	70 e0       	ldi	r23, 0x00	; 0
    14ce:	80 e0       	ldi	r24, 0x00	; 0
    14d0:	9f ec       	ldi	r25, 0xCF	; 207
    14d2:	28 96       	adiw	r28, 0x08	; 8
    14d4:	e6 e0       	ldi	r30, 0x06	; 6
    14d6:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__epilogue_restores__+0x18>

000014da <__fixsfsi>:
    14da:	ac e0       	ldi	r26, 0x0C	; 12
    14dc:	b0 e0       	ldi	r27, 0x00	; 0
    14de:	e3 e7       	ldi	r30, 0x73	; 115
    14e0:	fa e0       	ldi	r31, 0x0A	; 10
    14e2:	0c 94 b9 0c 	jmp	0x1972	; 0x1972 <__prologue_saves__+0x20>
    14e6:	69 83       	std	Y+1, r22	; 0x01
    14e8:	7a 83       	std	Y+2, r23	; 0x02
    14ea:	8b 83       	std	Y+3, r24	; 0x03
    14ec:	9c 83       	std	Y+4, r25	; 0x04
    14ee:	ce 01       	movw	r24, r28
    14f0:	01 96       	adiw	r24, 0x01	; 1
    14f2:	be 01       	movw	r22, r28
    14f4:	6b 5f       	subi	r22, 0xFB	; 251
    14f6:	7f 4f       	sbci	r23, 0xFF	; 255
    14f8:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__unpack_f>
    14fc:	8d 81       	ldd	r24, Y+5	; 0x05
    14fe:	82 30       	cpi	r24, 0x02	; 2
    1500:	81 f1       	breq	.+96     	; 0x1562 <__fixsfsi+0x88>
    1502:	82 30       	cpi	r24, 0x02	; 2
    1504:	70 f1       	brcs	.+92     	; 0x1562 <__fixsfsi+0x88>
    1506:	84 30       	cpi	r24, 0x04	; 4
    1508:	21 f4       	brne	.+8      	; 0x1512 <__fixsfsi+0x38>
    150a:	8e 81       	ldd	r24, Y+6	; 0x06
    150c:	88 23       	and	r24, r24
    150e:	69 f1       	breq	.+90     	; 0x156a <__fixsfsi+0x90>
    1510:	0a c0       	rjmp	.+20     	; 0x1526 <__fixsfsi+0x4c>
    1512:	2f 81       	ldd	r18, Y+7	; 0x07
    1514:	38 85       	ldd	r19, Y+8	; 0x08
    1516:	37 fd       	sbrc	r19, 7
    1518:	24 c0       	rjmp	.+72     	; 0x1562 <__fixsfsi+0x88>
    151a:	6e 81       	ldd	r22, Y+6	; 0x06
    151c:	2f 31       	cpi	r18, 0x1F	; 31
    151e:	31 05       	cpc	r19, r1
    1520:	3c f0       	brlt	.+14     	; 0x1530 <__fixsfsi+0x56>
    1522:	66 23       	and	r22, r22
    1524:	11 f1       	breq	.+68     	; 0x156a <__fixsfsi+0x90>
    1526:	20 e0       	ldi	r18, 0x00	; 0
    1528:	30 e0       	ldi	r19, 0x00	; 0
    152a:	40 e0       	ldi	r20, 0x00	; 0
    152c:	50 e8       	ldi	r21, 0x80	; 128
    152e:	21 c0       	rjmp	.+66     	; 0x1572 <__fixsfsi+0x98>
    1530:	8e e1       	ldi	r24, 0x1E	; 30
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	82 1b       	sub	r24, r18
    1536:	93 0b       	sbc	r25, r19
    1538:	29 85       	ldd	r18, Y+9	; 0x09
    153a:	3a 85       	ldd	r19, Y+10	; 0x0a
    153c:	4b 85       	ldd	r20, Y+11	; 0x0b
    153e:	5c 85       	ldd	r21, Y+12	; 0x0c
    1540:	04 c0       	rjmp	.+8      	; 0x154a <__fixsfsi+0x70>
    1542:	56 95       	lsr	r21
    1544:	47 95       	ror	r20
    1546:	37 95       	ror	r19
    1548:	27 95       	ror	r18
    154a:	8a 95       	dec	r24
    154c:	d2 f7       	brpl	.-12     	; 0x1542 <__fixsfsi+0x68>
    154e:	66 23       	and	r22, r22
    1550:	81 f0       	breq	.+32     	; 0x1572 <__fixsfsi+0x98>
    1552:	50 95       	com	r21
    1554:	40 95       	com	r20
    1556:	30 95       	com	r19
    1558:	21 95       	neg	r18
    155a:	3f 4f       	sbci	r19, 0xFF	; 255
    155c:	4f 4f       	sbci	r20, 0xFF	; 255
    155e:	5f 4f       	sbci	r21, 0xFF	; 255
    1560:	08 c0       	rjmp	.+16     	; 0x1572 <__fixsfsi+0x98>
    1562:	20 e0       	ldi	r18, 0x00	; 0
    1564:	30 e0       	ldi	r19, 0x00	; 0
    1566:	a9 01       	movw	r20, r18
    1568:	04 c0       	rjmp	.+8      	; 0x1572 <__fixsfsi+0x98>
    156a:	2f ef       	ldi	r18, 0xFF	; 255
    156c:	3f ef       	ldi	r19, 0xFF	; 255
    156e:	4f ef       	ldi	r20, 0xFF	; 255
    1570:	5f e7       	ldi	r21, 0x7F	; 127
    1572:	b9 01       	movw	r22, r18
    1574:	ca 01       	movw	r24, r20
    1576:	2c 96       	adiw	r28, 0x0c	; 12
    1578:	e2 e0       	ldi	r30, 0x02	; 2
    157a:	0c 94 d5 0c 	jmp	0x19aa	; 0x19aa <__epilogue_restores__+0x20>

0000157e <__clzsi2>:
    157e:	af 92       	push	r10
    1580:	bf 92       	push	r11
    1582:	cf 92       	push	r12
    1584:	df 92       	push	r13
    1586:	ef 92       	push	r14
    1588:	ff 92       	push	r15
    158a:	0f 93       	push	r16
    158c:	1f 93       	push	r17
    158e:	7b 01       	movw	r14, r22
    1590:	8c 01       	movw	r16, r24
    1592:	80 e0       	ldi	r24, 0x00	; 0
    1594:	e8 16       	cp	r14, r24
    1596:	80 e0       	ldi	r24, 0x00	; 0
    1598:	f8 06       	cpc	r15, r24
    159a:	81 e0       	ldi	r24, 0x01	; 1
    159c:	08 07       	cpc	r16, r24
    159e:	80 e0       	ldi	r24, 0x00	; 0
    15a0:	18 07       	cpc	r17, r24
    15a2:	58 f4       	brcc	.+22     	; 0x15ba <__clzsi2+0x3c>
    15a4:	ef ef       	ldi	r30, 0xFF	; 255
    15a6:	ee 16       	cp	r14, r30
    15a8:	f1 04       	cpc	r15, r1
    15aa:	01 05       	cpc	r16, r1
    15ac:	11 05       	cpc	r17, r1
    15ae:	09 f0       	breq	.+2      	; 0x15b2 <__clzsi2+0x34>
    15b0:	90 f4       	brcc	.+36     	; 0x15d6 <__clzsi2+0x58>
    15b2:	80 e0       	ldi	r24, 0x00	; 0
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	dc 01       	movw	r26, r24
    15b8:	17 c0       	rjmp	.+46     	; 0x15e8 <__clzsi2+0x6a>
    15ba:	f0 e0       	ldi	r31, 0x00	; 0
    15bc:	ef 16       	cp	r14, r31
    15be:	f0 e0       	ldi	r31, 0x00	; 0
    15c0:	ff 06       	cpc	r15, r31
    15c2:	f0 e0       	ldi	r31, 0x00	; 0
    15c4:	0f 07       	cpc	r16, r31
    15c6:	f1 e0       	ldi	r31, 0x01	; 1
    15c8:	1f 07       	cpc	r17, r31
    15ca:	50 f4       	brcc	.+20     	; 0x15e0 <__clzsi2+0x62>
    15cc:	80 e1       	ldi	r24, 0x10	; 16
    15ce:	90 e0       	ldi	r25, 0x00	; 0
    15d0:	a0 e0       	ldi	r26, 0x00	; 0
    15d2:	b0 e0       	ldi	r27, 0x00	; 0
    15d4:	09 c0       	rjmp	.+18     	; 0x15e8 <__clzsi2+0x6a>
    15d6:	88 e0       	ldi	r24, 0x08	; 8
    15d8:	90 e0       	ldi	r25, 0x00	; 0
    15da:	a0 e0       	ldi	r26, 0x00	; 0
    15dc:	b0 e0       	ldi	r27, 0x00	; 0
    15de:	04 c0       	rjmp	.+8      	; 0x15e8 <__clzsi2+0x6a>
    15e0:	88 e1       	ldi	r24, 0x18	; 24
    15e2:	90 e0       	ldi	r25, 0x00	; 0
    15e4:	a0 e0       	ldi	r26, 0x00	; 0
    15e6:	b0 e0       	ldi	r27, 0x00	; 0
    15e8:	20 e2       	ldi	r18, 0x20	; 32
    15ea:	30 e0       	ldi	r19, 0x00	; 0
    15ec:	40 e0       	ldi	r20, 0x00	; 0
    15ee:	50 e0       	ldi	r21, 0x00	; 0
    15f0:	28 1b       	sub	r18, r24
    15f2:	39 0b       	sbc	r19, r25
    15f4:	4a 0b       	sbc	r20, r26
    15f6:	5b 0b       	sbc	r21, r27
    15f8:	57 01       	movw	r10, r14
    15fa:	68 01       	movw	r12, r16
    15fc:	04 c0       	rjmp	.+8      	; 0x1606 <__clzsi2+0x88>
    15fe:	d6 94       	lsr	r13
    1600:	c7 94       	ror	r12
    1602:	b7 94       	ror	r11
    1604:	a7 94       	ror	r10
    1606:	8a 95       	dec	r24
    1608:	d2 f7       	brpl	.-12     	; 0x15fe <__clzsi2+0x80>
    160a:	d6 01       	movw	r26, r12
    160c:	c5 01       	movw	r24, r10
    160e:	8e 58       	subi	r24, 0x8E	; 142
    1610:	9f 4f       	sbci	r25, 0xFF	; 255
    1612:	fc 01       	movw	r30, r24
    1614:	80 81       	ld	r24, Z
    1616:	28 1b       	sub	r18, r24
    1618:	31 09       	sbc	r19, r1
    161a:	41 09       	sbc	r20, r1
    161c:	51 09       	sbc	r21, r1
    161e:	c9 01       	movw	r24, r18
    1620:	1f 91       	pop	r17
    1622:	0f 91       	pop	r16
    1624:	ff 90       	pop	r15
    1626:	ef 90       	pop	r14
    1628:	df 90       	pop	r13
    162a:	cf 90       	pop	r12
    162c:	bf 90       	pop	r11
    162e:	af 90       	pop	r10
    1630:	08 95       	ret

00001632 <__pack_f>:
    1632:	ef 92       	push	r14
    1634:	ff 92       	push	r15
    1636:	0f 93       	push	r16
    1638:	1f 93       	push	r17
    163a:	cf 93       	push	r28
    163c:	df 93       	push	r29
    163e:	fc 01       	movw	r30, r24
    1640:	24 81       	ldd	r18, Z+4	; 0x04
    1642:	35 81       	ldd	r19, Z+5	; 0x05
    1644:	46 81       	ldd	r20, Z+6	; 0x06
    1646:	57 81       	ldd	r21, Z+7	; 0x07
    1648:	61 81       	ldd	r22, Z+1	; 0x01
    164a:	80 81       	ld	r24, Z
    164c:	82 30       	cpi	r24, 0x02	; 2
    164e:	20 f4       	brcc	.+8      	; 0x1658 <__pack_f+0x26>
    1650:	40 61       	ori	r20, 0x10	; 16
    1652:	ef ef       	ldi	r30, 0xFF	; 255
    1654:	f0 e0       	ldi	r31, 0x00	; 0
    1656:	a3 c0       	rjmp	.+326    	; 0x179e <__pack_f+0x16c>
    1658:	84 30       	cpi	r24, 0x04	; 4
    165a:	09 f4       	brne	.+2      	; 0x165e <__pack_f+0x2c>
    165c:	9b c0       	rjmp	.+310    	; 0x1794 <__pack_f+0x162>
    165e:	82 30       	cpi	r24, 0x02	; 2
    1660:	09 f4       	brne	.+2      	; 0x1664 <__pack_f+0x32>
    1662:	92 c0       	rjmp	.+292    	; 0x1788 <__pack_f+0x156>
    1664:	21 15       	cp	r18, r1
    1666:	31 05       	cpc	r19, r1
    1668:	41 05       	cpc	r20, r1
    166a:	51 05       	cpc	r21, r1
    166c:	09 f4       	brne	.+2      	; 0x1670 <__pack_f+0x3e>
    166e:	8f c0       	rjmp	.+286    	; 0x178e <__pack_f+0x15c>
    1670:	02 80       	ldd	r0, Z+2	; 0x02
    1672:	f3 81       	ldd	r31, Z+3	; 0x03
    1674:	e0 2d       	mov	r30, r0
    1676:	8f ef       	ldi	r24, 0xFF	; 255
    1678:	e2 38       	cpi	r30, 0x82	; 130
    167a:	f8 07       	cpc	r31, r24
    167c:	0c f0       	brlt	.+2      	; 0x1680 <__pack_f+0x4e>
    167e:	5a c0       	rjmp	.+180    	; 0x1734 <__pack_f+0x102>
    1680:	c2 e8       	ldi	r28, 0x82	; 130
    1682:	df ef       	ldi	r29, 0xFF	; 255
    1684:	ce 1b       	sub	r28, r30
    1686:	df 0b       	sbc	r29, r31
    1688:	ca 31       	cpi	r28, 0x1A	; 26
    168a:	d1 05       	cpc	r29, r1
    168c:	6c f5       	brge	.+90     	; 0x16e8 <__pack_f+0xb6>
    168e:	79 01       	movw	r14, r18
    1690:	8a 01       	movw	r16, r20
    1692:	0c 2e       	mov	r0, r28
    1694:	04 c0       	rjmp	.+8      	; 0x169e <__pack_f+0x6c>
    1696:	16 95       	lsr	r17
    1698:	07 95       	ror	r16
    169a:	f7 94       	ror	r15
    169c:	e7 94       	ror	r14
    169e:	0a 94       	dec	r0
    16a0:	d2 f7       	brpl	.-12     	; 0x1696 <__pack_f+0x64>
    16a2:	81 e0       	ldi	r24, 0x01	; 1
    16a4:	90 e0       	ldi	r25, 0x00	; 0
    16a6:	a0 e0       	ldi	r26, 0x00	; 0
    16a8:	b0 e0       	ldi	r27, 0x00	; 0
    16aa:	0c 2e       	mov	r0, r28
    16ac:	04 c0       	rjmp	.+8      	; 0x16b6 <__pack_f+0x84>
    16ae:	88 0f       	add	r24, r24
    16b0:	99 1f       	adc	r25, r25
    16b2:	aa 1f       	adc	r26, r26
    16b4:	bb 1f       	adc	r27, r27
    16b6:	0a 94       	dec	r0
    16b8:	d2 f7       	brpl	.-12     	; 0x16ae <__pack_f+0x7c>
    16ba:	01 97       	sbiw	r24, 0x01	; 1
    16bc:	a1 09       	sbc	r26, r1
    16be:	b1 09       	sbc	r27, r1
    16c0:	82 23       	and	r24, r18
    16c2:	93 23       	and	r25, r19
    16c4:	a4 23       	and	r26, r20
    16c6:	b5 23       	and	r27, r21
    16c8:	21 e0       	ldi	r18, 0x01	; 1
    16ca:	30 e0       	ldi	r19, 0x00	; 0
    16cc:	40 e0       	ldi	r20, 0x00	; 0
    16ce:	50 e0       	ldi	r21, 0x00	; 0
    16d0:	00 97       	sbiw	r24, 0x00	; 0
    16d2:	a1 05       	cpc	r26, r1
    16d4:	b1 05       	cpc	r27, r1
    16d6:	19 f4       	brne	.+6      	; 0x16de <__pack_f+0xac>
    16d8:	20 e0       	ldi	r18, 0x00	; 0
    16da:	30 e0       	ldi	r19, 0x00	; 0
    16dc:	a9 01       	movw	r20, r18
    16de:	2e 29       	or	r18, r14
    16e0:	3f 29       	or	r19, r15
    16e2:	40 2b       	or	r20, r16
    16e4:	51 2b       	or	r21, r17
    16e6:	03 c0       	rjmp	.+6      	; 0x16ee <__pack_f+0xbc>
    16e8:	20 e0       	ldi	r18, 0x00	; 0
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	a9 01       	movw	r20, r18
    16ee:	da 01       	movw	r26, r20
    16f0:	c9 01       	movw	r24, r18
    16f2:	8f 77       	andi	r24, 0x7F	; 127
    16f4:	90 70       	andi	r25, 0x00	; 0
    16f6:	a0 70       	andi	r26, 0x00	; 0
    16f8:	b0 70       	andi	r27, 0x00	; 0
    16fa:	80 34       	cpi	r24, 0x40	; 64
    16fc:	91 05       	cpc	r25, r1
    16fe:	a1 05       	cpc	r26, r1
    1700:	b1 05       	cpc	r27, r1
    1702:	39 f4       	brne	.+14     	; 0x1712 <__pack_f+0xe0>
    1704:	27 ff       	sbrs	r18, 7
    1706:	09 c0       	rjmp	.+18     	; 0x171a <__pack_f+0xe8>
    1708:	20 5c       	subi	r18, 0xC0	; 192
    170a:	3f 4f       	sbci	r19, 0xFF	; 255
    170c:	4f 4f       	sbci	r20, 0xFF	; 255
    170e:	5f 4f       	sbci	r21, 0xFF	; 255
    1710:	04 c0       	rjmp	.+8      	; 0x171a <__pack_f+0xe8>
    1712:	21 5c       	subi	r18, 0xC1	; 193
    1714:	3f 4f       	sbci	r19, 0xFF	; 255
    1716:	4f 4f       	sbci	r20, 0xFF	; 255
    1718:	5f 4f       	sbci	r21, 0xFF	; 255
    171a:	e1 e0       	ldi	r30, 0x01	; 1
    171c:	f0 e0       	ldi	r31, 0x00	; 0
    171e:	20 30       	cpi	r18, 0x00	; 0
    1720:	80 e0       	ldi	r24, 0x00	; 0
    1722:	38 07       	cpc	r19, r24
    1724:	80 e0       	ldi	r24, 0x00	; 0
    1726:	48 07       	cpc	r20, r24
    1728:	80 e4       	ldi	r24, 0x40	; 64
    172a:	58 07       	cpc	r21, r24
    172c:	28 f5       	brcc	.+74     	; 0x1778 <__pack_f+0x146>
    172e:	e0 e0       	ldi	r30, 0x00	; 0
    1730:	f0 e0       	ldi	r31, 0x00	; 0
    1732:	22 c0       	rjmp	.+68     	; 0x1778 <__pack_f+0x146>
    1734:	e0 38       	cpi	r30, 0x80	; 128
    1736:	f1 05       	cpc	r31, r1
    1738:	6c f5       	brge	.+90     	; 0x1794 <__pack_f+0x162>
    173a:	e1 58       	subi	r30, 0x81	; 129
    173c:	ff 4f       	sbci	r31, 0xFF	; 255
    173e:	da 01       	movw	r26, r20
    1740:	c9 01       	movw	r24, r18
    1742:	8f 77       	andi	r24, 0x7F	; 127
    1744:	90 70       	andi	r25, 0x00	; 0
    1746:	a0 70       	andi	r26, 0x00	; 0
    1748:	b0 70       	andi	r27, 0x00	; 0
    174a:	80 34       	cpi	r24, 0x40	; 64
    174c:	91 05       	cpc	r25, r1
    174e:	a1 05       	cpc	r26, r1
    1750:	b1 05       	cpc	r27, r1
    1752:	39 f4       	brne	.+14     	; 0x1762 <__pack_f+0x130>
    1754:	27 ff       	sbrs	r18, 7
    1756:	09 c0       	rjmp	.+18     	; 0x176a <__pack_f+0x138>
    1758:	20 5c       	subi	r18, 0xC0	; 192
    175a:	3f 4f       	sbci	r19, 0xFF	; 255
    175c:	4f 4f       	sbci	r20, 0xFF	; 255
    175e:	5f 4f       	sbci	r21, 0xFF	; 255
    1760:	04 c0       	rjmp	.+8      	; 0x176a <__pack_f+0x138>
    1762:	21 5c       	subi	r18, 0xC1	; 193
    1764:	3f 4f       	sbci	r19, 0xFF	; 255
    1766:	4f 4f       	sbci	r20, 0xFF	; 255
    1768:	5f 4f       	sbci	r21, 0xFF	; 255
    176a:	57 ff       	sbrs	r21, 7
    176c:	05 c0       	rjmp	.+10     	; 0x1778 <__pack_f+0x146>
    176e:	56 95       	lsr	r21
    1770:	47 95       	ror	r20
    1772:	37 95       	ror	r19
    1774:	27 95       	ror	r18
    1776:	31 96       	adiw	r30, 0x01	; 1
    1778:	87 e0       	ldi	r24, 0x07	; 7
    177a:	56 95       	lsr	r21
    177c:	47 95       	ror	r20
    177e:	37 95       	ror	r19
    1780:	27 95       	ror	r18
    1782:	8a 95       	dec	r24
    1784:	d1 f7       	brne	.-12     	; 0x177a <__pack_f+0x148>
    1786:	0b c0       	rjmp	.+22     	; 0x179e <__pack_f+0x16c>
    1788:	e0 e0       	ldi	r30, 0x00	; 0
    178a:	f0 e0       	ldi	r31, 0x00	; 0
    178c:	05 c0       	rjmp	.+10     	; 0x1798 <__pack_f+0x166>
    178e:	e0 e0       	ldi	r30, 0x00	; 0
    1790:	f0 e0       	ldi	r31, 0x00	; 0
    1792:	05 c0       	rjmp	.+10     	; 0x179e <__pack_f+0x16c>
    1794:	ef ef       	ldi	r30, 0xFF	; 255
    1796:	f0 e0       	ldi	r31, 0x00	; 0
    1798:	20 e0       	ldi	r18, 0x00	; 0
    179a:	30 e0       	ldi	r19, 0x00	; 0
    179c:	a9 01       	movw	r20, r18
    179e:	8e 2f       	mov	r24, r30
    17a0:	87 95       	ror	r24
    17a2:	88 27       	eor	r24, r24
    17a4:	87 95       	ror	r24
    17a6:	94 2f       	mov	r25, r20
    17a8:	9f 77       	andi	r25, 0x7F	; 127
    17aa:	67 95       	ror	r22
    17ac:	66 27       	eor	r22, r22
    17ae:	67 95       	ror	r22
    17b0:	e6 95       	lsr	r30
    17b2:	e2 2e       	mov	r14, r18
    17b4:	a9 2f       	mov	r26, r25
    17b6:	a8 2b       	or	r26, r24
    17b8:	fe 2f       	mov	r31, r30
    17ba:	f6 2b       	or	r31, r22
    17bc:	62 2f       	mov	r22, r18
    17be:	73 2f       	mov	r23, r19
    17c0:	8a 2f       	mov	r24, r26
    17c2:	9f 2f       	mov	r25, r31
    17c4:	cd b7       	in	r28, 0x3d	; 61
    17c6:	de b7       	in	r29, 0x3e	; 62
    17c8:	e6 e0       	ldi	r30, 0x06	; 6
    17ca:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__epilogue_restores__+0x18>

000017ce <__unpack_f>:
    17ce:	dc 01       	movw	r26, r24
    17d0:	fb 01       	movw	r30, r22
    17d2:	2c 91       	ld	r18, X
    17d4:	11 96       	adiw	r26, 0x01	; 1
    17d6:	3c 91       	ld	r19, X
    17d8:	11 97       	sbiw	r26, 0x01	; 1
    17da:	12 96       	adiw	r26, 0x02	; 2
    17dc:	8c 91       	ld	r24, X
    17de:	12 97       	sbiw	r26, 0x02	; 2
    17e0:	48 2f       	mov	r20, r24
    17e2:	4f 77       	andi	r20, 0x7F	; 127
    17e4:	50 e0       	ldi	r21, 0x00	; 0
    17e6:	98 2f       	mov	r25, r24
    17e8:	99 1f       	adc	r25, r25
    17ea:	99 27       	eor	r25, r25
    17ec:	99 1f       	adc	r25, r25
    17ee:	13 96       	adiw	r26, 0x03	; 3
    17f0:	6c 91       	ld	r22, X
    17f2:	13 97       	sbiw	r26, 0x03	; 3
    17f4:	86 2f       	mov	r24, r22
    17f6:	88 0f       	add	r24, r24
    17f8:	89 2b       	or	r24, r25
    17fa:	90 e0       	ldi	r25, 0x00	; 0
    17fc:	66 1f       	adc	r22, r22
    17fe:	66 27       	eor	r22, r22
    1800:	66 1f       	adc	r22, r22
    1802:	61 83       	std	Z+1, r22	; 0x01
    1804:	00 97       	sbiw	r24, 0x00	; 0
    1806:	39 f5       	brne	.+78     	; 0x1856 <__unpack_f+0x88>
    1808:	21 15       	cp	r18, r1
    180a:	31 05       	cpc	r19, r1
    180c:	41 05       	cpc	r20, r1
    180e:	51 05       	cpc	r21, r1
    1810:	11 f4       	brne	.+4      	; 0x1816 <__unpack_f+0x48>
    1812:	82 e0       	ldi	r24, 0x02	; 2
    1814:	29 c0       	rjmp	.+82     	; 0x1868 <__unpack_f+0x9a>
    1816:	82 e8       	ldi	r24, 0x82	; 130
    1818:	9f ef       	ldi	r25, 0xFF	; 255
    181a:	93 83       	std	Z+3, r25	; 0x03
    181c:	82 83       	std	Z+2, r24	; 0x02
    181e:	67 e0       	ldi	r22, 0x07	; 7
    1820:	22 0f       	add	r18, r18
    1822:	33 1f       	adc	r19, r19
    1824:	44 1f       	adc	r20, r20
    1826:	55 1f       	adc	r21, r21
    1828:	6a 95       	dec	r22
    182a:	d1 f7       	brne	.-12     	; 0x1820 <__unpack_f+0x52>
    182c:	83 e0       	ldi	r24, 0x03	; 3
    182e:	80 83       	st	Z, r24
    1830:	09 c0       	rjmp	.+18     	; 0x1844 <__unpack_f+0x76>
    1832:	22 0f       	add	r18, r18
    1834:	33 1f       	adc	r19, r19
    1836:	44 1f       	adc	r20, r20
    1838:	55 1f       	adc	r21, r21
    183a:	82 81       	ldd	r24, Z+2	; 0x02
    183c:	93 81       	ldd	r25, Z+3	; 0x03
    183e:	01 97       	sbiw	r24, 0x01	; 1
    1840:	93 83       	std	Z+3, r25	; 0x03
    1842:	82 83       	std	Z+2, r24	; 0x02
    1844:	20 30       	cpi	r18, 0x00	; 0
    1846:	80 e0       	ldi	r24, 0x00	; 0
    1848:	38 07       	cpc	r19, r24
    184a:	80 e0       	ldi	r24, 0x00	; 0
    184c:	48 07       	cpc	r20, r24
    184e:	80 e4       	ldi	r24, 0x40	; 64
    1850:	58 07       	cpc	r21, r24
    1852:	78 f3       	brcs	.-34     	; 0x1832 <__unpack_f+0x64>
    1854:	20 c0       	rjmp	.+64     	; 0x1896 <__unpack_f+0xc8>
    1856:	8f 3f       	cpi	r24, 0xFF	; 255
    1858:	91 05       	cpc	r25, r1
    185a:	79 f4       	brne	.+30     	; 0x187a <__unpack_f+0xac>
    185c:	21 15       	cp	r18, r1
    185e:	31 05       	cpc	r19, r1
    1860:	41 05       	cpc	r20, r1
    1862:	51 05       	cpc	r21, r1
    1864:	19 f4       	brne	.+6      	; 0x186c <__unpack_f+0x9e>
    1866:	84 e0       	ldi	r24, 0x04	; 4
    1868:	80 83       	st	Z, r24
    186a:	08 95       	ret
    186c:	44 ff       	sbrs	r20, 4
    186e:	03 c0       	rjmp	.+6      	; 0x1876 <__unpack_f+0xa8>
    1870:	81 e0       	ldi	r24, 0x01	; 1
    1872:	80 83       	st	Z, r24
    1874:	10 c0       	rjmp	.+32     	; 0x1896 <__unpack_f+0xc8>
    1876:	10 82       	st	Z, r1
    1878:	0e c0       	rjmp	.+28     	; 0x1896 <__unpack_f+0xc8>
    187a:	8f 57       	subi	r24, 0x7F	; 127
    187c:	90 40       	sbci	r25, 0x00	; 0
    187e:	93 83       	std	Z+3, r25	; 0x03
    1880:	82 83       	std	Z+2, r24	; 0x02
    1882:	83 e0       	ldi	r24, 0x03	; 3
    1884:	80 83       	st	Z, r24
    1886:	87 e0       	ldi	r24, 0x07	; 7
    1888:	22 0f       	add	r18, r18
    188a:	33 1f       	adc	r19, r19
    188c:	44 1f       	adc	r20, r20
    188e:	55 1f       	adc	r21, r21
    1890:	8a 95       	dec	r24
    1892:	d1 f7       	brne	.-12     	; 0x1888 <__unpack_f+0xba>
    1894:	50 64       	ori	r21, 0x40	; 64
    1896:	24 83       	std	Z+4, r18	; 0x04
    1898:	35 83       	std	Z+5, r19	; 0x05
    189a:	46 83       	std	Z+6, r20	; 0x06
    189c:	57 83       	std	Z+7, r21	; 0x07
    189e:	08 95       	ret

000018a0 <__fpcmp_parts_f>:
    18a0:	fc 01       	movw	r30, r24
    18a2:	db 01       	movw	r26, r22
    18a4:	90 81       	ld	r25, Z
    18a6:	92 30       	cpi	r25, 0x02	; 2
    18a8:	08 f4       	brcc	.+2      	; 0x18ac <__fpcmp_parts_f+0xc>
    18aa:	49 c0       	rjmp	.+146    	; 0x193e <__fpcmp_parts_f+0x9e>
    18ac:	8c 91       	ld	r24, X
    18ae:	82 30       	cpi	r24, 0x02	; 2
    18b0:	08 f4       	brcc	.+2      	; 0x18b4 <__fpcmp_parts_f+0x14>
    18b2:	45 c0       	rjmp	.+138    	; 0x193e <__fpcmp_parts_f+0x9e>
    18b4:	94 30       	cpi	r25, 0x04	; 4
    18b6:	51 f4       	brne	.+20     	; 0x18cc <__fpcmp_parts_f+0x2c>
    18b8:	61 81       	ldd	r22, Z+1	; 0x01
    18ba:	84 30       	cpi	r24, 0x04	; 4
    18bc:	b1 f5       	brne	.+108    	; 0x192a <__fpcmp_parts_f+0x8a>
    18be:	11 96       	adiw	r26, 0x01	; 1
    18c0:	2c 91       	ld	r18, X
    18c2:	11 97       	sbiw	r26, 0x01	; 1
    18c4:	30 e0       	ldi	r19, 0x00	; 0
    18c6:	26 1b       	sub	r18, r22
    18c8:	31 09       	sbc	r19, r1
    18ca:	41 c0       	rjmp	.+130    	; 0x194e <__fpcmp_parts_f+0xae>
    18cc:	84 30       	cpi	r24, 0x04	; 4
    18ce:	21 f0       	breq	.+8      	; 0x18d8 <__fpcmp_parts_f+0x38>
    18d0:	92 30       	cpi	r25, 0x02	; 2
    18d2:	41 f4       	brne	.+16     	; 0x18e4 <__fpcmp_parts_f+0x44>
    18d4:	82 30       	cpi	r24, 0x02	; 2
    18d6:	b1 f1       	breq	.+108    	; 0x1944 <__fpcmp_parts_f+0xa4>
    18d8:	11 96       	adiw	r26, 0x01	; 1
    18da:	8c 91       	ld	r24, X
    18dc:	11 97       	sbiw	r26, 0x01	; 1
    18de:	88 23       	and	r24, r24
    18e0:	a1 f1       	breq	.+104    	; 0x194a <__fpcmp_parts_f+0xaa>
    18e2:	2d c0       	rjmp	.+90     	; 0x193e <__fpcmp_parts_f+0x9e>
    18e4:	61 81       	ldd	r22, Z+1	; 0x01
    18e6:	82 30       	cpi	r24, 0x02	; 2
    18e8:	01 f1       	breq	.+64     	; 0x192a <__fpcmp_parts_f+0x8a>
    18ea:	11 96       	adiw	r26, 0x01	; 1
    18ec:	8c 91       	ld	r24, X
    18ee:	11 97       	sbiw	r26, 0x01	; 1
    18f0:	68 17       	cp	r22, r24
    18f2:	d9 f4       	brne	.+54     	; 0x192a <__fpcmp_parts_f+0x8a>
    18f4:	22 81       	ldd	r18, Z+2	; 0x02
    18f6:	33 81       	ldd	r19, Z+3	; 0x03
    18f8:	12 96       	adiw	r26, 0x02	; 2
    18fa:	8d 91       	ld	r24, X+
    18fc:	9c 91       	ld	r25, X
    18fe:	13 97       	sbiw	r26, 0x03	; 3
    1900:	82 17       	cp	r24, r18
    1902:	93 07       	cpc	r25, r19
    1904:	94 f0       	brlt	.+36     	; 0x192a <__fpcmp_parts_f+0x8a>
    1906:	28 17       	cp	r18, r24
    1908:	39 07       	cpc	r19, r25
    190a:	bc f0       	brlt	.+46     	; 0x193a <__fpcmp_parts_f+0x9a>
    190c:	24 81       	ldd	r18, Z+4	; 0x04
    190e:	35 81       	ldd	r19, Z+5	; 0x05
    1910:	46 81       	ldd	r20, Z+6	; 0x06
    1912:	57 81       	ldd	r21, Z+7	; 0x07
    1914:	14 96       	adiw	r26, 0x04	; 4
    1916:	8d 91       	ld	r24, X+
    1918:	9d 91       	ld	r25, X+
    191a:	0d 90       	ld	r0, X+
    191c:	bc 91       	ld	r27, X
    191e:	a0 2d       	mov	r26, r0
    1920:	82 17       	cp	r24, r18
    1922:	93 07       	cpc	r25, r19
    1924:	a4 07       	cpc	r26, r20
    1926:	b5 07       	cpc	r27, r21
    1928:	18 f4       	brcc	.+6      	; 0x1930 <__fpcmp_parts_f+0x90>
    192a:	66 23       	and	r22, r22
    192c:	41 f0       	breq	.+16     	; 0x193e <__fpcmp_parts_f+0x9e>
    192e:	0d c0       	rjmp	.+26     	; 0x194a <__fpcmp_parts_f+0xaa>
    1930:	28 17       	cp	r18, r24
    1932:	39 07       	cpc	r19, r25
    1934:	4a 07       	cpc	r20, r26
    1936:	5b 07       	cpc	r21, r27
    1938:	28 f4       	brcc	.+10     	; 0x1944 <__fpcmp_parts_f+0xa4>
    193a:	66 23       	and	r22, r22
    193c:	31 f0       	breq	.+12     	; 0x194a <__fpcmp_parts_f+0xaa>
    193e:	21 e0       	ldi	r18, 0x01	; 1
    1940:	30 e0       	ldi	r19, 0x00	; 0
    1942:	05 c0       	rjmp	.+10     	; 0x194e <__fpcmp_parts_f+0xae>
    1944:	20 e0       	ldi	r18, 0x00	; 0
    1946:	30 e0       	ldi	r19, 0x00	; 0
    1948:	02 c0       	rjmp	.+4      	; 0x194e <__fpcmp_parts_f+0xae>
    194a:	2f ef       	ldi	r18, 0xFF	; 255
    194c:	3f ef       	ldi	r19, 0xFF	; 255
    194e:	c9 01       	movw	r24, r18
    1950:	08 95       	ret

00001952 <__prologue_saves__>:
    1952:	2f 92       	push	r2
    1954:	3f 92       	push	r3
    1956:	4f 92       	push	r4
    1958:	5f 92       	push	r5
    195a:	6f 92       	push	r6
    195c:	7f 92       	push	r7
    195e:	8f 92       	push	r8
    1960:	9f 92       	push	r9
    1962:	af 92       	push	r10
    1964:	bf 92       	push	r11
    1966:	cf 92       	push	r12
    1968:	df 92       	push	r13
    196a:	ef 92       	push	r14
    196c:	ff 92       	push	r15
    196e:	0f 93       	push	r16
    1970:	1f 93       	push	r17
    1972:	cf 93       	push	r28
    1974:	df 93       	push	r29
    1976:	cd b7       	in	r28, 0x3d	; 61
    1978:	de b7       	in	r29, 0x3e	; 62
    197a:	ca 1b       	sub	r28, r26
    197c:	db 0b       	sbc	r29, r27
    197e:	0f b6       	in	r0, 0x3f	; 63
    1980:	f8 94       	cli
    1982:	de bf       	out	0x3e, r29	; 62
    1984:	0f be       	out	0x3f, r0	; 63
    1986:	cd bf       	out	0x3d, r28	; 61
    1988:	09 94       	ijmp

0000198a <__epilogue_restores__>:
    198a:	2a 88       	ldd	r2, Y+18	; 0x12
    198c:	39 88       	ldd	r3, Y+17	; 0x11
    198e:	48 88       	ldd	r4, Y+16	; 0x10
    1990:	5f 84       	ldd	r5, Y+15	; 0x0f
    1992:	6e 84       	ldd	r6, Y+14	; 0x0e
    1994:	7d 84       	ldd	r7, Y+13	; 0x0d
    1996:	8c 84       	ldd	r8, Y+12	; 0x0c
    1998:	9b 84       	ldd	r9, Y+11	; 0x0b
    199a:	aa 84       	ldd	r10, Y+10	; 0x0a
    199c:	b9 84       	ldd	r11, Y+9	; 0x09
    199e:	c8 84       	ldd	r12, Y+8	; 0x08
    19a0:	df 80       	ldd	r13, Y+7	; 0x07
    19a2:	ee 80       	ldd	r14, Y+6	; 0x06
    19a4:	fd 80       	ldd	r15, Y+5	; 0x05
    19a6:	0c 81       	ldd	r16, Y+4	; 0x04
    19a8:	1b 81       	ldd	r17, Y+3	; 0x03
    19aa:	aa 81       	ldd	r26, Y+2	; 0x02
    19ac:	b9 81       	ldd	r27, Y+1	; 0x01
    19ae:	ce 0f       	add	r28, r30
    19b0:	d1 1d       	adc	r29, r1
    19b2:	0f b6       	in	r0, 0x3f	; 63
    19b4:	f8 94       	cli
    19b6:	de bf       	out	0x3e, r29	; 62
    19b8:	0f be       	out	0x3f, r0	; 63
    19ba:	cd bf       	out	0x3d, r28	; 61
    19bc:	ed 01       	movw	r28, r26
    19be:	08 95       	ret

000019c0 <_exit>:
    19c0:	f8 94       	cli

000019c2 <__stop_program>:
    19c2:	ff cf       	rjmp	.-2      	; 0x19c2 <__stop_program>
