
bin/Debug/7LED3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002508  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00002508  0000257c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001704  00000000  00000000  00002684  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000086e  00000000  00000000  00003d88  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 e0       	ldi	r30, 0x08	; 8
      68:	f5 e2       	ldi	r31, 0x25	; 37
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 41 00 	call	0x82	; 0x82 <main>
      7a:	0c 94 82 12 	jmp	0x2504	; 0x2504 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#define puste PORTA = 0b11111111;
int cyfra(int _cyfra);


int main(void)
{
      82:	0f 93       	push	r16
      84:	1f 93       	push	r17
      86:	df 93       	push	r29
      88:	cf 93       	push	r28
      8a:	cd b7       	in	r28, 0x3d	; 61
      8c:	de b7       	in	r29, 0x3e	; 62
      8e:	ce 5c       	subi	r28, 0xCE	; 206
      90:	d0 40       	sbci	r29, 0x00	; 0
      92:	0f b6       	in	r0, 0x3f	; 63
      94:	f8 94       	cli
      96:	de bf       	out	0x3e, r29	; 62
      98:	0f be       	out	0x3f, r0	; 63
      9a:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF;
      9c:	87 e3       	ldi	r24, 0x37	; 55
      9e:	90 e0       	ldi	r25, 0x00	; 0
      a0:	2f ef       	ldi	r18, 0xFF	; 255
      a2:	fc 01       	movw	r30, r24
      a4:	20 83       	st	Z, r18
	DDRA = 0xFF;
      a6:	8a e3       	ldi	r24, 0x3A	; 58
      a8:	90 e0       	ldi	r25, 0x00	; 0
      aa:	2f ef       	ldi	r18, 0xFF	; 255
      ac:	fc 01       	movw	r30, r24
      ae:	20 83       	st	Z, r18

    int liczba1 = 0;
      b0:	1a 82       	std	Y+2, r1	; 0x02
      b2:	19 82       	std	Y+1, r1	; 0x01
    int liczba2 = 0;
      b4:	1c 82       	std	Y+4, r1	; 0x04
      b6:	1b 82       	std	Y+3, r1	; 0x03
    int liczba3 = 0;
      b8:	1e 82       	std	Y+6, r1	; 0x06
      ba:	1d 82       	std	Y+5, r1	; 0x05
    int liczba4 = 0;
      bc:	18 86       	std	Y+8, r1	; 0x08
      be:	1f 82       	std	Y+7, r1	; 0x07
    int short_deley = 3;
      c0:	83 e0       	ldi	r24, 0x03	; 3
      c2:	90 e0       	ldi	r25, 0x00	; 0
      c4:	9c 87       	std	Y+12, r25	; 0x0c
      c6:	8b 87       	std	Y+11, r24	; 0x0b
    int micro = 1;
      c8:	81 e0       	ldi	r24, 0x01	; 1
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	9e 87       	std	Y+14, r25	; 0x0e
      ce:	8d 87       	std	Y+13, r24	; 0x0d
    PORTA = cyfra(liczba1);
      d0:	0b e3       	ldi	r16, 0x3B	; 59
      d2:	10 e0       	ldi	r17, 0x00	; 0
      d4:	89 81       	ldd	r24, Y+1	; 0x01
      d6:	9a 81       	ldd	r25, Y+2	; 0x02
      d8:	0e 94 4c 0b 	call	0x1698	; 0x1698 <cyfra>
      dc:	f8 01       	movw	r30, r16
      de:	80 83       	st	Z, r24
     _delay_us(short_deley);
      e0:	8b 85       	ldd	r24, Y+11	; 0x0b
      e2:	9c 85       	ldd	r25, Y+12	; 0x0c
      e4:	aa 27       	eor	r26, r26
      e6:	97 fd       	sbrc	r25, 7
      e8:	a0 95       	com	r26
      ea:	ba 2f       	mov	r27, r26
      ec:	bc 01       	movw	r22, r24
      ee:	cd 01       	movw	r24, r26
      f0:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <__floatsisf>
      f4:	dc 01       	movw	r26, r24
      f6:	cb 01       	movw	r24, r22
      f8:	8f 87       	std	Y+15, r24	; 0x0f
      fa:	98 8b       	std	Y+16, r25	; 0x10
      fc:	a9 8b       	std	Y+17, r26	; 0x11
      fe:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     100:	6f 85       	ldd	r22, Y+15	; 0x0f
     102:	78 89       	ldd	r23, Y+16	; 0x10
     104:	89 89       	ldd	r24, Y+17	; 0x11
     106:	9a 89       	ldd	r25, Y+18	; 0x12
     108:	2b ea       	ldi	r18, 0xAB	; 171
     10a:	3a ea       	ldi	r19, 0xAA	; 170
     10c:	4a ea       	ldi	r20, 0xAA	; 170
     10e:	50 e4       	ldi	r21, 0x40	; 64
     110:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     114:	dc 01       	movw	r26, r24
     116:	cb 01       	movw	r24, r22
     118:	8b 8b       	std	Y+19, r24	; 0x13
     11a:	9c 8b       	std	Y+20, r25	; 0x14
     11c:	ad 8b       	std	Y+21, r26	; 0x15
     11e:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     120:	11 e0       	ldi	r17, 0x01	; 1
     122:	6b 89       	ldd	r22, Y+19	; 0x13
     124:	7c 89       	ldd	r23, Y+20	; 0x14
     126:	8d 89       	ldd	r24, Y+21	; 0x15
     128:	9e 89       	ldd	r25, Y+22	; 0x16
     12a:	20 e0       	ldi	r18, 0x00	; 0
     12c:	30 e0       	ldi	r19, 0x00	; 0
     12e:	40 e8       	ldi	r20, 0x80	; 128
     130:	5f e3       	ldi	r21, 0x3F	; 63
     132:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
     136:	88 23       	and	r24, r24
     138:	0c f0       	brlt	.+2      	; 0x13c <main+0xba>
     13a:	10 e0       	ldi	r17, 0x00	; 0
     13c:	11 23       	and	r17, r17
     13e:	19 f0       	breq	.+6      	; 0x146 <main+0xc4>
		__ticks = 1;
     140:	81 e0       	ldi	r24, 0x01	; 1
     142:	8f 8b       	std	Y+23, r24	; 0x17
     144:	a3 c0       	rjmp	.+326    	; 0x28c <main+0x20a>
	else if (__tmp > 255)
     146:	11 e0       	ldi	r17, 0x01	; 1
     148:	6b 89       	ldd	r22, Y+19	; 0x13
     14a:	7c 89       	ldd	r23, Y+20	; 0x14
     14c:	8d 89       	ldd	r24, Y+21	; 0x15
     14e:	9e 89       	ldd	r25, Y+22	; 0x16
     150:	20 e0       	ldi	r18, 0x00	; 0
     152:	30 e0       	ldi	r19, 0x00	; 0
     154:	4f e7       	ldi	r20, 0x7F	; 127
     156:	53 e4       	ldi	r21, 0x43	; 67
     158:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
     15c:	18 16       	cp	r1, r24
     15e:	0c f0       	brlt	.+2      	; 0x162 <main+0xe0>
     160:	10 e0       	ldi	r17, 0x00	; 0
     162:	11 23       	and	r17, r17
     164:	09 f4       	brne	.+2      	; 0x168 <main+0xe6>
     166:	89 c0       	rjmp	.+274    	; 0x27a <main+0x1f8>
	{
		_delay_ms(__us / 1000.0);
     168:	6f 85       	ldd	r22, Y+15	; 0x0f
     16a:	78 89       	ldd	r23, Y+16	; 0x10
     16c:	89 89       	ldd	r24, Y+17	; 0x11
     16e:	9a 89       	ldd	r25, Y+18	; 0x12
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	30 e0       	ldi	r19, 0x00	; 0
     174:	4a e7       	ldi	r20, 0x7A	; 122
     176:	54 e4       	ldi	r21, 0x44	; 68
     178:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__divsf3>
     17c:	dc 01       	movw	r26, r24
     17e:	cb 01       	movw	r24, r22
     180:	88 8f       	std	Y+24, r24	; 0x18
     182:	99 8f       	std	Y+25, r25	; 0x19
     184:	aa 8f       	std	Y+26, r26	; 0x1a
     186:	bb 8f       	std	Y+27, r27	; 0x1b
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     188:	68 8d       	ldd	r22, Y+24	; 0x18
     18a:	79 8d       	ldd	r23, Y+25	; 0x19
     18c:	8a 8d       	ldd	r24, Y+26	; 0x1a
     18e:	9b 8d       	ldd	r25, Y+27	; 0x1b
     190:	20 e0       	ldi	r18, 0x00	; 0
     192:	30 e0       	ldi	r19, 0x00	; 0
     194:	4a e7       	ldi	r20, 0x7A	; 122
     196:	55 e4       	ldi	r21, 0x45	; 69
     198:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     19c:	dc 01       	movw	r26, r24
     19e:	cb 01       	movw	r24, r22
     1a0:	8c 8f       	std	Y+28, r24	; 0x1c
     1a2:	9d 8f       	std	Y+29, r25	; 0x1d
     1a4:	ae 8f       	std	Y+30, r26	; 0x1e
     1a6:	bf 8f       	std	Y+31, r27	; 0x1f
	if (__tmp < 1.0)
     1a8:	11 e0       	ldi	r17, 0x01	; 1
     1aa:	6c 8d       	ldd	r22, Y+28	; 0x1c
     1ac:	7d 8d       	ldd	r23, Y+29	; 0x1d
     1ae:	8e 8d       	ldd	r24, Y+30	; 0x1e
     1b0:	9f 8d       	ldd	r25, Y+31	; 0x1f
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	40 e8       	ldi	r20, 0x80	; 128
     1b8:	5f e3       	ldi	r21, 0x3F	; 63
     1ba:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
     1be:	88 23       	and	r24, r24
     1c0:	0c f0       	brlt	.+2      	; 0x1c4 <main+0x142>
     1c2:	10 e0       	ldi	r17, 0x00	; 0
     1c4:	11 23       	and	r17, r17
     1c6:	29 f0       	breq	.+10     	; 0x1d2 <main+0x150>
		__ticks = 1;
     1c8:	81 e0       	ldi	r24, 0x01	; 1
     1ca:	90 e0       	ldi	r25, 0x00	; 0
     1cc:	99 a3       	std	Y+33, r25	; 0x21
     1ce:	88 a3       	std	Y+32, r24	; 0x20
     1d0:	46 c0       	rjmp	.+140    	; 0x25e <main+0x1dc>
	else if (__tmp > 65535)
     1d2:	11 e0       	ldi	r17, 0x01	; 1
     1d4:	6c 8d       	ldd	r22, Y+28	; 0x1c
     1d6:	7d 8d       	ldd	r23, Y+29	; 0x1d
     1d8:	8e 8d       	ldd	r24, Y+30	; 0x1e
     1da:	9f 8d       	ldd	r25, Y+31	; 0x1f
     1dc:	20 e0       	ldi	r18, 0x00	; 0
     1de:	3f ef       	ldi	r19, 0xFF	; 255
     1e0:	4f e7       	ldi	r20, 0x7F	; 127
     1e2:	57 e4       	ldi	r21, 0x47	; 71
     1e4:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
     1e8:	18 16       	cp	r1, r24
     1ea:	0c f0       	brlt	.+2      	; 0x1ee <main+0x16c>
     1ec:	10 e0       	ldi	r17, 0x00	; 0
     1ee:	11 23       	and	r17, r17
     1f0:	61 f1       	breq	.+88     	; 0x24a <main+0x1c8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1f2:	68 8d       	ldd	r22, Y+24	; 0x18
     1f4:	79 8d       	ldd	r23, Y+25	; 0x19
     1f6:	8a 8d       	ldd	r24, Y+26	; 0x1a
     1f8:	9b 8d       	ldd	r25, Y+27	; 0x1b
     1fa:	20 e0       	ldi	r18, 0x00	; 0
     1fc:	30 e0       	ldi	r19, 0x00	; 0
     1fe:	40 e2       	ldi	r20, 0x20	; 32
     200:	51 e4       	ldi	r21, 0x41	; 65
     202:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     206:	dc 01       	movw	r26, r24
     208:	cb 01       	movw	r24, r22
     20a:	bc 01       	movw	r22, r24
     20c:	cd 01       	movw	r24, r26
     20e:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     212:	dc 01       	movw	r26, r24
     214:	cb 01       	movw	r24, r22
     216:	99 a3       	std	Y+33, r25	; 0x21
     218:	88 a3       	std	Y+32, r24	; 0x20
     21a:	12 c0       	rjmp	.+36     	; 0x240 <main+0x1be>
     21c:	80 e9       	ldi	r24, 0x90	; 144
     21e:	91 e0       	ldi	r25, 0x01	; 1
     220:	9b a3       	std	Y+35, r25	; 0x23
     222:	8a a3       	std	Y+34, r24	; 0x22
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     224:	8a a1       	ldd	r24, Y+34	; 0x22
     226:	9b a1       	ldd	r25, Y+35	; 0x23
     228:	8c 01       	movw	r16, r24
     22a:	c8 01       	movw	r24, r16
     22c:	01 97       	sbiw	r24, 0x01	; 1
     22e:	f1 f7       	brne	.-4      	; 0x22c <main+0x1aa>
     230:	8c 01       	movw	r16, r24
     232:	1b a3       	std	Y+35, r17	; 0x23
     234:	0a a3       	std	Y+34, r16	; 0x22
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     236:	88 a1       	ldd	r24, Y+32	; 0x20
     238:	99 a1       	ldd	r25, Y+33	; 0x21
     23a:	01 97       	sbiw	r24, 0x01	; 1
     23c:	99 a3       	std	Y+33, r25	; 0x21
     23e:	88 a3       	std	Y+32, r24	; 0x20
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     240:	88 a1       	ldd	r24, Y+32	; 0x20
     242:	99 a1       	ldd	r25, Y+33	; 0x21
     244:	00 97       	sbiw	r24, 0x00	; 0
     246:	51 f7       	brne	.-44     	; 0x21c <main+0x19a>
     248:	28 c0       	rjmp	.+80     	; 0x29a <main+0x218>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     24a:	6c 8d       	ldd	r22, Y+28	; 0x1c
     24c:	7d 8d       	ldd	r23, Y+29	; 0x1d
     24e:	8e 8d       	ldd	r24, Y+30	; 0x1e
     250:	9f 8d       	ldd	r25, Y+31	; 0x1f
     252:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     256:	dc 01       	movw	r26, r24
     258:	cb 01       	movw	r24, r22
     25a:	99 a3       	std	Y+33, r25	; 0x21
     25c:	88 a3       	std	Y+32, r24	; 0x20
     25e:	88 a1       	ldd	r24, Y+32	; 0x20
     260:	99 a1       	ldd	r25, Y+33	; 0x21
     262:	9d a3       	std	Y+37, r25	; 0x25
     264:	8c a3       	std	Y+36, r24	; 0x24
     266:	8c a1       	ldd	r24, Y+36	; 0x24
     268:	9d a1       	ldd	r25, Y+37	; 0x25
     26a:	8c 01       	movw	r16, r24
     26c:	f8 01       	movw	r30, r16
     26e:	31 97       	sbiw	r30, 0x01	; 1
     270:	f1 f7       	brne	.-4      	; 0x26e <main+0x1ec>
     272:	8f 01       	movw	r16, r30
     274:	1d a3       	std	Y+37, r17	; 0x25
     276:	0c a3       	std	Y+36, r16	; 0x24
     278:	10 c0       	rjmp	.+32     	; 0x29a <main+0x218>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     27a:	6b 89       	ldd	r22, Y+19	; 0x13
     27c:	7c 89       	ldd	r23, Y+20	; 0x14
     27e:	8d 89       	ldd	r24, Y+21	; 0x15
     280:	9e 89       	ldd	r25, Y+22	; 0x16
     282:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     286:	dc 01       	movw	r26, r24
     288:	cb 01       	movw	r24, r22
     28a:	8f 8b       	std	Y+23, r24	; 0x17
     28c:	8f 89       	ldd	r24, Y+23	; 0x17
     28e:	8e a3       	std	Y+38, r24	; 0x26
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     290:	8e a1       	ldd	r24, Y+38	; 0x26
     292:	18 2f       	mov	r17, r24
     294:	1a 95       	dec	r17
     296:	f1 f7       	brne	.-4      	; 0x294 <main+0x212>
     298:	1e a3       	std	Y+38, r17	; 0x26
1;

    int loop_counter = 0;
     29a:	1a 86       	std	Y+10, r1	; 0x0a
     29c:	19 86       	std	Y+9, r1	; 0x09
     29e:	01 c0       	rjmp	.+2      	; 0x2a2 <main+0x220>

    }

}

    };
     2a0:	00 00       	nop
    while(1)
    {



    loop_counter++;
     2a2:	89 85       	ldd	r24, Y+9	; 0x09
     2a4:	9a 85       	ldd	r25, Y+10	; 0x0a
     2a6:	01 96       	adiw	r24, 0x01	; 1
     2a8:	9a 87       	std	Y+10, r25	; 0x0a
     2aa:	89 87       	std	Y+9, r24	; 0x09

    if (loop_counter == 10)
     2ac:	89 85       	ldd	r24, Y+9	; 0x09
     2ae:	9a 85       	ldd	r25, Y+10	; 0x0a
     2b0:	8a 30       	cpi	r24, 0x0A	; 10
     2b2:	91 05       	cpc	r25, r1
     2b4:	39 f4       	brne	.+14     	; 0x2c4 <main+0x242>
    {

        liczba1++;
     2b6:	89 81       	ldd	r24, Y+1	; 0x01
     2b8:	9a 81       	ldd	r25, Y+2	; 0x02
     2ba:	01 96       	adiw	r24, 0x01	; 1
     2bc:	9a 83       	std	Y+2, r25	; 0x02
     2be:	89 83       	std	Y+1, r24	; 0x01
        loop_counter = 0;
     2c0:	1a 86       	std	Y+10, r1	; 0x0a
     2c2:	19 86       	std	Y+9, r1	; 0x09

    }

    wys1;
     2c4:	88 e3       	ldi	r24, 0x38	; 56
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	2e ef       	ldi	r18, 0xFE	; 254
     2ca:	fc 01       	movw	r30, r24
     2cc:	20 83       	st	Z, r18
    PORTA = cyfra(liczba1);
     2ce:	0b e3       	ldi	r16, 0x3B	; 59
     2d0:	10 e0       	ldi	r17, 0x00	; 0
     2d2:	89 81       	ldd	r24, Y+1	; 0x01
     2d4:	9a 81       	ldd	r25, Y+2	; 0x02
     2d6:	0e 94 4c 0b 	call	0x1698	; 0x1698 <cyfra>
     2da:	f8 01       	movw	r30, r16
     2dc:	80 83       	st	Z, r24
    _delay_us(short_deley);
     2de:	8b 85       	ldd	r24, Y+11	; 0x0b
     2e0:	9c 85       	ldd	r25, Y+12	; 0x0c
     2e2:	aa 27       	eor	r26, r26
     2e4:	97 fd       	sbrc	r25, 7
     2e6:	a0 95       	com	r26
     2e8:	ba 2f       	mov	r27, r26
     2ea:	bc 01       	movw	r22, r24
     2ec:	cd 01       	movw	r24, r26
     2ee:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <__floatsisf>
     2f2:	dc 01       	movw	r26, r24
     2f4:	cb 01       	movw	r24, r22
     2f6:	8f a3       	std	Y+39, r24	; 0x27
     2f8:	98 a7       	std	Y+40, r25	; 0x28
     2fa:	a9 a7       	std	Y+41, r26	; 0x29
     2fc:	ba a7       	std	Y+42, r27	; 0x2a
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     2fe:	6f a1       	ldd	r22, Y+39	; 0x27
     300:	78 a5       	ldd	r23, Y+40	; 0x28
     302:	89 a5       	ldd	r24, Y+41	; 0x29
     304:	9a a5       	ldd	r25, Y+42	; 0x2a
     306:	2b ea       	ldi	r18, 0xAB	; 171
     308:	3a ea       	ldi	r19, 0xAA	; 170
     30a:	4a ea       	ldi	r20, 0xAA	; 170
     30c:	50 e4       	ldi	r21, 0x40	; 64
     30e:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     312:	dc 01       	movw	r26, r24
     314:	cb 01       	movw	r24, r22
     316:	8b a7       	std	Y+43, r24	; 0x2b
     318:	9c a7       	std	Y+44, r25	; 0x2c
     31a:	ad a7       	std	Y+45, r26	; 0x2d
     31c:	be a7       	std	Y+46, r27	; 0x2e
	if (__tmp < 1.0)
     31e:	11 e0       	ldi	r17, 0x01	; 1
     320:	6b a5       	ldd	r22, Y+43	; 0x2b
     322:	7c a5       	ldd	r23, Y+44	; 0x2c
     324:	8d a5       	ldd	r24, Y+45	; 0x2d
     326:	9e a5       	ldd	r25, Y+46	; 0x2e
     328:	20 e0       	ldi	r18, 0x00	; 0
     32a:	30 e0       	ldi	r19, 0x00	; 0
     32c:	40 e8       	ldi	r20, 0x80	; 128
     32e:	5f e3       	ldi	r21, 0x3F	; 63
     330:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
     334:	88 23       	and	r24, r24
     336:	0c f0       	brlt	.+2      	; 0x33a <main+0x2b8>
     338:	10 e0       	ldi	r17, 0x00	; 0
     33a:	11 23       	and	r17, r17
     33c:	19 f0       	breq	.+6      	; 0x344 <main+0x2c2>
		__ticks = 1;
     33e:	81 e0       	ldi	r24, 0x01	; 1
     340:	8f a7       	std	Y+47, r24	; 0x2f
     342:	a3 c0       	rjmp	.+326    	; 0x48a <main+0x408>
	else if (__tmp > 255)
     344:	11 e0       	ldi	r17, 0x01	; 1
     346:	6b a5       	ldd	r22, Y+43	; 0x2b
     348:	7c a5       	ldd	r23, Y+44	; 0x2c
     34a:	8d a5       	ldd	r24, Y+45	; 0x2d
     34c:	9e a5       	ldd	r25, Y+46	; 0x2e
     34e:	20 e0       	ldi	r18, 0x00	; 0
     350:	30 e0       	ldi	r19, 0x00	; 0
     352:	4f e7       	ldi	r20, 0x7F	; 127
     354:	53 e4       	ldi	r21, 0x43	; 67
     356:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
     35a:	18 16       	cp	r1, r24
     35c:	0c f0       	brlt	.+2      	; 0x360 <main+0x2de>
     35e:	10 e0       	ldi	r17, 0x00	; 0
     360:	11 23       	and	r17, r17
     362:	09 f4       	brne	.+2      	; 0x366 <main+0x2e4>
     364:	89 c0       	rjmp	.+274    	; 0x478 <main+0x3f6>
	{
		_delay_ms(__us / 1000.0);
     366:	6f a1       	ldd	r22, Y+39	; 0x27
     368:	78 a5       	ldd	r23, Y+40	; 0x28
     36a:	89 a5       	ldd	r24, Y+41	; 0x29
     36c:	9a a5       	ldd	r25, Y+42	; 0x2a
     36e:	20 e0       	ldi	r18, 0x00	; 0
     370:	30 e0       	ldi	r19, 0x00	; 0
     372:	4a e7       	ldi	r20, 0x7A	; 122
     374:	54 e4       	ldi	r21, 0x44	; 68
     376:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__divsf3>
     37a:	dc 01       	movw	r26, r24
     37c:	cb 01       	movw	r24, r22
     37e:	88 ab       	std	Y+48, r24	; 0x30
     380:	99 ab       	std	Y+49, r25	; 0x31
     382:	aa ab       	std	Y+50, r26	; 0x32
     384:	bb ab       	std	Y+51, r27	; 0x33
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     386:	68 a9       	ldd	r22, Y+48	; 0x30
     388:	79 a9       	ldd	r23, Y+49	; 0x31
     38a:	8a a9       	ldd	r24, Y+50	; 0x32
     38c:	9b a9       	ldd	r25, Y+51	; 0x33
     38e:	20 e0       	ldi	r18, 0x00	; 0
     390:	30 e0       	ldi	r19, 0x00	; 0
     392:	4a e7       	ldi	r20, 0x7A	; 122
     394:	55 e4       	ldi	r21, 0x45	; 69
     396:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     39a:	dc 01       	movw	r26, r24
     39c:	cb 01       	movw	r24, r22
     39e:	8c ab       	std	Y+52, r24	; 0x34
     3a0:	9d ab       	std	Y+53, r25	; 0x35
     3a2:	ae ab       	std	Y+54, r26	; 0x36
     3a4:	bf ab       	std	Y+55, r27	; 0x37
	if (__tmp < 1.0)
     3a6:	11 e0       	ldi	r17, 0x01	; 1
     3a8:	6c a9       	ldd	r22, Y+52	; 0x34
     3aa:	7d a9       	ldd	r23, Y+53	; 0x35
     3ac:	8e a9       	ldd	r24, Y+54	; 0x36
     3ae:	9f a9       	ldd	r25, Y+55	; 0x37
     3b0:	20 e0       	ldi	r18, 0x00	; 0
     3b2:	30 e0       	ldi	r19, 0x00	; 0
     3b4:	40 e8       	ldi	r20, 0x80	; 128
     3b6:	5f e3       	ldi	r21, 0x3F	; 63
     3b8:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
     3bc:	88 23       	and	r24, r24
     3be:	0c f0       	brlt	.+2      	; 0x3c2 <main+0x340>
     3c0:	10 e0       	ldi	r17, 0x00	; 0
     3c2:	11 23       	and	r17, r17
     3c4:	29 f0       	breq	.+10     	; 0x3d0 <main+0x34e>
		__ticks = 1;
     3c6:	81 e0       	ldi	r24, 0x01	; 1
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	99 af       	std	Y+57, r25	; 0x39
     3cc:	88 af       	std	Y+56, r24	; 0x38
     3ce:	46 c0       	rjmp	.+140    	; 0x45c <main+0x3da>
	else if (__tmp > 65535)
     3d0:	11 e0       	ldi	r17, 0x01	; 1
     3d2:	6c a9       	ldd	r22, Y+52	; 0x34
     3d4:	7d a9       	ldd	r23, Y+53	; 0x35
     3d6:	8e a9       	ldd	r24, Y+54	; 0x36
     3d8:	9f a9       	ldd	r25, Y+55	; 0x37
     3da:	20 e0       	ldi	r18, 0x00	; 0
     3dc:	3f ef       	ldi	r19, 0xFF	; 255
     3de:	4f e7       	ldi	r20, 0x7F	; 127
     3e0:	57 e4       	ldi	r21, 0x47	; 71
     3e2:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
     3e6:	18 16       	cp	r1, r24
     3e8:	0c f0       	brlt	.+2      	; 0x3ec <main+0x36a>
     3ea:	10 e0       	ldi	r17, 0x00	; 0
     3ec:	11 23       	and	r17, r17
     3ee:	61 f1       	breq	.+88     	; 0x448 <main+0x3c6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3f0:	68 a9       	ldd	r22, Y+48	; 0x30
     3f2:	79 a9       	ldd	r23, Y+49	; 0x31
     3f4:	8a a9       	ldd	r24, Y+50	; 0x32
     3f6:	9b a9       	ldd	r25, Y+51	; 0x33
     3f8:	20 e0       	ldi	r18, 0x00	; 0
     3fa:	30 e0       	ldi	r19, 0x00	; 0
     3fc:	40 e2       	ldi	r20, 0x20	; 32
     3fe:	51 e4       	ldi	r21, 0x41	; 65
     400:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     404:	dc 01       	movw	r26, r24
     406:	cb 01       	movw	r24, r22
     408:	bc 01       	movw	r22, r24
     40a:	cd 01       	movw	r24, r26
     40c:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     410:	dc 01       	movw	r26, r24
     412:	cb 01       	movw	r24, r22
     414:	99 af       	std	Y+57, r25	; 0x39
     416:	88 af       	std	Y+56, r24	; 0x38
     418:	12 c0       	rjmp	.+36     	; 0x43e <main+0x3bc>
     41a:	80 e9       	ldi	r24, 0x90	; 144
     41c:	91 e0       	ldi	r25, 0x01	; 1
     41e:	9b af       	std	Y+59, r25	; 0x3b
     420:	8a af       	std	Y+58, r24	; 0x3a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     422:	8a ad       	ldd	r24, Y+58	; 0x3a
     424:	9b ad       	ldd	r25, Y+59	; 0x3b
     426:	8c 01       	movw	r16, r24
     428:	c8 01       	movw	r24, r16
     42a:	01 97       	sbiw	r24, 0x01	; 1
     42c:	f1 f7       	brne	.-4      	; 0x42a <main+0x3a8>
     42e:	8c 01       	movw	r16, r24
     430:	1b af       	std	Y+59, r17	; 0x3b
     432:	0a af       	std	Y+58, r16	; 0x3a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     434:	88 ad       	ldd	r24, Y+56	; 0x38
     436:	99 ad       	ldd	r25, Y+57	; 0x39
     438:	01 97       	sbiw	r24, 0x01	; 1
     43a:	99 af       	std	Y+57, r25	; 0x39
     43c:	88 af       	std	Y+56, r24	; 0x38
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     43e:	88 ad       	ldd	r24, Y+56	; 0x38
     440:	99 ad       	ldd	r25, Y+57	; 0x39
     442:	00 97       	sbiw	r24, 0x00	; 0
     444:	51 f7       	brne	.-44     	; 0x41a <main+0x398>
     446:	28 c0       	rjmp	.+80     	; 0x498 <main+0x416>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     448:	6c a9       	ldd	r22, Y+52	; 0x34
     44a:	7d a9       	ldd	r23, Y+53	; 0x35
     44c:	8e a9       	ldd	r24, Y+54	; 0x36
     44e:	9f a9       	ldd	r25, Y+55	; 0x37
     450:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     454:	dc 01       	movw	r26, r24
     456:	cb 01       	movw	r24, r22
     458:	99 af       	std	Y+57, r25	; 0x39
     45a:	88 af       	std	Y+56, r24	; 0x38
     45c:	88 ad       	ldd	r24, Y+56	; 0x38
     45e:	99 ad       	ldd	r25, Y+57	; 0x39
     460:	9d af       	std	Y+61, r25	; 0x3d
     462:	8c af       	std	Y+60, r24	; 0x3c
     464:	8c ad       	ldd	r24, Y+60	; 0x3c
     466:	9d ad       	ldd	r25, Y+61	; 0x3d
     468:	8c 01       	movw	r16, r24
     46a:	f8 01       	movw	r30, r16
     46c:	31 97       	sbiw	r30, 0x01	; 1
     46e:	f1 f7       	brne	.-4      	; 0x46c <main+0x3ea>
     470:	8f 01       	movw	r16, r30
     472:	1d af       	std	Y+61, r17	; 0x3d
     474:	0c af       	std	Y+60, r16	; 0x3c
     476:	10 c0       	rjmp	.+32     	; 0x498 <main+0x416>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     478:	6b a5       	ldd	r22, Y+43	; 0x2b
     47a:	7c a5       	ldd	r23, Y+44	; 0x2c
     47c:	8d a5       	ldd	r24, Y+45	; 0x2d
     47e:	9e a5       	ldd	r25, Y+46	; 0x2e
     480:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     484:	dc 01       	movw	r26, r24
     486:	cb 01       	movw	r24, r22
     488:	8f a7       	std	Y+47, r24	; 0x2f
     48a:	8f a5       	ldd	r24, Y+47	; 0x2f
     48c:	8e af       	std	Y+62, r24	; 0x3e
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     48e:	8e ad       	ldd	r24, Y+62	; 0x3e
     490:	18 2f       	mov	r17, r24
     492:	1a 95       	dec	r17
     494:	f1 f7       	brne	.-4      	; 0x492 <main+0x410>
     496:	1e af       	std	Y+62, r17	; 0x3e



    if ((liczba2 !=0) || (liczba3 != 0) || (liczba4 != 0))
     498:	8b 81       	ldd	r24, Y+3	; 0x03
     49a:	9c 81       	ldd	r25, Y+4	; 0x04
     49c:	00 97       	sbiw	r24, 0x00	; 0
     49e:	49 f4       	brne	.+18     	; 0x4b2 <main+0x430>
     4a0:	8d 81       	ldd	r24, Y+5	; 0x05
     4a2:	9e 81       	ldd	r25, Y+6	; 0x06
     4a4:	00 97       	sbiw	r24, 0x00	; 0
     4a6:	29 f4       	brne	.+10     	; 0x4b2 <main+0x430>
     4a8:	8f 81       	ldd	r24, Y+7	; 0x07
     4aa:	98 85       	ldd	r25, Y+8	; 0x08
     4ac:	00 97       	sbiw	r24, 0x00	; 0
     4ae:	09 f4       	brne	.+2      	; 0x4b2 <main+0x430>
     4b0:	79 c1       	rjmp	.+754    	; 0x7a4 <main+0x722>
    {
        wys2;
     4b2:	88 e3       	ldi	r24, 0x38	; 56
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	2d ef       	ldi	r18, 0xFD	; 253
     4b8:	fc 01       	movw	r30, r24
     4ba:	20 83       	st	Z, r18
        puste
     4bc:	8b e3       	ldi	r24, 0x3B	; 59
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	2f ef       	ldi	r18, 0xFF	; 255
     4c2:	fc 01       	movw	r30, r24
     4c4:	20 83       	st	Z, r18
        _delay_us(micro);
     4c6:	8d 85       	ldd	r24, Y+13	; 0x0d
     4c8:	9e 85       	ldd	r25, Y+14	; 0x0e
     4ca:	aa 27       	eor	r26, r26
     4cc:	97 fd       	sbrc	r25, 7
     4ce:	a0 95       	com	r26
     4d0:	ba 2f       	mov	r27, r26
     4d2:	bc 01       	movw	r22, r24
     4d4:	cd 01       	movw	r24, r26
     4d6:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <__floatsisf>
     4da:	dc 01       	movw	r26, r24
     4dc:	cb 01       	movw	r24, r22
     4de:	9e 01       	movw	r18, r28
     4e0:	21 5c       	subi	r18, 0xC1	; 193
     4e2:	3f 4f       	sbci	r19, 0xFF	; 255
     4e4:	f9 01       	movw	r30, r18
     4e6:	80 83       	st	Z, r24
     4e8:	91 83       	std	Z+1, r25	; 0x01
     4ea:	a2 83       	std	Z+2, r26	; 0x02
     4ec:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     4ee:	8e 01       	movw	r16, r28
     4f0:	0d 5b       	subi	r16, 0xBD	; 189
     4f2:	1f 4f       	sbci	r17, 0xFF	; 255
     4f4:	ce 01       	movw	r24, r28
     4f6:	cf 96       	adiw	r24, 0x3f	; 63
     4f8:	fc 01       	movw	r30, r24
     4fa:	60 81       	ld	r22, Z
     4fc:	71 81       	ldd	r23, Z+1	; 0x01
     4fe:	82 81       	ldd	r24, Z+2	; 0x02
     500:	93 81       	ldd	r25, Z+3	; 0x03
     502:	2b ea       	ldi	r18, 0xAB	; 171
     504:	3a ea       	ldi	r19, 0xAA	; 170
     506:	4a ea       	ldi	r20, 0xAA	; 170
     508:	50 e4       	ldi	r21, 0x40	; 64
     50a:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     50e:	dc 01       	movw	r26, r24
     510:	cb 01       	movw	r24, r22
     512:	f8 01       	movw	r30, r16
     514:	80 83       	st	Z, r24
     516:	91 83       	std	Z+1, r25	; 0x01
     518:	a2 83       	std	Z+2, r26	; 0x02
     51a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     51c:	ce 01       	movw	r24, r28
     51e:	8d 5b       	subi	r24, 0xBD	; 189
     520:	9f 4f       	sbci	r25, 0xFF	; 255
     522:	11 e0       	ldi	r17, 0x01	; 1
     524:	fc 01       	movw	r30, r24
     526:	60 81       	ld	r22, Z
     528:	71 81       	ldd	r23, Z+1	; 0x01
     52a:	82 81       	ldd	r24, Z+2	; 0x02
     52c:	93 81       	ldd	r25, Z+3	; 0x03
     52e:	20 e0       	ldi	r18, 0x00	; 0
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	40 e8       	ldi	r20, 0x80	; 128
     534:	5f e3       	ldi	r21, 0x3F	; 63
     536:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
     53a:	88 23       	and	r24, r24
     53c:	0c f0       	brlt	.+2      	; 0x540 <main+0x4be>
     53e:	10 e0       	ldi	r17, 0x00	; 0
     540:	11 23       	and	r17, r17
     542:	39 f0       	breq	.+14     	; 0x552 <main+0x4d0>
		__ticks = 1;
     544:	ce 01       	movw	r24, r28
     546:	89 5b       	subi	r24, 0xB9	; 185
     548:	9f 4f       	sbci	r25, 0xFF	; 255
     54a:	21 e0       	ldi	r18, 0x01	; 1
     54c:	fc 01       	movw	r30, r24
     54e:	20 83       	st	Z, r18
     550:	04 c1       	rjmp	.+520    	; 0x75a <main+0x6d8>
	else if (__tmp > 255)
     552:	ce 01       	movw	r24, r28
     554:	8d 5b       	subi	r24, 0xBD	; 189
     556:	9f 4f       	sbci	r25, 0xFF	; 255
     558:	11 e0       	ldi	r17, 0x01	; 1
     55a:	fc 01       	movw	r30, r24
     55c:	60 81       	ld	r22, Z
     55e:	71 81       	ldd	r23, Z+1	; 0x01
     560:	82 81       	ldd	r24, Z+2	; 0x02
     562:	93 81       	ldd	r25, Z+3	; 0x03
     564:	20 e0       	ldi	r18, 0x00	; 0
     566:	30 e0       	ldi	r19, 0x00	; 0
     568:	4f e7       	ldi	r20, 0x7F	; 127
     56a:	53 e4       	ldi	r21, 0x43	; 67
     56c:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
     570:	18 16       	cp	r1, r24
     572:	0c f0       	brlt	.+2      	; 0x576 <main+0x4f4>
     574:	10 e0       	ldi	r17, 0x00	; 0
     576:	11 23       	and	r17, r17
     578:	09 f4       	brne	.+2      	; 0x57c <main+0x4fa>
     57a:	de c0       	rjmp	.+444    	; 0x738 <main+0x6b6>
	{
		_delay_ms(__us / 1000.0);
     57c:	ce 01       	movw	r24, r28
     57e:	cf 96       	adiw	r24, 0x3f	; 63
     580:	fc 01       	movw	r30, r24
     582:	60 81       	ld	r22, Z
     584:	71 81       	ldd	r23, Z+1	; 0x01
     586:	82 81       	ldd	r24, Z+2	; 0x02
     588:	93 81       	ldd	r25, Z+3	; 0x03
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	30 e0       	ldi	r19, 0x00	; 0
     58e:	4a e7       	ldi	r20, 0x7A	; 122
     590:	54 e4       	ldi	r21, 0x44	; 68
     592:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__divsf3>
     596:	dc 01       	movw	r26, r24
     598:	cb 01       	movw	r24, r22
     59a:	9e 01       	movw	r18, r28
     59c:	28 5b       	subi	r18, 0xB8	; 184
     59e:	3f 4f       	sbci	r19, 0xFF	; 255
     5a0:	f9 01       	movw	r30, r18
     5a2:	80 83       	st	Z, r24
     5a4:	91 83       	std	Z+1, r25	; 0x01
     5a6:	a2 83       	std	Z+2, r26	; 0x02
     5a8:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     5aa:	8e 01       	movw	r16, r28
     5ac:	04 5b       	subi	r16, 0xB4	; 180
     5ae:	1f 4f       	sbci	r17, 0xFF	; 255
     5b0:	ce 01       	movw	r24, r28
     5b2:	88 5b       	subi	r24, 0xB8	; 184
     5b4:	9f 4f       	sbci	r25, 0xFF	; 255
     5b6:	fc 01       	movw	r30, r24
     5b8:	60 81       	ld	r22, Z
     5ba:	71 81       	ldd	r23, Z+1	; 0x01
     5bc:	82 81       	ldd	r24, Z+2	; 0x02
     5be:	93 81       	ldd	r25, Z+3	; 0x03
     5c0:	20 e0       	ldi	r18, 0x00	; 0
     5c2:	30 e0       	ldi	r19, 0x00	; 0
     5c4:	4a e7       	ldi	r20, 0x7A	; 122
     5c6:	55 e4       	ldi	r21, 0x45	; 69
     5c8:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     5cc:	dc 01       	movw	r26, r24
     5ce:	cb 01       	movw	r24, r22
     5d0:	f8 01       	movw	r30, r16
     5d2:	80 83       	st	Z, r24
     5d4:	91 83       	std	Z+1, r25	; 0x01
     5d6:	a2 83       	std	Z+2, r26	; 0x02
     5d8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     5da:	ce 01       	movw	r24, r28
     5dc:	84 5b       	subi	r24, 0xB4	; 180
     5de:	9f 4f       	sbci	r25, 0xFF	; 255
     5e0:	11 e0       	ldi	r17, 0x01	; 1
     5e2:	fc 01       	movw	r30, r24
     5e4:	60 81       	ld	r22, Z
     5e6:	71 81       	ldd	r23, Z+1	; 0x01
     5e8:	82 81       	ldd	r24, Z+2	; 0x02
     5ea:	93 81       	ldd	r25, Z+3	; 0x03
     5ec:	20 e0       	ldi	r18, 0x00	; 0
     5ee:	30 e0       	ldi	r19, 0x00	; 0
     5f0:	40 e8       	ldi	r20, 0x80	; 128
     5f2:	5f e3       	ldi	r21, 0x3F	; 63
     5f4:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
     5f8:	88 23       	and	r24, r24
     5fa:	0c f0       	brlt	.+2      	; 0x5fe <main+0x57c>
     5fc:	10 e0       	ldi	r17, 0x00	; 0
     5fe:	11 23       	and	r17, r17
     600:	49 f0       	breq	.+18     	; 0x614 <main+0x592>
		__ticks = 1;
     602:	ce 01       	movw	r24, r28
     604:	80 5b       	subi	r24, 0xB0	; 176
     606:	9f 4f       	sbci	r25, 0xFF	; 255
     608:	21 e0       	ldi	r18, 0x01	; 1
     60a:	30 e0       	ldi	r19, 0x00	; 0
     60c:	fc 01       	movw	r30, r24
     60e:	31 83       	std	Z+1, r19	; 0x01
     610:	20 83       	st	Z, r18
     612:	74 c0       	rjmp	.+232    	; 0x6fc <main+0x67a>
	else if (__tmp > 65535)
     614:	ce 01       	movw	r24, r28
     616:	84 5b       	subi	r24, 0xB4	; 180
     618:	9f 4f       	sbci	r25, 0xFF	; 255
     61a:	11 e0       	ldi	r17, 0x01	; 1
     61c:	fc 01       	movw	r30, r24
     61e:	60 81       	ld	r22, Z
     620:	71 81       	ldd	r23, Z+1	; 0x01
     622:	82 81       	ldd	r24, Z+2	; 0x02
     624:	93 81       	ldd	r25, Z+3	; 0x03
     626:	20 e0       	ldi	r18, 0x00	; 0
     628:	3f ef       	ldi	r19, 0xFF	; 255
     62a:	4f e7       	ldi	r20, 0x7F	; 127
     62c:	57 e4       	ldi	r21, 0x47	; 71
     62e:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
     632:	18 16       	cp	r1, r24
     634:	0c f0       	brlt	.+2      	; 0x638 <main+0x5b6>
     636:	10 e0       	ldi	r17, 0x00	; 0
     638:	11 23       	and	r17, r17
     63a:	09 f4       	brne	.+2      	; 0x63e <main+0x5bc>
     63c:	4d c0       	rjmp	.+154    	; 0x6d8 <main+0x656>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     63e:	ce 01       	movw	r24, r28
     640:	88 5b       	subi	r24, 0xB8	; 184
     642:	9f 4f       	sbci	r25, 0xFF	; 255
     644:	fc 01       	movw	r30, r24
     646:	60 81       	ld	r22, Z
     648:	71 81       	ldd	r23, Z+1	; 0x01
     64a:	82 81       	ldd	r24, Z+2	; 0x02
     64c:	93 81       	ldd	r25, Z+3	; 0x03
     64e:	20 e0       	ldi	r18, 0x00	; 0
     650:	30 e0       	ldi	r19, 0x00	; 0
     652:	40 e2       	ldi	r20, 0x20	; 32
     654:	51 e4       	ldi	r21, 0x41	; 65
     656:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     65a:	dc 01       	movw	r26, r24
     65c:	cb 01       	movw	r24, r22
     65e:	8e 01       	movw	r16, r28
     660:	00 5b       	subi	r16, 0xB0	; 176
     662:	1f 4f       	sbci	r17, 0xFF	; 255
     664:	bc 01       	movw	r22, r24
     666:	cd 01       	movw	r24, r26
     668:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     66c:	dc 01       	movw	r26, r24
     66e:	cb 01       	movw	r24, r22
     670:	f8 01       	movw	r30, r16
     672:	91 83       	std	Z+1, r25	; 0x01
     674:	80 83       	st	Z, r24
     676:	27 c0       	rjmp	.+78     	; 0x6c6 <main+0x644>
     678:	ce 01       	movw	r24, r28
     67a:	8e 5a       	subi	r24, 0xAE	; 174
     67c:	9f 4f       	sbci	r25, 0xFF	; 255
     67e:	20 e9       	ldi	r18, 0x90	; 144
     680:	31 e0       	ldi	r19, 0x01	; 1
     682:	fc 01       	movw	r30, r24
     684:	31 83       	std	Z+1, r19	; 0x01
     686:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     688:	ce 01       	movw	r24, r28
     68a:	8e 5a       	subi	r24, 0xAE	; 174
     68c:	9f 4f       	sbci	r25, 0xFF	; 255
     68e:	fc 01       	movw	r30, r24
     690:	80 81       	ld	r24, Z
     692:	91 81       	ldd	r25, Z+1	; 0x01
     694:	8c 01       	movw	r16, r24
     696:	c8 01       	movw	r24, r16
     698:	01 97       	sbiw	r24, 0x01	; 1
     69a:	f1 f7       	brne	.-4      	; 0x698 <main+0x616>
     69c:	8c 01       	movw	r16, r24
     69e:	ce 01       	movw	r24, r28
     6a0:	8e 5a       	subi	r24, 0xAE	; 174
     6a2:	9f 4f       	sbci	r25, 0xFF	; 255
     6a4:	fc 01       	movw	r30, r24
     6a6:	11 83       	std	Z+1, r17	; 0x01
     6a8:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6aa:	ce 01       	movw	r24, r28
     6ac:	80 5b       	subi	r24, 0xB0	; 176
     6ae:	9f 4f       	sbci	r25, 0xFF	; 255
     6b0:	9e 01       	movw	r18, r28
     6b2:	20 5b       	subi	r18, 0xB0	; 176
     6b4:	3f 4f       	sbci	r19, 0xFF	; 255
     6b6:	f9 01       	movw	r30, r18
     6b8:	20 81       	ld	r18, Z
     6ba:	31 81       	ldd	r19, Z+1	; 0x01
     6bc:	21 50       	subi	r18, 0x01	; 1
     6be:	30 40       	sbci	r19, 0x00	; 0
     6c0:	fc 01       	movw	r30, r24
     6c2:	31 83       	std	Z+1, r19	; 0x01
     6c4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6c6:	ce 01       	movw	r24, r28
     6c8:	80 5b       	subi	r24, 0xB0	; 176
     6ca:	9f 4f       	sbci	r25, 0xFF	; 255
     6cc:	fc 01       	movw	r30, r24
     6ce:	80 81       	ld	r24, Z
     6d0:	91 81       	ldd	r25, Z+1	; 0x01
     6d2:	00 97       	sbiw	r24, 0x00	; 0
     6d4:	89 f6       	brne	.-94     	; 0x678 <main+0x5f6>
     6d6:	58 c0       	rjmp	.+176    	; 0x788 <main+0x706>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6d8:	8e 01       	movw	r16, r28
     6da:	00 5b       	subi	r16, 0xB0	; 176
     6dc:	1f 4f       	sbci	r17, 0xFF	; 255
     6de:	ce 01       	movw	r24, r28
     6e0:	84 5b       	subi	r24, 0xB4	; 180
     6e2:	9f 4f       	sbci	r25, 0xFF	; 255
     6e4:	fc 01       	movw	r30, r24
     6e6:	60 81       	ld	r22, Z
     6e8:	71 81       	ldd	r23, Z+1	; 0x01
     6ea:	82 81       	ldd	r24, Z+2	; 0x02
     6ec:	93 81       	ldd	r25, Z+3	; 0x03
     6ee:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     6f2:	dc 01       	movw	r26, r24
     6f4:	cb 01       	movw	r24, r22
     6f6:	f8 01       	movw	r30, r16
     6f8:	91 83       	std	Z+1, r25	; 0x01
     6fa:	80 83       	st	Z, r24
     6fc:	ce 01       	movw	r24, r28
     6fe:	8c 5a       	subi	r24, 0xAC	; 172
     700:	9f 4f       	sbci	r25, 0xFF	; 255
     702:	9e 01       	movw	r18, r28
     704:	20 5b       	subi	r18, 0xB0	; 176
     706:	3f 4f       	sbci	r19, 0xFF	; 255
     708:	f9 01       	movw	r30, r18
     70a:	20 81       	ld	r18, Z
     70c:	31 81       	ldd	r19, Z+1	; 0x01
     70e:	fc 01       	movw	r30, r24
     710:	31 83       	std	Z+1, r19	; 0x01
     712:	20 83       	st	Z, r18
     714:	ce 01       	movw	r24, r28
     716:	8c 5a       	subi	r24, 0xAC	; 172
     718:	9f 4f       	sbci	r25, 0xFF	; 255
     71a:	fc 01       	movw	r30, r24
     71c:	80 81       	ld	r24, Z
     71e:	91 81       	ldd	r25, Z+1	; 0x01
     720:	8c 01       	movw	r16, r24
     722:	c8 01       	movw	r24, r16
     724:	01 97       	sbiw	r24, 0x01	; 1
     726:	f1 f7       	brne	.-4      	; 0x724 <main+0x6a2>
     728:	8c 01       	movw	r16, r24
     72a:	ce 01       	movw	r24, r28
     72c:	8c 5a       	subi	r24, 0xAC	; 172
     72e:	9f 4f       	sbci	r25, 0xFF	; 255
     730:	fc 01       	movw	r30, r24
     732:	11 83       	std	Z+1, r17	; 0x01
     734:	00 83       	st	Z, r16
     736:	28 c0       	rjmp	.+80     	; 0x788 <main+0x706>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     738:	8e 01       	movw	r16, r28
     73a:	09 5b       	subi	r16, 0xB9	; 185
     73c:	1f 4f       	sbci	r17, 0xFF	; 255
     73e:	ce 01       	movw	r24, r28
     740:	8d 5b       	subi	r24, 0xBD	; 189
     742:	9f 4f       	sbci	r25, 0xFF	; 255
     744:	fc 01       	movw	r30, r24
     746:	60 81       	ld	r22, Z
     748:	71 81       	ldd	r23, Z+1	; 0x01
     74a:	82 81       	ldd	r24, Z+2	; 0x02
     74c:	93 81       	ldd	r25, Z+3	; 0x03
     74e:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     752:	dc 01       	movw	r26, r24
     754:	cb 01       	movw	r24, r22
     756:	f8 01       	movw	r30, r16
     758:	80 83       	st	Z, r24
     75a:	ce 01       	movw	r24, r28
     75c:	8a 5a       	subi	r24, 0xAA	; 170
     75e:	9f 4f       	sbci	r25, 0xFF	; 255
     760:	9e 01       	movw	r18, r28
     762:	29 5b       	subi	r18, 0xB9	; 185
     764:	3f 4f       	sbci	r19, 0xFF	; 255
     766:	f9 01       	movw	r30, r18
     768:	20 81       	ld	r18, Z
     76a:	fc 01       	movw	r30, r24
     76c:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     76e:	ce 01       	movw	r24, r28
     770:	8a 5a       	subi	r24, 0xAA	; 170
     772:	9f 4f       	sbci	r25, 0xFF	; 255
     774:	fc 01       	movw	r30, r24
     776:	80 81       	ld	r24, Z
     778:	18 2f       	mov	r17, r24
     77a:	1a 95       	dec	r17
     77c:	f1 f7       	brne	.-4      	; 0x77a <main+0x6f8>
     77e:	ce 01       	movw	r24, r28
     780:	8a 5a       	subi	r24, 0xAA	; 170
     782:	9f 4f       	sbci	r25, 0xFF	; 255
     784:	fc 01       	movw	r30, r24
     786:	10 83       	st	Z, r17

        wys2;
     788:	88 e3       	ldi	r24, 0x38	; 56
     78a:	90 e0       	ldi	r25, 0x00	; 0
     78c:	2d ef       	ldi	r18, 0xFD	; 253
     78e:	fc 01       	movw	r30, r24
     790:	20 83       	st	Z, r18
        PORTA = cyfra(liczba2);
     792:	0b e3       	ldi	r16, 0x3B	; 59
     794:	10 e0       	ldi	r17, 0x00	; 0
     796:	8b 81       	ldd	r24, Y+3	; 0x03
     798:	9c 81       	ldd	r25, Y+4	; 0x04
     79a:	0e 94 4c 0b 	call	0x1698	; 0x1698 <cyfra>
     79e:	f8 01       	movw	r30, r16
     7a0:	80 83       	st	Z, r24
     7a2:	0a c0       	rjmp	.+20     	; 0x7b8 <main+0x736>


    }
    else
    {
    puste
     7a4:	8b e3       	ldi	r24, 0x3B	; 59
     7a6:	90 e0       	ldi	r25, 0x00	; 0
     7a8:	2f ef       	ldi	r18, 0xFF	; 255
     7aa:	fc 01       	movw	r30, r24
     7ac:	20 83       	st	Z, r18
        nic;
     7ae:	88 e3       	ldi	r24, 0x38	; 56
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	2f ef       	ldi	r18, 0xFF	; 255
     7b4:	fc 01       	movw	r30, r24
     7b6:	20 83       	st	Z, r18

    }
  _delay_us(short_deley);
     7b8:	8b 85       	ldd	r24, Y+11	; 0x0b
     7ba:	9c 85       	ldd	r25, Y+12	; 0x0c
     7bc:	aa 27       	eor	r26, r26
     7be:	97 fd       	sbrc	r25, 7
     7c0:	a0 95       	com	r26
     7c2:	ba 2f       	mov	r27, r26
     7c4:	bc 01       	movw	r22, r24
     7c6:	cd 01       	movw	r24, r26
     7c8:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <__floatsisf>
     7cc:	dc 01       	movw	r26, r24
     7ce:	cb 01       	movw	r24, r22
     7d0:	9e 01       	movw	r18, r28
     7d2:	29 5a       	subi	r18, 0xA9	; 169
     7d4:	3f 4f       	sbci	r19, 0xFF	; 255
     7d6:	f9 01       	movw	r30, r18
     7d8:	80 83       	st	Z, r24
     7da:	91 83       	std	Z+1, r25	; 0x01
     7dc:	a2 83       	std	Z+2, r26	; 0x02
     7de:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     7e0:	8e 01       	movw	r16, r28
     7e2:	05 5a       	subi	r16, 0xA5	; 165
     7e4:	1f 4f       	sbci	r17, 0xFF	; 255
     7e6:	ce 01       	movw	r24, r28
     7e8:	89 5a       	subi	r24, 0xA9	; 169
     7ea:	9f 4f       	sbci	r25, 0xFF	; 255
     7ec:	fc 01       	movw	r30, r24
     7ee:	60 81       	ld	r22, Z
     7f0:	71 81       	ldd	r23, Z+1	; 0x01
     7f2:	82 81       	ldd	r24, Z+2	; 0x02
     7f4:	93 81       	ldd	r25, Z+3	; 0x03
     7f6:	2b ea       	ldi	r18, 0xAB	; 171
     7f8:	3a ea       	ldi	r19, 0xAA	; 170
     7fa:	4a ea       	ldi	r20, 0xAA	; 170
     7fc:	50 e4       	ldi	r21, 0x40	; 64
     7fe:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     802:	dc 01       	movw	r26, r24
     804:	cb 01       	movw	r24, r22
     806:	f8 01       	movw	r30, r16
     808:	80 83       	st	Z, r24
     80a:	91 83       	std	Z+1, r25	; 0x01
     80c:	a2 83       	std	Z+2, r26	; 0x02
     80e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     810:	ce 01       	movw	r24, r28
     812:	85 5a       	subi	r24, 0xA5	; 165
     814:	9f 4f       	sbci	r25, 0xFF	; 255
     816:	11 e0       	ldi	r17, 0x01	; 1
     818:	fc 01       	movw	r30, r24
     81a:	60 81       	ld	r22, Z
     81c:	71 81       	ldd	r23, Z+1	; 0x01
     81e:	82 81       	ldd	r24, Z+2	; 0x02
     820:	93 81       	ldd	r25, Z+3	; 0x03
     822:	20 e0       	ldi	r18, 0x00	; 0
     824:	30 e0       	ldi	r19, 0x00	; 0
     826:	40 e8       	ldi	r20, 0x80	; 128
     828:	5f e3       	ldi	r21, 0x3F	; 63
     82a:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
     82e:	88 23       	and	r24, r24
     830:	0c f0       	brlt	.+2      	; 0x834 <main+0x7b2>
     832:	10 e0       	ldi	r17, 0x00	; 0
     834:	11 23       	and	r17, r17
     836:	39 f0       	breq	.+14     	; 0x846 <main+0x7c4>
		__ticks = 1;
     838:	ce 01       	movw	r24, r28
     83a:	81 5a       	subi	r24, 0xA1	; 161
     83c:	9f 4f       	sbci	r25, 0xFF	; 255
     83e:	21 e0       	ldi	r18, 0x01	; 1
     840:	fc 01       	movw	r30, r24
     842:	20 83       	st	Z, r18
     844:	05 c1       	rjmp	.+522    	; 0xa50 <__stack+0x1f1>
	else if (__tmp > 255)
     846:	ce 01       	movw	r24, r28
     848:	85 5a       	subi	r24, 0xA5	; 165
     84a:	9f 4f       	sbci	r25, 0xFF	; 255
     84c:	11 e0       	ldi	r17, 0x01	; 1
     84e:	fc 01       	movw	r30, r24
     850:	60 81       	ld	r22, Z
     852:	71 81       	ldd	r23, Z+1	; 0x01
     854:	82 81       	ldd	r24, Z+2	; 0x02
     856:	93 81       	ldd	r25, Z+3	; 0x03
     858:	20 e0       	ldi	r18, 0x00	; 0
     85a:	30 e0       	ldi	r19, 0x00	; 0
     85c:	4f e7       	ldi	r20, 0x7F	; 127
     85e:	53 e4       	ldi	r21, 0x43	; 67
     860:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
     864:	18 16       	cp	r1, r24
     866:	0c f0       	brlt	.+2      	; 0x86a <__stack+0xb>
     868:	10 e0       	ldi	r17, 0x00	; 0
     86a:	11 23       	and	r17, r17
     86c:	09 f4       	brne	.+2      	; 0x870 <__stack+0x11>
     86e:	df c0       	rjmp	.+446    	; 0xa2e <__stack+0x1cf>
	{
		_delay_ms(__us / 1000.0);
     870:	ce 01       	movw	r24, r28
     872:	89 5a       	subi	r24, 0xA9	; 169
     874:	9f 4f       	sbci	r25, 0xFF	; 255
     876:	fc 01       	movw	r30, r24
     878:	60 81       	ld	r22, Z
     87a:	71 81       	ldd	r23, Z+1	; 0x01
     87c:	82 81       	ldd	r24, Z+2	; 0x02
     87e:	93 81       	ldd	r25, Z+3	; 0x03
     880:	20 e0       	ldi	r18, 0x00	; 0
     882:	30 e0       	ldi	r19, 0x00	; 0
     884:	4a e7       	ldi	r20, 0x7A	; 122
     886:	54 e4       	ldi	r21, 0x44	; 68
     888:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__divsf3>
     88c:	dc 01       	movw	r26, r24
     88e:	cb 01       	movw	r24, r22
     890:	9e 01       	movw	r18, r28
     892:	20 5a       	subi	r18, 0xA0	; 160
     894:	3f 4f       	sbci	r19, 0xFF	; 255
     896:	f9 01       	movw	r30, r18
     898:	80 83       	st	Z, r24
     89a:	91 83       	std	Z+1, r25	; 0x01
     89c:	a2 83       	std	Z+2, r26	; 0x02
     89e:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     8a0:	8e 01       	movw	r16, r28
     8a2:	0c 59       	subi	r16, 0x9C	; 156
     8a4:	1f 4f       	sbci	r17, 0xFF	; 255
     8a6:	ce 01       	movw	r24, r28
     8a8:	80 5a       	subi	r24, 0xA0	; 160
     8aa:	9f 4f       	sbci	r25, 0xFF	; 255
     8ac:	fc 01       	movw	r30, r24
     8ae:	60 81       	ld	r22, Z
     8b0:	71 81       	ldd	r23, Z+1	; 0x01
     8b2:	82 81       	ldd	r24, Z+2	; 0x02
     8b4:	93 81       	ldd	r25, Z+3	; 0x03
     8b6:	20 e0       	ldi	r18, 0x00	; 0
     8b8:	30 e0       	ldi	r19, 0x00	; 0
     8ba:	4a e7       	ldi	r20, 0x7A	; 122
     8bc:	55 e4       	ldi	r21, 0x45	; 69
     8be:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     8c2:	dc 01       	movw	r26, r24
     8c4:	cb 01       	movw	r24, r22
     8c6:	f8 01       	movw	r30, r16
     8c8:	80 83       	st	Z, r24
     8ca:	91 83       	std	Z+1, r25	; 0x01
     8cc:	a2 83       	std	Z+2, r26	; 0x02
     8ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     8d0:	ce 01       	movw	r24, r28
     8d2:	8c 59       	subi	r24, 0x9C	; 156
     8d4:	9f 4f       	sbci	r25, 0xFF	; 255
     8d6:	11 e0       	ldi	r17, 0x01	; 1
     8d8:	fc 01       	movw	r30, r24
     8da:	60 81       	ld	r22, Z
     8dc:	71 81       	ldd	r23, Z+1	; 0x01
     8de:	82 81       	ldd	r24, Z+2	; 0x02
     8e0:	93 81       	ldd	r25, Z+3	; 0x03
     8e2:	20 e0       	ldi	r18, 0x00	; 0
     8e4:	30 e0       	ldi	r19, 0x00	; 0
     8e6:	40 e8       	ldi	r20, 0x80	; 128
     8e8:	5f e3       	ldi	r21, 0x3F	; 63
     8ea:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
     8ee:	88 23       	and	r24, r24
     8f0:	0c f0       	brlt	.+2      	; 0x8f4 <__stack+0x95>
     8f2:	10 e0       	ldi	r17, 0x00	; 0
     8f4:	11 23       	and	r17, r17
     8f6:	49 f0       	breq	.+18     	; 0x90a <__stack+0xab>
		__ticks = 1;
     8f8:	ce 01       	movw	r24, r28
     8fa:	88 59       	subi	r24, 0x98	; 152
     8fc:	9f 4f       	sbci	r25, 0xFF	; 255
     8fe:	21 e0       	ldi	r18, 0x01	; 1
     900:	30 e0       	ldi	r19, 0x00	; 0
     902:	fc 01       	movw	r30, r24
     904:	31 83       	std	Z+1, r19	; 0x01
     906:	20 83       	st	Z, r18
     908:	74 c0       	rjmp	.+232    	; 0x9f2 <__stack+0x193>
	else if (__tmp > 65535)
     90a:	ce 01       	movw	r24, r28
     90c:	8c 59       	subi	r24, 0x9C	; 156
     90e:	9f 4f       	sbci	r25, 0xFF	; 255
     910:	11 e0       	ldi	r17, 0x01	; 1
     912:	fc 01       	movw	r30, r24
     914:	60 81       	ld	r22, Z
     916:	71 81       	ldd	r23, Z+1	; 0x01
     918:	82 81       	ldd	r24, Z+2	; 0x02
     91a:	93 81       	ldd	r25, Z+3	; 0x03
     91c:	20 e0       	ldi	r18, 0x00	; 0
     91e:	3f ef       	ldi	r19, 0xFF	; 255
     920:	4f e7       	ldi	r20, 0x7F	; 127
     922:	57 e4       	ldi	r21, 0x47	; 71
     924:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
     928:	18 16       	cp	r1, r24
     92a:	0c f0       	brlt	.+2      	; 0x92e <__stack+0xcf>
     92c:	10 e0       	ldi	r17, 0x00	; 0
     92e:	11 23       	and	r17, r17
     930:	09 f4       	brne	.+2      	; 0x934 <__stack+0xd5>
     932:	4d c0       	rjmp	.+154    	; 0x9ce <__stack+0x16f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     934:	ce 01       	movw	r24, r28
     936:	80 5a       	subi	r24, 0xA0	; 160
     938:	9f 4f       	sbci	r25, 0xFF	; 255
     93a:	fc 01       	movw	r30, r24
     93c:	60 81       	ld	r22, Z
     93e:	71 81       	ldd	r23, Z+1	; 0x01
     940:	82 81       	ldd	r24, Z+2	; 0x02
     942:	93 81       	ldd	r25, Z+3	; 0x03
     944:	20 e0       	ldi	r18, 0x00	; 0
     946:	30 e0       	ldi	r19, 0x00	; 0
     948:	40 e2       	ldi	r20, 0x20	; 32
     94a:	51 e4       	ldi	r21, 0x41	; 65
     94c:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     950:	dc 01       	movw	r26, r24
     952:	cb 01       	movw	r24, r22
     954:	8e 01       	movw	r16, r28
     956:	08 59       	subi	r16, 0x98	; 152
     958:	1f 4f       	sbci	r17, 0xFF	; 255
     95a:	bc 01       	movw	r22, r24
     95c:	cd 01       	movw	r24, r26
     95e:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     962:	dc 01       	movw	r26, r24
     964:	cb 01       	movw	r24, r22
     966:	f8 01       	movw	r30, r16
     968:	91 83       	std	Z+1, r25	; 0x01
     96a:	80 83       	st	Z, r24
     96c:	27 c0       	rjmp	.+78     	; 0x9bc <__stack+0x15d>
     96e:	ce 01       	movw	r24, r28
     970:	86 59       	subi	r24, 0x96	; 150
     972:	9f 4f       	sbci	r25, 0xFF	; 255
     974:	20 e9       	ldi	r18, 0x90	; 144
     976:	31 e0       	ldi	r19, 0x01	; 1
     978:	fc 01       	movw	r30, r24
     97a:	31 83       	std	Z+1, r19	; 0x01
     97c:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     97e:	ce 01       	movw	r24, r28
     980:	86 59       	subi	r24, 0x96	; 150
     982:	9f 4f       	sbci	r25, 0xFF	; 255
     984:	fc 01       	movw	r30, r24
     986:	80 81       	ld	r24, Z
     988:	91 81       	ldd	r25, Z+1	; 0x01
     98a:	8c 01       	movw	r16, r24
     98c:	c8 01       	movw	r24, r16
     98e:	01 97       	sbiw	r24, 0x01	; 1
     990:	f1 f7       	brne	.-4      	; 0x98e <__stack+0x12f>
     992:	8c 01       	movw	r16, r24
     994:	ce 01       	movw	r24, r28
     996:	86 59       	subi	r24, 0x96	; 150
     998:	9f 4f       	sbci	r25, 0xFF	; 255
     99a:	fc 01       	movw	r30, r24
     99c:	11 83       	std	Z+1, r17	; 0x01
     99e:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9a0:	ce 01       	movw	r24, r28
     9a2:	88 59       	subi	r24, 0x98	; 152
     9a4:	9f 4f       	sbci	r25, 0xFF	; 255
     9a6:	9e 01       	movw	r18, r28
     9a8:	28 59       	subi	r18, 0x98	; 152
     9aa:	3f 4f       	sbci	r19, 0xFF	; 255
     9ac:	f9 01       	movw	r30, r18
     9ae:	20 81       	ld	r18, Z
     9b0:	31 81       	ldd	r19, Z+1	; 0x01
     9b2:	21 50       	subi	r18, 0x01	; 1
     9b4:	30 40       	sbci	r19, 0x00	; 0
     9b6:	fc 01       	movw	r30, r24
     9b8:	31 83       	std	Z+1, r19	; 0x01
     9ba:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9bc:	ce 01       	movw	r24, r28
     9be:	88 59       	subi	r24, 0x98	; 152
     9c0:	9f 4f       	sbci	r25, 0xFF	; 255
     9c2:	fc 01       	movw	r30, r24
     9c4:	80 81       	ld	r24, Z
     9c6:	91 81       	ldd	r25, Z+1	; 0x01
     9c8:	00 97       	sbiw	r24, 0x00	; 0
     9ca:	89 f6       	brne	.-94     	; 0x96e <__stack+0x10f>
     9cc:	58 c0       	rjmp	.+176    	; 0xa7e <__stack+0x21f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9ce:	8e 01       	movw	r16, r28
     9d0:	08 59       	subi	r16, 0x98	; 152
     9d2:	1f 4f       	sbci	r17, 0xFF	; 255
     9d4:	ce 01       	movw	r24, r28
     9d6:	8c 59       	subi	r24, 0x9C	; 156
     9d8:	9f 4f       	sbci	r25, 0xFF	; 255
     9da:	fc 01       	movw	r30, r24
     9dc:	60 81       	ld	r22, Z
     9de:	71 81       	ldd	r23, Z+1	; 0x01
     9e0:	82 81       	ldd	r24, Z+2	; 0x02
     9e2:	93 81       	ldd	r25, Z+3	; 0x03
     9e4:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     9e8:	dc 01       	movw	r26, r24
     9ea:	cb 01       	movw	r24, r22
     9ec:	f8 01       	movw	r30, r16
     9ee:	91 83       	std	Z+1, r25	; 0x01
     9f0:	80 83       	st	Z, r24
     9f2:	ce 01       	movw	r24, r28
     9f4:	84 59       	subi	r24, 0x94	; 148
     9f6:	9f 4f       	sbci	r25, 0xFF	; 255
     9f8:	9e 01       	movw	r18, r28
     9fa:	28 59       	subi	r18, 0x98	; 152
     9fc:	3f 4f       	sbci	r19, 0xFF	; 255
     9fe:	f9 01       	movw	r30, r18
     a00:	20 81       	ld	r18, Z
     a02:	31 81       	ldd	r19, Z+1	; 0x01
     a04:	fc 01       	movw	r30, r24
     a06:	31 83       	std	Z+1, r19	; 0x01
     a08:	20 83       	st	Z, r18
     a0a:	ce 01       	movw	r24, r28
     a0c:	84 59       	subi	r24, 0x94	; 148
     a0e:	9f 4f       	sbci	r25, 0xFF	; 255
     a10:	fc 01       	movw	r30, r24
     a12:	80 81       	ld	r24, Z
     a14:	91 81       	ldd	r25, Z+1	; 0x01
     a16:	8c 01       	movw	r16, r24
     a18:	c8 01       	movw	r24, r16
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	f1 f7       	brne	.-4      	; 0xa1a <__stack+0x1bb>
     a1e:	8c 01       	movw	r16, r24
     a20:	ce 01       	movw	r24, r28
     a22:	84 59       	subi	r24, 0x94	; 148
     a24:	9f 4f       	sbci	r25, 0xFF	; 255
     a26:	fc 01       	movw	r30, r24
     a28:	11 83       	std	Z+1, r17	; 0x01
     a2a:	00 83       	st	Z, r16
     a2c:	28 c0       	rjmp	.+80     	; 0xa7e <__stack+0x21f>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     a2e:	8e 01       	movw	r16, r28
     a30:	01 5a       	subi	r16, 0xA1	; 161
     a32:	1f 4f       	sbci	r17, 0xFF	; 255
     a34:	ce 01       	movw	r24, r28
     a36:	85 5a       	subi	r24, 0xA5	; 165
     a38:	9f 4f       	sbci	r25, 0xFF	; 255
     a3a:	fc 01       	movw	r30, r24
     a3c:	60 81       	ld	r22, Z
     a3e:	71 81       	ldd	r23, Z+1	; 0x01
     a40:	82 81       	ldd	r24, Z+2	; 0x02
     a42:	93 81       	ldd	r25, Z+3	; 0x03
     a44:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     a48:	dc 01       	movw	r26, r24
     a4a:	cb 01       	movw	r24, r22
     a4c:	f8 01       	movw	r30, r16
     a4e:	80 83       	st	Z, r24
     a50:	ce 01       	movw	r24, r28
     a52:	82 59       	subi	r24, 0x92	; 146
     a54:	9f 4f       	sbci	r25, 0xFF	; 255
     a56:	9e 01       	movw	r18, r28
     a58:	21 5a       	subi	r18, 0xA1	; 161
     a5a:	3f 4f       	sbci	r19, 0xFF	; 255
     a5c:	f9 01       	movw	r30, r18
     a5e:	20 81       	ld	r18, Z
     a60:	fc 01       	movw	r30, r24
     a62:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     a64:	ce 01       	movw	r24, r28
     a66:	82 59       	subi	r24, 0x92	; 146
     a68:	9f 4f       	sbci	r25, 0xFF	; 255
     a6a:	fc 01       	movw	r30, r24
     a6c:	80 81       	ld	r24, Z
     a6e:	18 2f       	mov	r17, r24
     a70:	1a 95       	dec	r17
     a72:	f1 f7       	brne	.-4      	; 0xa70 <__stack+0x211>
     a74:	ce 01       	movw	r24, r28
     a76:	82 59       	subi	r24, 0x92	; 146
     a78:	9f 4f       	sbci	r25, 0xFF	; 255
     a7a:	fc 01       	movw	r30, r24
     a7c:	10 83       	st	Z, r17


    if ((liczba3 != 0) || (liczba4 !=0))
     a7e:	8d 81       	ldd	r24, Y+5	; 0x05
     a80:	9e 81       	ldd	r25, Y+6	; 0x06
     a82:	00 97       	sbiw	r24, 0x00	; 0
     a84:	29 f4       	brne	.+10     	; 0xa90 <__stack+0x231>
     a86:	8f 81       	ldd	r24, Y+7	; 0x07
     a88:	98 85       	ldd	r25, Y+8	; 0x08
     a8a:	00 97       	sbiw	r24, 0x00	; 0
     a8c:	09 f4       	brne	.+2      	; 0xa90 <__stack+0x231>
     a8e:	7b c1       	rjmp	.+758    	; 0xd86 <__stack+0x527>
    {


        wys3;
     a90:	88 e3       	ldi	r24, 0x38	; 56
     a92:	90 e0       	ldi	r25, 0x00	; 0
     a94:	2b ef       	ldi	r18, 0xFB	; 251
     a96:	fc 01       	movw	r30, r24
     a98:	20 83       	st	Z, r18
       puste
     a9a:	8b e3       	ldi	r24, 0x3B	; 59
     a9c:	90 e0       	ldi	r25, 0x00	; 0
     a9e:	2f ef       	ldi	r18, 0xFF	; 255
     aa0:	fc 01       	movw	r30, r24
     aa2:	20 83       	st	Z, r18
        _delay_us(micro);
     aa4:	8d 85       	ldd	r24, Y+13	; 0x0d
     aa6:	9e 85       	ldd	r25, Y+14	; 0x0e
     aa8:	aa 27       	eor	r26, r26
     aaa:	97 fd       	sbrc	r25, 7
     aac:	a0 95       	com	r26
     aae:	ba 2f       	mov	r27, r26
     ab0:	bc 01       	movw	r22, r24
     ab2:	cd 01       	movw	r24, r26
     ab4:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <__floatsisf>
     ab8:	dc 01       	movw	r26, r24
     aba:	cb 01       	movw	r24, r22
     abc:	9e 01       	movw	r18, r28
     abe:	21 59       	subi	r18, 0x91	; 145
     ac0:	3f 4f       	sbci	r19, 0xFF	; 255
     ac2:	f9 01       	movw	r30, r18
     ac4:	80 83       	st	Z, r24
     ac6:	91 83       	std	Z+1, r25	; 0x01
     ac8:	a2 83       	std	Z+2, r26	; 0x02
     aca:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     acc:	8e 01       	movw	r16, r28
     ace:	0d 58       	subi	r16, 0x8D	; 141
     ad0:	1f 4f       	sbci	r17, 0xFF	; 255
     ad2:	ce 01       	movw	r24, r28
     ad4:	81 59       	subi	r24, 0x91	; 145
     ad6:	9f 4f       	sbci	r25, 0xFF	; 255
     ad8:	fc 01       	movw	r30, r24
     ada:	60 81       	ld	r22, Z
     adc:	71 81       	ldd	r23, Z+1	; 0x01
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	2b ea       	ldi	r18, 0xAB	; 171
     ae4:	3a ea       	ldi	r19, 0xAA	; 170
     ae6:	4a ea       	ldi	r20, 0xAA	; 170
     ae8:	50 e4       	ldi	r21, 0x40	; 64
     aea:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     aee:	dc 01       	movw	r26, r24
     af0:	cb 01       	movw	r24, r22
     af2:	f8 01       	movw	r30, r16
     af4:	80 83       	st	Z, r24
     af6:	91 83       	std	Z+1, r25	; 0x01
     af8:	a2 83       	std	Z+2, r26	; 0x02
     afa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     afc:	ce 01       	movw	r24, r28
     afe:	8d 58       	subi	r24, 0x8D	; 141
     b00:	9f 4f       	sbci	r25, 0xFF	; 255
     b02:	11 e0       	ldi	r17, 0x01	; 1
     b04:	fc 01       	movw	r30, r24
     b06:	60 81       	ld	r22, Z
     b08:	71 81       	ldd	r23, Z+1	; 0x01
     b0a:	82 81       	ldd	r24, Z+2	; 0x02
     b0c:	93 81       	ldd	r25, Z+3	; 0x03
     b0e:	20 e0       	ldi	r18, 0x00	; 0
     b10:	30 e0       	ldi	r19, 0x00	; 0
     b12:	40 e8       	ldi	r20, 0x80	; 128
     b14:	5f e3       	ldi	r21, 0x3F	; 63
     b16:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
     b1a:	88 23       	and	r24, r24
     b1c:	0c f0       	brlt	.+2      	; 0xb20 <__stack+0x2c1>
     b1e:	10 e0       	ldi	r17, 0x00	; 0
     b20:	11 23       	and	r17, r17
     b22:	39 f0       	breq	.+14     	; 0xb32 <__stack+0x2d3>
		__ticks = 1;
     b24:	ce 01       	movw	r24, r28
     b26:	89 58       	subi	r24, 0x89	; 137
     b28:	9f 4f       	sbci	r25, 0xFF	; 255
     b2a:	21 e0       	ldi	r18, 0x01	; 1
     b2c:	fc 01       	movw	r30, r24
     b2e:	20 83       	st	Z, r18
     b30:	05 c1       	rjmp	.+522    	; 0xd3c <__stack+0x4dd>
	else if (__tmp > 255)
     b32:	ce 01       	movw	r24, r28
     b34:	8d 58       	subi	r24, 0x8D	; 141
     b36:	9f 4f       	sbci	r25, 0xFF	; 255
     b38:	11 e0       	ldi	r17, 0x01	; 1
     b3a:	fc 01       	movw	r30, r24
     b3c:	60 81       	ld	r22, Z
     b3e:	71 81       	ldd	r23, Z+1	; 0x01
     b40:	82 81       	ldd	r24, Z+2	; 0x02
     b42:	93 81       	ldd	r25, Z+3	; 0x03
     b44:	20 e0       	ldi	r18, 0x00	; 0
     b46:	30 e0       	ldi	r19, 0x00	; 0
     b48:	4f e7       	ldi	r20, 0x7F	; 127
     b4a:	53 e4       	ldi	r21, 0x43	; 67
     b4c:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
     b50:	18 16       	cp	r1, r24
     b52:	0c f0       	brlt	.+2      	; 0xb56 <__stack+0x2f7>
     b54:	10 e0       	ldi	r17, 0x00	; 0
     b56:	11 23       	and	r17, r17
     b58:	09 f4       	brne	.+2      	; 0xb5c <__stack+0x2fd>
     b5a:	df c0       	rjmp	.+446    	; 0xd1a <__stack+0x4bb>
	{
		_delay_ms(__us / 1000.0);
     b5c:	ce 01       	movw	r24, r28
     b5e:	81 59       	subi	r24, 0x91	; 145
     b60:	9f 4f       	sbci	r25, 0xFF	; 255
     b62:	fc 01       	movw	r30, r24
     b64:	60 81       	ld	r22, Z
     b66:	71 81       	ldd	r23, Z+1	; 0x01
     b68:	82 81       	ldd	r24, Z+2	; 0x02
     b6a:	93 81       	ldd	r25, Z+3	; 0x03
     b6c:	20 e0       	ldi	r18, 0x00	; 0
     b6e:	30 e0       	ldi	r19, 0x00	; 0
     b70:	4a e7       	ldi	r20, 0x7A	; 122
     b72:	54 e4       	ldi	r21, 0x44	; 68
     b74:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__divsf3>
     b78:	dc 01       	movw	r26, r24
     b7a:	cb 01       	movw	r24, r22
     b7c:	9e 01       	movw	r18, r28
     b7e:	28 58       	subi	r18, 0x88	; 136
     b80:	3f 4f       	sbci	r19, 0xFF	; 255
     b82:	f9 01       	movw	r30, r18
     b84:	80 83       	st	Z, r24
     b86:	91 83       	std	Z+1, r25	; 0x01
     b88:	a2 83       	std	Z+2, r26	; 0x02
     b8a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     b8c:	8e 01       	movw	r16, r28
     b8e:	04 58       	subi	r16, 0x84	; 132
     b90:	1f 4f       	sbci	r17, 0xFF	; 255
     b92:	ce 01       	movw	r24, r28
     b94:	88 58       	subi	r24, 0x88	; 136
     b96:	9f 4f       	sbci	r25, 0xFF	; 255
     b98:	fc 01       	movw	r30, r24
     b9a:	60 81       	ld	r22, Z
     b9c:	71 81       	ldd	r23, Z+1	; 0x01
     b9e:	82 81       	ldd	r24, Z+2	; 0x02
     ba0:	93 81       	ldd	r25, Z+3	; 0x03
     ba2:	20 e0       	ldi	r18, 0x00	; 0
     ba4:	30 e0       	ldi	r19, 0x00	; 0
     ba6:	4a e7       	ldi	r20, 0x7A	; 122
     ba8:	55 e4       	ldi	r21, 0x45	; 69
     baa:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     bae:	dc 01       	movw	r26, r24
     bb0:	cb 01       	movw	r24, r22
     bb2:	f8 01       	movw	r30, r16
     bb4:	80 83       	st	Z, r24
     bb6:	91 83       	std	Z+1, r25	; 0x01
     bb8:	a2 83       	std	Z+2, r26	; 0x02
     bba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     bbc:	ce 01       	movw	r24, r28
     bbe:	84 58       	subi	r24, 0x84	; 132
     bc0:	9f 4f       	sbci	r25, 0xFF	; 255
     bc2:	11 e0       	ldi	r17, 0x01	; 1
     bc4:	fc 01       	movw	r30, r24
     bc6:	60 81       	ld	r22, Z
     bc8:	71 81       	ldd	r23, Z+1	; 0x01
     bca:	82 81       	ldd	r24, Z+2	; 0x02
     bcc:	93 81       	ldd	r25, Z+3	; 0x03
     bce:	20 e0       	ldi	r18, 0x00	; 0
     bd0:	30 e0       	ldi	r19, 0x00	; 0
     bd2:	40 e8       	ldi	r20, 0x80	; 128
     bd4:	5f e3       	ldi	r21, 0x3F	; 63
     bd6:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
     bda:	88 23       	and	r24, r24
     bdc:	0c f0       	brlt	.+2      	; 0xbe0 <__stack+0x381>
     bde:	10 e0       	ldi	r17, 0x00	; 0
     be0:	11 23       	and	r17, r17
     be2:	49 f0       	breq	.+18     	; 0xbf6 <__stack+0x397>
		__ticks = 1;
     be4:	ce 01       	movw	r24, r28
     be6:	80 58       	subi	r24, 0x80	; 128
     be8:	9f 4f       	sbci	r25, 0xFF	; 255
     bea:	21 e0       	ldi	r18, 0x01	; 1
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	fc 01       	movw	r30, r24
     bf0:	31 83       	std	Z+1, r19	; 0x01
     bf2:	20 83       	st	Z, r18
     bf4:	74 c0       	rjmp	.+232    	; 0xcde <__stack+0x47f>
	else if (__tmp > 65535)
     bf6:	ce 01       	movw	r24, r28
     bf8:	84 58       	subi	r24, 0x84	; 132
     bfa:	9f 4f       	sbci	r25, 0xFF	; 255
     bfc:	11 e0       	ldi	r17, 0x01	; 1
     bfe:	fc 01       	movw	r30, r24
     c00:	60 81       	ld	r22, Z
     c02:	71 81       	ldd	r23, Z+1	; 0x01
     c04:	82 81       	ldd	r24, Z+2	; 0x02
     c06:	93 81       	ldd	r25, Z+3	; 0x03
     c08:	20 e0       	ldi	r18, 0x00	; 0
     c0a:	3f ef       	ldi	r19, 0xFF	; 255
     c0c:	4f e7       	ldi	r20, 0x7F	; 127
     c0e:	57 e4       	ldi	r21, 0x47	; 71
     c10:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
     c14:	18 16       	cp	r1, r24
     c16:	0c f0       	brlt	.+2      	; 0xc1a <__stack+0x3bb>
     c18:	10 e0       	ldi	r17, 0x00	; 0
     c1a:	11 23       	and	r17, r17
     c1c:	09 f4       	brne	.+2      	; 0xc20 <__stack+0x3c1>
     c1e:	4d c0       	rjmp	.+154    	; 0xcba <__stack+0x45b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     c20:	ce 01       	movw	r24, r28
     c22:	88 58       	subi	r24, 0x88	; 136
     c24:	9f 4f       	sbci	r25, 0xFF	; 255
     c26:	fc 01       	movw	r30, r24
     c28:	60 81       	ld	r22, Z
     c2a:	71 81       	ldd	r23, Z+1	; 0x01
     c2c:	82 81       	ldd	r24, Z+2	; 0x02
     c2e:	93 81       	ldd	r25, Z+3	; 0x03
     c30:	20 e0       	ldi	r18, 0x00	; 0
     c32:	30 e0       	ldi	r19, 0x00	; 0
     c34:	40 e2       	ldi	r20, 0x20	; 32
     c36:	51 e4       	ldi	r21, 0x41	; 65
     c38:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     c3c:	dc 01       	movw	r26, r24
     c3e:	cb 01       	movw	r24, r22
     c40:	8e 01       	movw	r16, r28
     c42:	00 58       	subi	r16, 0x80	; 128
     c44:	1f 4f       	sbci	r17, 0xFF	; 255
     c46:	bc 01       	movw	r22, r24
     c48:	cd 01       	movw	r24, r26
     c4a:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     c4e:	dc 01       	movw	r26, r24
     c50:	cb 01       	movw	r24, r22
     c52:	f8 01       	movw	r30, r16
     c54:	91 83       	std	Z+1, r25	; 0x01
     c56:	80 83       	st	Z, r24
     c58:	27 c0       	rjmp	.+78     	; 0xca8 <__stack+0x449>
     c5a:	ce 01       	movw	r24, r28
     c5c:	8e 57       	subi	r24, 0x7E	; 126
     c5e:	9f 4f       	sbci	r25, 0xFF	; 255
     c60:	20 e9       	ldi	r18, 0x90	; 144
     c62:	31 e0       	ldi	r19, 0x01	; 1
     c64:	fc 01       	movw	r30, r24
     c66:	31 83       	std	Z+1, r19	; 0x01
     c68:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c6a:	ce 01       	movw	r24, r28
     c6c:	8e 57       	subi	r24, 0x7E	; 126
     c6e:	9f 4f       	sbci	r25, 0xFF	; 255
     c70:	fc 01       	movw	r30, r24
     c72:	80 81       	ld	r24, Z
     c74:	91 81       	ldd	r25, Z+1	; 0x01
     c76:	8c 01       	movw	r16, r24
     c78:	c8 01       	movw	r24, r16
     c7a:	01 97       	sbiw	r24, 0x01	; 1
     c7c:	f1 f7       	brne	.-4      	; 0xc7a <__stack+0x41b>
     c7e:	8c 01       	movw	r16, r24
     c80:	ce 01       	movw	r24, r28
     c82:	8e 57       	subi	r24, 0x7E	; 126
     c84:	9f 4f       	sbci	r25, 0xFF	; 255
     c86:	fc 01       	movw	r30, r24
     c88:	11 83       	std	Z+1, r17	; 0x01
     c8a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c8c:	ce 01       	movw	r24, r28
     c8e:	80 58       	subi	r24, 0x80	; 128
     c90:	9f 4f       	sbci	r25, 0xFF	; 255
     c92:	9e 01       	movw	r18, r28
     c94:	20 58       	subi	r18, 0x80	; 128
     c96:	3f 4f       	sbci	r19, 0xFF	; 255
     c98:	f9 01       	movw	r30, r18
     c9a:	20 81       	ld	r18, Z
     c9c:	31 81       	ldd	r19, Z+1	; 0x01
     c9e:	21 50       	subi	r18, 0x01	; 1
     ca0:	30 40       	sbci	r19, 0x00	; 0
     ca2:	fc 01       	movw	r30, r24
     ca4:	31 83       	std	Z+1, r19	; 0x01
     ca6:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     ca8:	ce 01       	movw	r24, r28
     caa:	80 58       	subi	r24, 0x80	; 128
     cac:	9f 4f       	sbci	r25, 0xFF	; 255
     cae:	fc 01       	movw	r30, r24
     cb0:	80 81       	ld	r24, Z
     cb2:	91 81       	ldd	r25, Z+1	; 0x01
     cb4:	00 97       	sbiw	r24, 0x00	; 0
     cb6:	89 f6       	brne	.-94     	; 0xc5a <__stack+0x3fb>
     cb8:	58 c0       	rjmp	.+176    	; 0xd6a <__stack+0x50b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     cba:	8e 01       	movw	r16, r28
     cbc:	00 58       	subi	r16, 0x80	; 128
     cbe:	1f 4f       	sbci	r17, 0xFF	; 255
     cc0:	ce 01       	movw	r24, r28
     cc2:	84 58       	subi	r24, 0x84	; 132
     cc4:	9f 4f       	sbci	r25, 0xFF	; 255
     cc6:	fc 01       	movw	r30, r24
     cc8:	60 81       	ld	r22, Z
     cca:	71 81       	ldd	r23, Z+1	; 0x01
     ccc:	82 81       	ldd	r24, Z+2	; 0x02
     cce:	93 81       	ldd	r25, Z+3	; 0x03
     cd0:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     cd4:	dc 01       	movw	r26, r24
     cd6:	cb 01       	movw	r24, r22
     cd8:	f8 01       	movw	r30, r16
     cda:	91 83       	std	Z+1, r25	; 0x01
     cdc:	80 83       	st	Z, r24
     cde:	ce 01       	movw	r24, r28
     ce0:	8c 57       	subi	r24, 0x7C	; 124
     ce2:	9f 4f       	sbci	r25, 0xFF	; 255
     ce4:	9e 01       	movw	r18, r28
     ce6:	20 58       	subi	r18, 0x80	; 128
     ce8:	3f 4f       	sbci	r19, 0xFF	; 255
     cea:	f9 01       	movw	r30, r18
     cec:	20 81       	ld	r18, Z
     cee:	31 81       	ldd	r19, Z+1	; 0x01
     cf0:	fc 01       	movw	r30, r24
     cf2:	31 83       	std	Z+1, r19	; 0x01
     cf4:	20 83       	st	Z, r18
     cf6:	ce 01       	movw	r24, r28
     cf8:	8c 57       	subi	r24, 0x7C	; 124
     cfa:	9f 4f       	sbci	r25, 0xFF	; 255
     cfc:	fc 01       	movw	r30, r24
     cfe:	80 81       	ld	r24, Z
     d00:	91 81       	ldd	r25, Z+1	; 0x01
     d02:	8c 01       	movw	r16, r24
     d04:	c8 01       	movw	r24, r16
     d06:	01 97       	sbiw	r24, 0x01	; 1
     d08:	f1 f7       	brne	.-4      	; 0xd06 <__stack+0x4a7>
     d0a:	8c 01       	movw	r16, r24
     d0c:	ce 01       	movw	r24, r28
     d0e:	8c 57       	subi	r24, 0x7C	; 124
     d10:	9f 4f       	sbci	r25, 0xFF	; 255
     d12:	fc 01       	movw	r30, r24
     d14:	11 83       	std	Z+1, r17	; 0x01
     d16:	00 83       	st	Z, r16
     d18:	28 c0       	rjmp	.+80     	; 0xd6a <__stack+0x50b>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     d1a:	8e 01       	movw	r16, r28
     d1c:	09 58       	subi	r16, 0x89	; 137
     d1e:	1f 4f       	sbci	r17, 0xFF	; 255
     d20:	ce 01       	movw	r24, r28
     d22:	8d 58       	subi	r24, 0x8D	; 141
     d24:	9f 4f       	sbci	r25, 0xFF	; 255
     d26:	fc 01       	movw	r30, r24
     d28:	60 81       	ld	r22, Z
     d2a:	71 81       	ldd	r23, Z+1	; 0x01
     d2c:	82 81       	ldd	r24, Z+2	; 0x02
     d2e:	93 81       	ldd	r25, Z+3	; 0x03
     d30:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     d34:	dc 01       	movw	r26, r24
     d36:	cb 01       	movw	r24, r22
     d38:	f8 01       	movw	r30, r16
     d3a:	80 83       	st	Z, r24
     d3c:	ce 01       	movw	r24, r28
     d3e:	8a 57       	subi	r24, 0x7A	; 122
     d40:	9f 4f       	sbci	r25, 0xFF	; 255
     d42:	9e 01       	movw	r18, r28
     d44:	29 58       	subi	r18, 0x89	; 137
     d46:	3f 4f       	sbci	r19, 0xFF	; 255
     d48:	f9 01       	movw	r30, r18
     d4a:	20 81       	ld	r18, Z
     d4c:	fc 01       	movw	r30, r24
     d4e:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     d50:	ce 01       	movw	r24, r28
     d52:	8a 57       	subi	r24, 0x7A	; 122
     d54:	9f 4f       	sbci	r25, 0xFF	; 255
     d56:	fc 01       	movw	r30, r24
     d58:	80 81       	ld	r24, Z
     d5a:	18 2f       	mov	r17, r24
     d5c:	1a 95       	dec	r17
     d5e:	f1 f7       	brne	.-4      	; 0xd5c <__stack+0x4fd>
     d60:	ce 01       	movw	r24, r28
     d62:	8a 57       	subi	r24, 0x7A	; 122
     d64:	9f 4f       	sbci	r25, 0xFF	; 255
     d66:	fc 01       	movw	r30, r24
     d68:	10 83       	st	Z, r17
        wys3;
     d6a:	88 e3       	ldi	r24, 0x38	; 56
     d6c:	90 e0       	ldi	r25, 0x00	; 0
     d6e:	2b ef       	ldi	r18, 0xFB	; 251
     d70:	fc 01       	movw	r30, r24
     d72:	20 83       	st	Z, r18
        PORTA = cyfra(liczba3);
     d74:	0b e3       	ldi	r16, 0x3B	; 59
     d76:	10 e0       	ldi	r17, 0x00	; 0
     d78:	8d 81       	ldd	r24, Y+5	; 0x05
     d7a:	9e 81       	ldd	r25, Y+6	; 0x06
     d7c:	0e 94 4c 0b 	call	0x1698	; 0x1698 <cyfra>
     d80:	f8 01       	movw	r30, r16
     d82:	80 83       	st	Z, r24
     d84:	0a c0       	rjmp	.+20     	; 0xd9a <__stack+0x53b>


    }
    else
    {
    puste
     d86:	8b e3       	ldi	r24, 0x3B	; 59
     d88:	90 e0       	ldi	r25, 0x00	; 0
     d8a:	2f ef       	ldi	r18, 0xFF	; 255
     d8c:	fc 01       	movw	r30, r24
     d8e:	20 83       	st	Z, r18
        nic;
     d90:	88 e3       	ldi	r24, 0x38	; 56
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	2f ef       	ldi	r18, 0xFF	; 255
     d96:	fc 01       	movw	r30, r24
     d98:	20 83       	st	Z, r18

    }
  _delay_us(short_deley);
     d9a:	8b 85       	ldd	r24, Y+11	; 0x0b
     d9c:	9c 85       	ldd	r25, Y+12	; 0x0c
     d9e:	aa 27       	eor	r26, r26
     da0:	97 fd       	sbrc	r25, 7
     da2:	a0 95       	com	r26
     da4:	ba 2f       	mov	r27, r26
     da6:	bc 01       	movw	r22, r24
     da8:	cd 01       	movw	r24, r26
     daa:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <__floatsisf>
     dae:	dc 01       	movw	r26, r24
     db0:	cb 01       	movw	r24, r22
     db2:	9e 01       	movw	r18, r28
     db4:	29 57       	subi	r18, 0x79	; 121
     db6:	3f 4f       	sbci	r19, 0xFF	; 255
     db8:	f9 01       	movw	r30, r18
     dba:	80 83       	st	Z, r24
     dbc:	91 83       	std	Z+1, r25	; 0x01
     dbe:	a2 83       	std	Z+2, r26	; 0x02
     dc0:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     dc2:	8e 01       	movw	r16, r28
     dc4:	05 57       	subi	r16, 0x75	; 117
     dc6:	1f 4f       	sbci	r17, 0xFF	; 255
     dc8:	ce 01       	movw	r24, r28
     dca:	89 57       	subi	r24, 0x79	; 121
     dcc:	9f 4f       	sbci	r25, 0xFF	; 255
     dce:	fc 01       	movw	r30, r24
     dd0:	60 81       	ld	r22, Z
     dd2:	71 81       	ldd	r23, Z+1	; 0x01
     dd4:	82 81       	ldd	r24, Z+2	; 0x02
     dd6:	93 81       	ldd	r25, Z+3	; 0x03
     dd8:	2b ea       	ldi	r18, 0xAB	; 171
     dda:	3a ea       	ldi	r19, 0xAA	; 170
     ddc:	4a ea       	ldi	r20, 0xAA	; 170
     dde:	50 e4       	ldi	r21, 0x40	; 64
     de0:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     de4:	dc 01       	movw	r26, r24
     de6:	cb 01       	movw	r24, r22
     de8:	f8 01       	movw	r30, r16
     dea:	80 83       	st	Z, r24
     dec:	91 83       	std	Z+1, r25	; 0x01
     dee:	a2 83       	std	Z+2, r26	; 0x02
     df0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     df2:	ce 01       	movw	r24, r28
     df4:	85 57       	subi	r24, 0x75	; 117
     df6:	9f 4f       	sbci	r25, 0xFF	; 255
     df8:	11 e0       	ldi	r17, 0x01	; 1
     dfa:	fc 01       	movw	r30, r24
     dfc:	60 81       	ld	r22, Z
     dfe:	71 81       	ldd	r23, Z+1	; 0x01
     e00:	82 81       	ldd	r24, Z+2	; 0x02
     e02:	93 81       	ldd	r25, Z+3	; 0x03
     e04:	20 e0       	ldi	r18, 0x00	; 0
     e06:	30 e0       	ldi	r19, 0x00	; 0
     e08:	40 e8       	ldi	r20, 0x80	; 128
     e0a:	5f e3       	ldi	r21, 0x3F	; 63
     e0c:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
     e10:	88 23       	and	r24, r24
     e12:	0c f0       	brlt	.+2      	; 0xe16 <__stack+0x5b7>
     e14:	10 e0       	ldi	r17, 0x00	; 0
     e16:	11 23       	and	r17, r17
     e18:	39 f0       	breq	.+14     	; 0xe28 <__stack+0x5c9>
		__ticks = 1;
     e1a:	ce 01       	movw	r24, r28
     e1c:	81 57       	subi	r24, 0x71	; 113
     e1e:	9f 4f       	sbci	r25, 0xFF	; 255
     e20:	21 e0       	ldi	r18, 0x01	; 1
     e22:	fc 01       	movw	r30, r24
     e24:	20 83       	st	Z, r18
     e26:	05 c1       	rjmp	.+522    	; 0x1032 <__stack+0x7d3>
	else if (__tmp > 255)
     e28:	ce 01       	movw	r24, r28
     e2a:	85 57       	subi	r24, 0x75	; 117
     e2c:	9f 4f       	sbci	r25, 0xFF	; 255
     e2e:	11 e0       	ldi	r17, 0x01	; 1
     e30:	fc 01       	movw	r30, r24
     e32:	60 81       	ld	r22, Z
     e34:	71 81       	ldd	r23, Z+1	; 0x01
     e36:	82 81       	ldd	r24, Z+2	; 0x02
     e38:	93 81       	ldd	r25, Z+3	; 0x03
     e3a:	20 e0       	ldi	r18, 0x00	; 0
     e3c:	30 e0       	ldi	r19, 0x00	; 0
     e3e:	4f e7       	ldi	r20, 0x7F	; 127
     e40:	53 e4       	ldi	r21, 0x43	; 67
     e42:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
     e46:	18 16       	cp	r1, r24
     e48:	0c f0       	brlt	.+2      	; 0xe4c <__stack+0x5ed>
     e4a:	10 e0       	ldi	r17, 0x00	; 0
     e4c:	11 23       	and	r17, r17
     e4e:	09 f4       	brne	.+2      	; 0xe52 <__stack+0x5f3>
     e50:	df c0       	rjmp	.+446    	; 0x1010 <__stack+0x7b1>
	{
		_delay_ms(__us / 1000.0);
     e52:	ce 01       	movw	r24, r28
     e54:	89 57       	subi	r24, 0x79	; 121
     e56:	9f 4f       	sbci	r25, 0xFF	; 255
     e58:	fc 01       	movw	r30, r24
     e5a:	60 81       	ld	r22, Z
     e5c:	71 81       	ldd	r23, Z+1	; 0x01
     e5e:	82 81       	ldd	r24, Z+2	; 0x02
     e60:	93 81       	ldd	r25, Z+3	; 0x03
     e62:	20 e0       	ldi	r18, 0x00	; 0
     e64:	30 e0       	ldi	r19, 0x00	; 0
     e66:	4a e7       	ldi	r20, 0x7A	; 122
     e68:	54 e4       	ldi	r21, 0x44	; 68
     e6a:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__divsf3>
     e6e:	dc 01       	movw	r26, r24
     e70:	cb 01       	movw	r24, r22
     e72:	9e 01       	movw	r18, r28
     e74:	20 57       	subi	r18, 0x70	; 112
     e76:	3f 4f       	sbci	r19, 0xFF	; 255
     e78:	f9 01       	movw	r30, r18
     e7a:	80 83       	st	Z, r24
     e7c:	91 83       	std	Z+1, r25	; 0x01
     e7e:	a2 83       	std	Z+2, r26	; 0x02
     e80:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     e82:	8e 01       	movw	r16, r28
     e84:	0c 56       	subi	r16, 0x6C	; 108
     e86:	1f 4f       	sbci	r17, 0xFF	; 255
     e88:	ce 01       	movw	r24, r28
     e8a:	80 57       	subi	r24, 0x70	; 112
     e8c:	9f 4f       	sbci	r25, 0xFF	; 255
     e8e:	fc 01       	movw	r30, r24
     e90:	60 81       	ld	r22, Z
     e92:	71 81       	ldd	r23, Z+1	; 0x01
     e94:	82 81       	ldd	r24, Z+2	; 0x02
     e96:	93 81       	ldd	r25, Z+3	; 0x03
     e98:	20 e0       	ldi	r18, 0x00	; 0
     e9a:	30 e0       	ldi	r19, 0x00	; 0
     e9c:	4a e7       	ldi	r20, 0x7A	; 122
     e9e:	55 e4       	ldi	r21, 0x45	; 69
     ea0:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     ea4:	dc 01       	movw	r26, r24
     ea6:	cb 01       	movw	r24, r22
     ea8:	f8 01       	movw	r30, r16
     eaa:	80 83       	st	Z, r24
     eac:	91 83       	std	Z+1, r25	; 0x01
     eae:	a2 83       	std	Z+2, r26	; 0x02
     eb0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     eb2:	ce 01       	movw	r24, r28
     eb4:	8c 56       	subi	r24, 0x6C	; 108
     eb6:	9f 4f       	sbci	r25, 0xFF	; 255
     eb8:	11 e0       	ldi	r17, 0x01	; 1
     eba:	fc 01       	movw	r30, r24
     ebc:	60 81       	ld	r22, Z
     ebe:	71 81       	ldd	r23, Z+1	; 0x01
     ec0:	82 81       	ldd	r24, Z+2	; 0x02
     ec2:	93 81       	ldd	r25, Z+3	; 0x03
     ec4:	20 e0       	ldi	r18, 0x00	; 0
     ec6:	30 e0       	ldi	r19, 0x00	; 0
     ec8:	40 e8       	ldi	r20, 0x80	; 128
     eca:	5f e3       	ldi	r21, 0x3F	; 63
     ecc:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
     ed0:	88 23       	and	r24, r24
     ed2:	0c f0       	brlt	.+2      	; 0xed6 <__stack+0x677>
     ed4:	10 e0       	ldi	r17, 0x00	; 0
     ed6:	11 23       	and	r17, r17
     ed8:	49 f0       	breq	.+18     	; 0xeec <__stack+0x68d>
		__ticks = 1;
     eda:	ce 01       	movw	r24, r28
     edc:	88 56       	subi	r24, 0x68	; 104
     ede:	9f 4f       	sbci	r25, 0xFF	; 255
     ee0:	21 e0       	ldi	r18, 0x01	; 1
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	fc 01       	movw	r30, r24
     ee6:	31 83       	std	Z+1, r19	; 0x01
     ee8:	20 83       	st	Z, r18
     eea:	74 c0       	rjmp	.+232    	; 0xfd4 <__stack+0x775>
	else if (__tmp > 65535)
     eec:	ce 01       	movw	r24, r28
     eee:	8c 56       	subi	r24, 0x6C	; 108
     ef0:	9f 4f       	sbci	r25, 0xFF	; 255
     ef2:	11 e0       	ldi	r17, 0x01	; 1
     ef4:	fc 01       	movw	r30, r24
     ef6:	60 81       	ld	r22, Z
     ef8:	71 81       	ldd	r23, Z+1	; 0x01
     efa:	82 81       	ldd	r24, Z+2	; 0x02
     efc:	93 81       	ldd	r25, Z+3	; 0x03
     efe:	20 e0       	ldi	r18, 0x00	; 0
     f00:	3f ef       	ldi	r19, 0xFF	; 255
     f02:	4f e7       	ldi	r20, 0x7F	; 127
     f04:	57 e4       	ldi	r21, 0x47	; 71
     f06:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
     f0a:	18 16       	cp	r1, r24
     f0c:	0c f0       	brlt	.+2      	; 0xf10 <__stack+0x6b1>
     f0e:	10 e0       	ldi	r17, 0x00	; 0
     f10:	11 23       	and	r17, r17
     f12:	09 f4       	brne	.+2      	; 0xf16 <__stack+0x6b7>
     f14:	4d c0       	rjmp	.+154    	; 0xfb0 <__stack+0x751>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f16:	ce 01       	movw	r24, r28
     f18:	80 57       	subi	r24, 0x70	; 112
     f1a:	9f 4f       	sbci	r25, 0xFF	; 255
     f1c:	fc 01       	movw	r30, r24
     f1e:	60 81       	ld	r22, Z
     f20:	71 81       	ldd	r23, Z+1	; 0x01
     f22:	82 81       	ldd	r24, Z+2	; 0x02
     f24:	93 81       	ldd	r25, Z+3	; 0x03
     f26:	20 e0       	ldi	r18, 0x00	; 0
     f28:	30 e0       	ldi	r19, 0x00	; 0
     f2a:	40 e2       	ldi	r20, 0x20	; 32
     f2c:	51 e4       	ldi	r21, 0x41	; 65
     f2e:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
     f32:	dc 01       	movw	r26, r24
     f34:	cb 01       	movw	r24, r22
     f36:	8e 01       	movw	r16, r28
     f38:	08 56       	subi	r16, 0x68	; 104
     f3a:	1f 4f       	sbci	r17, 0xFF	; 255
     f3c:	bc 01       	movw	r22, r24
     f3e:	cd 01       	movw	r24, r26
     f40:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     f44:	dc 01       	movw	r26, r24
     f46:	cb 01       	movw	r24, r22
     f48:	f8 01       	movw	r30, r16
     f4a:	91 83       	std	Z+1, r25	; 0x01
     f4c:	80 83       	st	Z, r24
     f4e:	27 c0       	rjmp	.+78     	; 0xf9e <__stack+0x73f>
     f50:	ce 01       	movw	r24, r28
     f52:	86 56       	subi	r24, 0x66	; 102
     f54:	9f 4f       	sbci	r25, 0xFF	; 255
     f56:	20 e9       	ldi	r18, 0x90	; 144
     f58:	31 e0       	ldi	r19, 0x01	; 1
     f5a:	fc 01       	movw	r30, r24
     f5c:	31 83       	std	Z+1, r19	; 0x01
     f5e:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     f60:	ce 01       	movw	r24, r28
     f62:	86 56       	subi	r24, 0x66	; 102
     f64:	9f 4f       	sbci	r25, 0xFF	; 255
     f66:	fc 01       	movw	r30, r24
     f68:	80 81       	ld	r24, Z
     f6a:	91 81       	ldd	r25, Z+1	; 0x01
     f6c:	8c 01       	movw	r16, r24
     f6e:	c8 01       	movw	r24, r16
     f70:	01 97       	sbiw	r24, 0x01	; 1
     f72:	f1 f7       	brne	.-4      	; 0xf70 <__stack+0x711>
     f74:	8c 01       	movw	r16, r24
     f76:	ce 01       	movw	r24, r28
     f78:	86 56       	subi	r24, 0x66	; 102
     f7a:	9f 4f       	sbci	r25, 0xFF	; 255
     f7c:	fc 01       	movw	r30, r24
     f7e:	11 83       	std	Z+1, r17	; 0x01
     f80:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f82:	ce 01       	movw	r24, r28
     f84:	88 56       	subi	r24, 0x68	; 104
     f86:	9f 4f       	sbci	r25, 0xFF	; 255
     f88:	9e 01       	movw	r18, r28
     f8a:	28 56       	subi	r18, 0x68	; 104
     f8c:	3f 4f       	sbci	r19, 0xFF	; 255
     f8e:	f9 01       	movw	r30, r18
     f90:	20 81       	ld	r18, Z
     f92:	31 81       	ldd	r19, Z+1	; 0x01
     f94:	21 50       	subi	r18, 0x01	; 1
     f96:	30 40       	sbci	r19, 0x00	; 0
     f98:	fc 01       	movw	r30, r24
     f9a:	31 83       	std	Z+1, r19	; 0x01
     f9c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f9e:	ce 01       	movw	r24, r28
     fa0:	88 56       	subi	r24, 0x68	; 104
     fa2:	9f 4f       	sbci	r25, 0xFF	; 255
     fa4:	fc 01       	movw	r30, r24
     fa6:	80 81       	ld	r24, Z
     fa8:	91 81       	ldd	r25, Z+1	; 0x01
     faa:	00 97       	sbiw	r24, 0x00	; 0
     fac:	89 f6       	brne	.-94     	; 0xf50 <__stack+0x6f1>
     fae:	58 c0       	rjmp	.+176    	; 0x1060 <__stack+0x801>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fb0:	8e 01       	movw	r16, r28
     fb2:	08 56       	subi	r16, 0x68	; 104
     fb4:	1f 4f       	sbci	r17, 0xFF	; 255
     fb6:	ce 01       	movw	r24, r28
     fb8:	8c 56       	subi	r24, 0x6C	; 108
     fba:	9f 4f       	sbci	r25, 0xFF	; 255
     fbc:	fc 01       	movw	r30, r24
     fbe:	60 81       	ld	r22, Z
     fc0:	71 81       	ldd	r23, Z+1	; 0x01
     fc2:	82 81       	ldd	r24, Z+2	; 0x02
     fc4:	93 81       	ldd	r25, Z+3	; 0x03
     fc6:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
     fca:	dc 01       	movw	r26, r24
     fcc:	cb 01       	movw	r24, r22
     fce:	f8 01       	movw	r30, r16
     fd0:	91 83       	std	Z+1, r25	; 0x01
     fd2:	80 83       	st	Z, r24
     fd4:	ce 01       	movw	r24, r28
     fd6:	84 56       	subi	r24, 0x64	; 100
     fd8:	9f 4f       	sbci	r25, 0xFF	; 255
     fda:	9e 01       	movw	r18, r28
     fdc:	28 56       	subi	r18, 0x68	; 104
     fde:	3f 4f       	sbci	r19, 0xFF	; 255
     fe0:	f9 01       	movw	r30, r18
     fe2:	20 81       	ld	r18, Z
     fe4:	31 81       	ldd	r19, Z+1	; 0x01
     fe6:	fc 01       	movw	r30, r24
     fe8:	31 83       	std	Z+1, r19	; 0x01
     fea:	20 83       	st	Z, r18
     fec:	ce 01       	movw	r24, r28
     fee:	84 56       	subi	r24, 0x64	; 100
     ff0:	9f 4f       	sbci	r25, 0xFF	; 255
     ff2:	fc 01       	movw	r30, r24
     ff4:	80 81       	ld	r24, Z
     ff6:	91 81       	ldd	r25, Z+1	; 0x01
     ff8:	8c 01       	movw	r16, r24
     ffa:	c8 01       	movw	r24, r16
     ffc:	01 97       	sbiw	r24, 0x01	; 1
     ffe:	f1 f7       	brne	.-4      	; 0xffc <__stack+0x79d>
    1000:	8c 01       	movw	r16, r24
    1002:	ce 01       	movw	r24, r28
    1004:	84 56       	subi	r24, 0x64	; 100
    1006:	9f 4f       	sbci	r25, 0xFF	; 255
    1008:	fc 01       	movw	r30, r24
    100a:	11 83       	std	Z+1, r17	; 0x01
    100c:	00 83       	st	Z, r16
    100e:	28 c0       	rjmp	.+80     	; 0x1060 <__stack+0x801>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    1010:	8e 01       	movw	r16, r28
    1012:	01 57       	subi	r16, 0x71	; 113
    1014:	1f 4f       	sbci	r17, 0xFF	; 255
    1016:	ce 01       	movw	r24, r28
    1018:	85 57       	subi	r24, 0x75	; 117
    101a:	9f 4f       	sbci	r25, 0xFF	; 255
    101c:	fc 01       	movw	r30, r24
    101e:	60 81       	ld	r22, Z
    1020:	71 81       	ldd	r23, Z+1	; 0x01
    1022:	82 81       	ldd	r24, Z+2	; 0x02
    1024:	93 81       	ldd	r25, Z+3	; 0x03
    1026:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
    102a:	dc 01       	movw	r26, r24
    102c:	cb 01       	movw	r24, r22
    102e:	f8 01       	movw	r30, r16
    1030:	80 83       	st	Z, r24
    1032:	ce 01       	movw	r24, r28
    1034:	82 56       	subi	r24, 0x62	; 98
    1036:	9f 4f       	sbci	r25, 0xFF	; 255
    1038:	9e 01       	movw	r18, r28
    103a:	21 57       	subi	r18, 0x71	; 113
    103c:	3f 4f       	sbci	r19, 0xFF	; 255
    103e:	f9 01       	movw	r30, r18
    1040:	20 81       	ld	r18, Z
    1042:	fc 01       	movw	r30, r24
    1044:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1046:	ce 01       	movw	r24, r28
    1048:	82 56       	subi	r24, 0x62	; 98
    104a:	9f 4f       	sbci	r25, 0xFF	; 255
    104c:	fc 01       	movw	r30, r24
    104e:	80 81       	ld	r24, Z
    1050:	18 2f       	mov	r17, r24
    1052:	1a 95       	dec	r17
    1054:	f1 f7       	brne	.-4      	; 0x1052 <__stack+0x7f3>
    1056:	ce 01       	movw	r24, r28
    1058:	82 56       	subi	r24, 0x62	; 98
    105a:	9f 4f       	sbci	r25, 0xFF	; 255
    105c:	fc 01       	movw	r30, r24
    105e:	10 83       	st	Z, r17

    if (liczba4 != 0)
    1060:	8f 81       	ldd	r24, Y+7	; 0x07
    1062:	98 85       	ldd	r25, Y+8	; 0x08
    1064:	00 97       	sbiw	r24, 0x00	; 0
    1066:	09 f4       	brne	.+2      	; 0x106a <__stack+0x80b>
    1068:	7b c1       	rjmp	.+758    	; 0x1360 <__stack+0xb01>
    {

        wys4;
    106a:	88 e3       	ldi	r24, 0x38	; 56
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	27 ef       	ldi	r18, 0xF7	; 247
    1070:	fc 01       	movw	r30, r24
    1072:	20 83       	st	Z, r18
        puste
    1074:	8b e3       	ldi	r24, 0x3B	; 59
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	2f ef       	ldi	r18, 0xFF	; 255
    107a:	fc 01       	movw	r30, r24
    107c:	20 83       	st	Z, r18
        _delay_us(micro);
    107e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1080:	9e 85       	ldd	r25, Y+14	; 0x0e
    1082:	aa 27       	eor	r26, r26
    1084:	97 fd       	sbrc	r25, 7
    1086:	a0 95       	com	r26
    1088:	ba 2f       	mov	r27, r26
    108a:	bc 01       	movw	r22, r24
    108c:	cd 01       	movw	r24, r26
    108e:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <__floatsisf>
    1092:	dc 01       	movw	r26, r24
    1094:	cb 01       	movw	r24, r22
    1096:	9e 01       	movw	r18, r28
    1098:	21 56       	subi	r18, 0x61	; 97
    109a:	3f 4f       	sbci	r19, 0xFF	; 255
    109c:	f9 01       	movw	r30, r18
    109e:	80 83       	st	Z, r24
    10a0:	91 83       	std	Z+1, r25	; 0x01
    10a2:	a2 83       	std	Z+2, r26	; 0x02
    10a4:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
    10a6:	8e 01       	movw	r16, r28
    10a8:	0d 55       	subi	r16, 0x5D	; 93
    10aa:	1f 4f       	sbci	r17, 0xFF	; 255
    10ac:	ce 01       	movw	r24, r28
    10ae:	81 56       	subi	r24, 0x61	; 97
    10b0:	9f 4f       	sbci	r25, 0xFF	; 255
    10b2:	fc 01       	movw	r30, r24
    10b4:	60 81       	ld	r22, Z
    10b6:	71 81       	ldd	r23, Z+1	; 0x01
    10b8:	82 81       	ldd	r24, Z+2	; 0x02
    10ba:	93 81       	ldd	r25, Z+3	; 0x03
    10bc:	2b ea       	ldi	r18, 0xAB	; 171
    10be:	3a ea       	ldi	r19, 0xAA	; 170
    10c0:	4a ea       	ldi	r20, 0xAA	; 170
    10c2:	50 e4       	ldi	r21, 0x40	; 64
    10c4:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
    10c8:	dc 01       	movw	r26, r24
    10ca:	cb 01       	movw	r24, r22
    10cc:	f8 01       	movw	r30, r16
    10ce:	80 83       	st	Z, r24
    10d0:	91 83       	std	Z+1, r25	; 0x01
    10d2:	a2 83       	std	Z+2, r26	; 0x02
    10d4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    10d6:	ce 01       	movw	r24, r28
    10d8:	8d 55       	subi	r24, 0x5D	; 93
    10da:	9f 4f       	sbci	r25, 0xFF	; 255
    10dc:	11 e0       	ldi	r17, 0x01	; 1
    10de:	fc 01       	movw	r30, r24
    10e0:	60 81       	ld	r22, Z
    10e2:	71 81       	ldd	r23, Z+1	; 0x01
    10e4:	82 81       	ldd	r24, Z+2	; 0x02
    10e6:	93 81       	ldd	r25, Z+3	; 0x03
    10e8:	20 e0       	ldi	r18, 0x00	; 0
    10ea:	30 e0       	ldi	r19, 0x00	; 0
    10ec:	40 e8       	ldi	r20, 0x80	; 128
    10ee:	5f e3       	ldi	r21, 0x3F	; 63
    10f0:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
    10f4:	88 23       	and	r24, r24
    10f6:	0c f0       	brlt	.+2      	; 0x10fa <__stack+0x89b>
    10f8:	10 e0       	ldi	r17, 0x00	; 0
    10fa:	11 23       	and	r17, r17
    10fc:	39 f0       	breq	.+14     	; 0x110c <__stack+0x8ad>
		__ticks = 1;
    10fe:	ce 01       	movw	r24, r28
    1100:	89 55       	subi	r24, 0x59	; 89
    1102:	9f 4f       	sbci	r25, 0xFF	; 255
    1104:	21 e0       	ldi	r18, 0x01	; 1
    1106:	fc 01       	movw	r30, r24
    1108:	20 83       	st	Z, r18
    110a:	05 c1       	rjmp	.+522    	; 0x1316 <__stack+0xab7>
	else if (__tmp > 255)
    110c:	ce 01       	movw	r24, r28
    110e:	8d 55       	subi	r24, 0x5D	; 93
    1110:	9f 4f       	sbci	r25, 0xFF	; 255
    1112:	11 e0       	ldi	r17, 0x01	; 1
    1114:	fc 01       	movw	r30, r24
    1116:	60 81       	ld	r22, Z
    1118:	71 81       	ldd	r23, Z+1	; 0x01
    111a:	82 81       	ldd	r24, Z+2	; 0x02
    111c:	93 81       	ldd	r25, Z+3	; 0x03
    111e:	20 e0       	ldi	r18, 0x00	; 0
    1120:	30 e0       	ldi	r19, 0x00	; 0
    1122:	4f e7       	ldi	r20, 0x7F	; 127
    1124:	53 e4       	ldi	r21, 0x43	; 67
    1126:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
    112a:	18 16       	cp	r1, r24
    112c:	0c f0       	brlt	.+2      	; 0x1130 <__stack+0x8d1>
    112e:	10 e0       	ldi	r17, 0x00	; 0
    1130:	11 23       	and	r17, r17
    1132:	09 f4       	brne	.+2      	; 0x1136 <__stack+0x8d7>
    1134:	df c0       	rjmp	.+446    	; 0x12f4 <__stack+0xa95>
	{
		_delay_ms(__us / 1000.0);
    1136:	ce 01       	movw	r24, r28
    1138:	81 56       	subi	r24, 0x61	; 97
    113a:	9f 4f       	sbci	r25, 0xFF	; 255
    113c:	fc 01       	movw	r30, r24
    113e:	60 81       	ld	r22, Z
    1140:	71 81       	ldd	r23, Z+1	; 0x01
    1142:	82 81       	ldd	r24, Z+2	; 0x02
    1144:	93 81       	ldd	r25, Z+3	; 0x03
    1146:	20 e0       	ldi	r18, 0x00	; 0
    1148:	30 e0       	ldi	r19, 0x00	; 0
    114a:	4a e7       	ldi	r20, 0x7A	; 122
    114c:	54 e4       	ldi	r21, 0x44	; 68
    114e:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__divsf3>
    1152:	dc 01       	movw	r26, r24
    1154:	cb 01       	movw	r24, r22
    1156:	9e 01       	movw	r18, r28
    1158:	28 55       	subi	r18, 0x58	; 88
    115a:	3f 4f       	sbci	r19, 0xFF	; 255
    115c:	f9 01       	movw	r30, r18
    115e:	80 83       	st	Z, r24
    1160:	91 83       	std	Z+1, r25	; 0x01
    1162:	a2 83       	std	Z+2, r26	; 0x02
    1164:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    1166:	8e 01       	movw	r16, r28
    1168:	04 55       	subi	r16, 0x54	; 84
    116a:	1f 4f       	sbci	r17, 0xFF	; 255
    116c:	ce 01       	movw	r24, r28
    116e:	88 55       	subi	r24, 0x58	; 88
    1170:	9f 4f       	sbci	r25, 0xFF	; 255
    1172:	fc 01       	movw	r30, r24
    1174:	60 81       	ld	r22, Z
    1176:	71 81       	ldd	r23, Z+1	; 0x01
    1178:	82 81       	ldd	r24, Z+2	; 0x02
    117a:	93 81       	ldd	r25, Z+3	; 0x03
    117c:	20 e0       	ldi	r18, 0x00	; 0
    117e:	30 e0       	ldi	r19, 0x00	; 0
    1180:	4a e7       	ldi	r20, 0x7A	; 122
    1182:	55 e4       	ldi	r21, 0x45	; 69
    1184:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
    1188:	dc 01       	movw	r26, r24
    118a:	cb 01       	movw	r24, r22
    118c:	f8 01       	movw	r30, r16
    118e:	80 83       	st	Z, r24
    1190:	91 83       	std	Z+1, r25	; 0x01
    1192:	a2 83       	std	Z+2, r26	; 0x02
    1194:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1196:	ce 01       	movw	r24, r28
    1198:	84 55       	subi	r24, 0x54	; 84
    119a:	9f 4f       	sbci	r25, 0xFF	; 255
    119c:	11 e0       	ldi	r17, 0x01	; 1
    119e:	fc 01       	movw	r30, r24
    11a0:	60 81       	ld	r22, Z
    11a2:	71 81       	ldd	r23, Z+1	; 0x01
    11a4:	82 81       	ldd	r24, Z+2	; 0x02
    11a6:	93 81       	ldd	r25, Z+3	; 0x03
    11a8:	20 e0       	ldi	r18, 0x00	; 0
    11aa:	30 e0       	ldi	r19, 0x00	; 0
    11ac:	40 e8       	ldi	r20, 0x80	; 128
    11ae:	5f e3       	ldi	r21, 0x3F	; 63
    11b0:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
    11b4:	88 23       	and	r24, r24
    11b6:	0c f0       	brlt	.+2      	; 0x11ba <__stack+0x95b>
    11b8:	10 e0       	ldi	r17, 0x00	; 0
    11ba:	11 23       	and	r17, r17
    11bc:	49 f0       	breq	.+18     	; 0x11d0 <__stack+0x971>
		__ticks = 1;
    11be:	ce 01       	movw	r24, r28
    11c0:	80 55       	subi	r24, 0x50	; 80
    11c2:	9f 4f       	sbci	r25, 0xFF	; 255
    11c4:	21 e0       	ldi	r18, 0x01	; 1
    11c6:	30 e0       	ldi	r19, 0x00	; 0
    11c8:	fc 01       	movw	r30, r24
    11ca:	31 83       	std	Z+1, r19	; 0x01
    11cc:	20 83       	st	Z, r18
    11ce:	74 c0       	rjmp	.+232    	; 0x12b8 <__stack+0xa59>
	else if (__tmp > 65535)
    11d0:	ce 01       	movw	r24, r28
    11d2:	84 55       	subi	r24, 0x54	; 84
    11d4:	9f 4f       	sbci	r25, 0xFF	; 255
    11d6:	11 e0       	ldi	r17, 0x01	; 1
    11d8:	fc 01       	movw	r30, r24
    11da:	60 81       	ld	r22, Z
    11dc:	71 81       	ldd	r23, Z+1	; 0x01
    11de:	82 81       	ldd	r24, Z+2	; 0x02
    11e0:	93 81       	ldd	r25, Z+3	; 0x03
    11e2:	20 e0       	ldi	r18, 0x00	; 0
    11e4:	3f ef       	ldi	r19, 0xFF	; 255
    11e6:	4f e7       	ldi	r20, 0x7F	; 127
    11e8:	57 e4       	ldi	r21, 0x47	; 71
    11ea:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
    11ee:	18 16       	cp	r1, r24
    11f0:	0c f0       	brlt	.+2      	; 0x11f4 <__stack+0x995>
    11f2:	10 e0       	ldi	r17, 0x00	; 0
    11f4:	11 23       	and	r17, r17
    11f6:	09 f4       	brne	.+2      	; 0x11fa <__stack+0x99b>
    11f8:	4d c0       	rjmp	.+154    	; 0x1294 <__stack+0xa35>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    11fa:	ce 01       	movw	r24, r28
    11fc:	88 55       	subi	r24, 0x58	; 88
    11fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1200:	fc 01       	movw	r30, r24
    1202:	60 81       	ld	r22, Z
    1204:	71 81       	ldd	r23, Z+1	; 0x01
    1206:	82 81       	ldd	r24, Z+2	; 0x02
    1208:	93 81       	ldd	r25, Z+3	; 0x03
    120a:	20 e0       	ldi	r18, 0x00	; 0
    120c:	30 e0       	ldi	r19, 0x00	; 0
    120e:	40 e2       	ldi	r20, 0x20	; 32
    1210:	51 e4       	ldi	r21, 0x41	; 65
    1212:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
    1216:	dc 01       	movw	r26, r24
    1218:	cb 01       	movw	r24, r22
    121a:	8e 01       	movw	r16, r28
    121c:	00 55       	subi	r16, 0x50	; 80
    121e:	1f 4f       	sbci	r17, 0xFF	; 255
    1220:	bc 01       	movw	r22, r24
    1222:	cd 01       	movw	r24, r26
    1224:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
    1228:	dc 01       	movw	r26, r24
    122a:	cb 01       	movw	r24, r22
    122c:	f8 01       	movw	r30, r16
    122e:	91 83       	std	Z+1, r25	; 0x01
    1230:	80 83       	st	Z, r24
    1232:	27 c0       	rjmp	.+78     	; 0x1282 <__stack+0xa23>
    1234:	ce 01       	movw	r24, r28
    1236:	8e 54       	subi	r24, 0x4E	; 78
    1238:	9f 4f       	sbci	r25, 0xFF	; 255
    123a:	20 e9       	ldi	r18, 0x90	; 144
    123c:	31 e0       	ldi	r19, 0x01	; 1
    123e:	fc 01       	movw	r30, r24
    1240:	31 83       	std	Z+1, r19	; 0x01
    1242:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1244:	ce 01       	movw	r24, r28
    1246:	8e 54       	subi	r24, 0x4E	; 78
    1248:	9f 4f       	sbci	r25, 0xFF	; 255
    124a:	fc 01       	movw	r30, r24
    124c:	80 81       	ld	r24, Z
    124e:	91 81       	ldd	r25, Z+1	; 0x01
    1250:	8c 01       	movw	r16, r24
    1252:	c8 01       	movw	r24, r16
    1254:	01 97       	sbiw	r24, 0x01	; 1
    1256:	f1 f7       	brne	.-4      	; 0x1254 <__stack+0x9f5>
    1258:	8c 01       	movw	r16, r24
    125a:	ce 01       	movw	r24, r28
    125c:	8e 54       	subi	r24, 0x4E	; 78
    125e:	9f 4f       	sbci	r25, 0xFF	; 255
    1260:	fc 01       	movw	r30, r24
    1262:	11 83       	std	Z+1, r17	; 0x01
    1264:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1266:	ce 01       	movw	r24, r28
    1268:	80 55       	subi	r24, 0x50	; 80
    126a:	9f 4f       	sbci	r25, 0xFF	; 255
    126c:	9e 01       	movw	r18, r28
    126e:	20 55       	subi	r18, 0x50	; 80
    1270:	3f 4f       	sbci	r19, 0xFF	; 255
    1272:	f9 01       	movw	r30, r18
    1274:	20 81       	ld	r18, Z
    1276:	31 81       	ldd	r19, Z+1	; 0x01
    1278:	21 50       	subi	r18, 0x01	; 1
    127a:	30 40       	sbci	r19, 0x00	; 0
    127c:	fc 01       	movw	r30, r24
    127e:	31 83       	std	Z+1, r19	; 0x01
    1280:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1282:	ce 01       	movw	r24, r28
    1284:	80 55       	subi	r24, 0x50	; 80
    1286:	9f 4f       	sbci	r25, 0xFF	; 255
    1288:	fc 01       	movw	r30, r24
    128a:	80 81       	ld	r24, Z
    128c:	91 81       	ldd	r25, Z+1	; 0x01
    128e:	00 97       	sbiw	r24, 0x00	; 0
    1290:	89 f6       	brne	.-94     	; 0x1234 <__stack+0x9d5>
    1292:	58 c0       	rjmp	.+176    	; 0x1344 <__stack+0xae5>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1294:	8e 01       	movw	r16, r28
    1296:	00 55       	subi	r16, 0x50	; 80
    1298:	1f 4f       	sbci	r17, 0xFF	; 255
    129a:	ce 01       	movw	r24, r28
    129c:	84 55       	subi	r24, 0x54	; 84
    129e:	9f 4f       	sbci	r25, 0xFF	; 255
    12a0:	fc 01       	movw	r30, r24
    12a2:	60 81       	ld	r22, Z
    12a4:	71 81       	ldd	r23, Z+1	; 0x01
    12a6:	82 81       	ldd	r24, Z+2	; 0x02
    12a8:	93 81       	ldd	r25, Z+3	; 0x03
    12aa:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
    12ae:	dc 01       	movw	r26, r24
    12b0:	cb 01       	movw	r24, r22
    12b2:	f8 01       	movw	r30, r16
    12b4:	91 83       	std	Z+1, r25	; 0x01
    12b6:	80 83       	st	Z, r24
    12b8:	ce 01       	movw	r24, r28
    12ba:	8c 54       	subi	r24, 0x4C	; 76
    12bc:	9f 4f       	sbci	r25, 0xFF	; 255
    12be:	9e 01       	movw	r18, r28
    12c0:	20 55       	subi	r18, 0x50	; 80
    12c2:	3f 4f       	sbci	r19, 0xFF	; 255
    12c4:	f9 01       	movw	r30, r18
    12c6:	20 81       	ld	r18, Z
    12c8:	31 81       	ldd	r19, Z+1	; 0x01
    12ca:	fc 01       	movw	r30, r24
    12cc:	31 83       	std	Z+1, r19	; 0x01
    12ce:	20 83       	st	Z, r18
    12d0:	ce 01       	movw	r24, r28
    12d2:	8c 54       	subi	r24, 0x4C	; 76
    12d4:	9f 4f       	sbci	r25, 0xFF	; 255
    12d6:	fc 01       	movw	r30, r24
    12d8:	80 81       	ld	r24, Z
    12da:	91 81       	ldd	r25, Z+1	; 0x01
    12dc:	8c 01       	movw	r16, r24
    12de:	c8 01       	movw	r24, r16
    12e0:	01 97       	sbiw	r24, 0x01	; 1
    12e2:	f1 f7       	brne	.-4      	; 0x12e0 <__stack+0xa81>
    12e4:	8c 01       	movw	r16, r24
    12e6:	ce 01       	movw	r24, r28
    12e8:	8c 54       	subi	r24, 0x4C	; 76
    12ea:	9f 4f       	sbci	r25, 0xFF	; 255
    12ec:	fc 01       	movw	r30, r24
    12ee:	11 83       	std	Z+1, r17	; 0x01
    12f0:	00 83       	st	Z, r16
    12f2:	28 c0       	rjmp	.+80     	; 0x1344 <__stack+0xae5>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    12f4:	8e 01       	movw	r16, r28
    12f6:	09 55       	subi	r16, 0x59	; 89
    12f8:	1f 4f       	sbci	r17, 0xFF	; 255
    12fa:	ce 01       	movw	r24, r28
    12fc:	8d 55       	subi	r24, 0x5D	; 93
    12fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1300:	fc 01       	movw	r30, r24
    1302:	60 81       	ld	r22, Z
    1304:	71 81       	ldd	r23, Z+1	; 0x01
    1306:	82 81       	ldd	r24, Z+2	; 0x02
    1308:	93 81       	ldd	r25, Z+3	; 0x03
    130a:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
    130e:	dc 01       	movw	r26, r24
    1310:	cb 01       	movw	r24, r22
    1312:	f8 01       	movw	r30, r16
    1314:	80 83       	st	Z, r24
    1316:	ce 01       	movw	r24, r28
    1318:	8a 54       	subi	r24, 0x4A	; 74
    131a:	9f 4f       	sbci	r25, 0xFF	; 255
    131c:	9e 01       	movw	r18, r28
    131e:	29 55       	subi	r18, 0x59	; 89
    1320:	3f 4f       	sbci	r19, 0xFF	; 255
    1322:	f9 01       	movw	r30, r18
    1324:	20 81       	ld	r18, Z
    1326:	fc 01       	movw	r30, r24
    1328:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    132a:	ce 01       	movw	r24, r28
    132c:	8a 54       	subi	r24, 0x4A	; 74
    132e:	9f 4f       	sbci	r25, 0xFF	; 255
    1330:	fc 01       	movw	r30, r24
    1332:	80 81       	ld	r24, Z
    1334:	18 2f       	mov	r17, r24
    1336:	1a 95       	dec	r17
    1338:	f1 f7       	brne	.-4      	; 0x1336 <__stack+0xad7>
    133a:	ce 01       	movw	r24, r28
    133c:	8a 54       	subi	r24, 0x4A	; 74
    133e:	9f 4f       	sbci	r25, 0xFF	; 255
    1340:	fc 01       	movw	r30, r24
    1342:	10 83       	st	Z, r17
        wys4;
    1344:	88 e3       	ldi	r24, 0x38	; 56
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	27 ef       	ldi	r18, 0xF7	; 247
    134a:	fc 01       	movw	r30, r24
    134c:	20 83       	st	Z, r18
        PORTA = cyfra(liczba4);
    134e:	0b e3       	ldi	r16, 0x3B	; 59
    1350:	10 e0       	ldi	r17, 0x00	; 0
    1352:	8f 81       	ldd	r24, Y+7	; 0x07
    1354:	98 85       	ldd	r25, Y+8	; 0x08
    1356:	0e 94 4c 0b 	call	0x1698	; 0x1698 <cyfra>
    135a:	f8 01       	movw	r30, r16
    135c:	80 83       	st	Z, r24
    135e:	0a c0       	rjmp	.+20     	; 0x1374 <__stack+0xb15>


    }
    else
    {
    puste
    1360:	8b e3       	ldi	r24, 0x3B	; 59
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	2f ef       	ldi	r18, 0xFF	; 255
    1366:	fc 01       	movw	r30, r24
    1368:	20 83       	st	Z, r18
        nic;
    136a:	88 e3       	ldi	r24, 0x38	; 56
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	2f ef       	ldi	r18, 0xFF	; 255
    1370:	fc 01       	movw	r30, r24
    1372:	20 83       	st	Z, r18

    }
 _delay_us(short_deley);
    1374:	8b 85       	ldd	r24, Y+11	; 0x0b
    1376:	9c 85       	ldd	r25, Y+12	; 0x0c
    1378:	aa 27       	eor	r26, r26
    137a:	97 fd       	sbrc	r25, 7
    137c:	a0 95       	com	r26
    137e:	ba 2f       	mov	r27, r26
    1380:	bc 01       	movw	r22, r24
    1382:	cd 01       	movw	r24, r26
    1384:	0e 94 af 0f 	call	0x1f5e	; 0x1f5e <__floatsisf>
    1388:	dc 01       	movw	r26, r24
    138a:	cb 01       	movw	r24, r22
    138c:	9e 01       	movw	r18, r28
    138e:	29 54       	subi	r18, 0x49	; 73
    1390:	3f 4f       	sbci	r19, 0xFF	; 255
    1392:	f9 01       	movw	r30, r18
    1394:	80 83       	st	Z, r24
    1396:	91 83       	std	Z+1, r25	; 0x01
    1398:	a2 83       	std	Z+2, r26	; 0x02
    139a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
    139c:	8e 01       	movw	r16, r28
    139e:	05 54       	subi	r16, 0x45	; 69
    13a0:	1f 4f       	sbci	r17, 0xFF	; 255
    13a2:	ce 01       	movw	r24, r28
    13a4:	89 54       	subi	r24, 0x49	; 73
    13a6:	9f 4f       	sbci	r25, 0xFF	; 255
    13a8:	fc 01       	movw	r30, r24
    13aa:	60 81       	ld	r22, Z
    13ac:	71 81       	ldd	r23, Z+1	; 0x01
    13ae:	82 81       	ldd	r24, Z+2	; 0x02
    13b0:	93 81       	ldd	r25, Z+3	; 0x03
    13b2:	2b ea       	ldi	r18, 0xAB	; 171
    13b4:	3a ea       	ldi	r19, 0xAA	; 170
    13b6:	4a ea       	ldi	r20, 0xAA	; 170
    13b8:	50 e4       	ldi	r21, 0x40	; 64
    13ba:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
    13be:	dc 01       	movw	r26, r24
    13c0:	cb 01       	movw	r24, r22
    13c2:	f8 01       	movw	r30, r16
    13c4:	80 83       	st	Z, r24
    13c6:	91 83       	std	Z+1, r25	; 0x01
    13c8:	a2 83       	std	Z+2, r26	; 0x02
    13ca:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13cc:	ce 01       	movw	r24, r28
    13ce:	85 54       	subi	r24, 0x45	; 69
    13d0:	9f 4f       	sbci	r25, 0xFF	; 255
    13d2:	11 e0       	ldi	r17, 0x01	; 1
    13d4:	fc 01       	movw	r30, r24
    13d6:	60 81       	ld	r22, Z
    13d8:	71 81       	ldd	r23, Z+1	; 0x01
    13da:	82 81       	ldd	r24, Z+2	; 0x02
    13dc:	93 81       	ldd	r25, Z+3	; 0x03
    13de:	20 e0       	ldi	r18, 0x00	; 0
    13e0:	30 e0       	ldi	r19, 0x00	; 0
    13e2:	40 e8       	ldi	r20, 0x80	; 128
    13e4:	5f e3       	ldi	r21, 0x3F	; 63
    13e6:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
    13ea:	88 23       	and	r24, r24
    13ec:	0c f0       	brlt	.+2      	; 0x13f0 <__stack+0xb91>
    13ee:	10 e0       	ldi	r17, 0x00	; 0
    13f0:	11 23       	and	r17, r17
    13f2:	39 f0       	breq	.+14     	; 0x1402 <__stack+0xba3>
		__ticks = 1;
    13f4:	ce 01       	movw	r24, r28
    13f6:	81 54       	subi	r24, 0x41	; 65
    13f8:	9f 4f       	sbci	r25, 0xFF	; 255
    13fa:	21 e0       	ldi	r18, 0x01	; 1
    13fc:	fc 01       	movw	r30, r24
    13fe:	20 83       	st	Z, r18
    1400:	05 c1       	rjmp	.+522    	; 0x160c <__stack+0xdad>
	else if (__tmp > 255)
    1402:	ce 01       	movw	r24, r28
    1404:	85 54       	subi	r24, 0x45	; 69
    1406:	9f 4f       	sbci	r25, 0xFF	; 255
    1408:	11 e0       	ldi	r17, 0x01	; 1
    140a:	fc 01       	movw	r30, r24
    140c:	60 81       	ld	r22, Z
    140e:	71 81       	ldd	r23, Z+1	; 0x01
    1410:	82 81       	ldd	r24, Z+2	; 0x02
    1412:	93 81       	ldd	r25, Z+3	; 0x03
    1414:	20 e0       	ldi	r18, 0x00	; 0
    1416:	30 e0       	ldi	r19, 0x00	; 0
    1418:	4f e7       	ldi	r20, 0x7F	; 127
    141a:	53 e4       	ldi	r21, 0x43	; 67
    141c:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
    1420:	18 16       	cp	r1, r24
    1422:	0c f0       	brlt	.+2      	; 0x1426 <__stack+0xbc7>
    1424:	10 e0       	ldi	r17, 0x00	; 0
    1426:	11 23       	and	r17, r17
    1428:	09 f4       	brne	.+2      	; 0x142c <__stack+0xbcd>
    142a:	df c0       	rjmp	.+446    	; 0x15ea <__stack+0xd8b>
	{
		_delay_ms(__us / 1000.0);
    142c:	ce 01       	movw	r24, r28
    142e:	89 54       	subi	r24, 0x49	; 73
    1430:	9f 4f       	sbci	r25, 0xFF	; 255
    1432:	fc 01       	movw	r30, r24
    1434:	60 81       	ld	r22, Z
    1436:	71 81       	ldd	r23, Z+1	; 0x01
    1438:	82 81       	ldd	r24, Z+2	; 0x02
    143a:	93 81       	ldd	r25, Z+3	; 0x03
    143c:	20 e0       	ldi	r18, 0x00	; 0
    143e:	30 e0       	ldi	r19, 0x00	; 0
    1440:	4a e7       	ldi	r20, 0x7A	; 122
    1442:	54 e4       	ldi	r21, 0x44	; 68
    1444:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <__divsf3>
    1448:	dc 01       	movw	r26, r24
    144a:	cb 01       	movw	r24, r22
    144c:	9e 01       	movw	r18, r28
    144e:	20 54       	subi	r18, 0x40	; 64
    1450:	3f 4f       	sbci	r19, 0xFF	; 255
    1452:	f9 01       	movw	r30, r18
    1454:	80 83       	st	Z, r24
    1456:	91 83       	std	Z+1, r25	; 0x01
    1458:	a2 83       	std	Z+2, r26	; 0x02
    145a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    145c:	8e 01       	movw	r16, r28
    145e:	0c 53       	subi	r16, 0x3C	; 60
    1460:	1f 4f       	sbci	r17, 0xFF	; 255
    1462:	ce 01       	movw	r24, r28
    1464:	80 54       	subi	r24, 0x40	; 64
    1466:	9f 4f       	sbci	r25, 0xFF	; 255
    1468:	fc 01       	movw	r30, r24
    146a:	60 81       	ld	r22, Z
    146c:	71 81       	ldd	r23, Z+1	; 0x01
    146e:	82 81       	ldd	r24, Z+2	; 0x02
    1470:	93 81       	ldd	r25, Z+3	; 0x03
    1472:	20 e0       	ldi	r18, 0x00	; 0
    1474:	30 e0       	ldi	r19, 0x00	; 0
    1476:	4a e7       	ldi	r20, 0x7A	; 122
    1478:	55 e4       	ldi	r21, 0x45	; 69
    147a:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
    147e:	dc 01       	movw	r26, r24
    1480:	cb 01       	movw	r24, r22
    1482:	f8 01       	movw	r30, r16
    1484:	80 83       	st	Z, r24
    1486:	91 83       	std	Z+1, r25	; 0x01
    1488:	a2 83       	std	Z+2, r26	; 0x02
    148a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    148c:	ce 01       	movw	r24, r28
    148e:	8c 53       	subi	r24, 0x3C	; 60
    1490:	9f 4f       	sbci	r25, 0xFF	; 255
    1492:	11 e0       	ldi	r17, 0x01	; 1
    1494:	fc 01       	movw	r30, r24
    1496:	60 81       	ld	r22, Z
    1498:	71 81       	ldd	r23, Z+1	; 0x01
    149a:	82 81       	ldd	r24, Z+2	; 0x02
    149c:	93 81       	ldd	r25, Z+3	; 0x03
    149e:	20 e0       	ldi	r18, 0x00	; 0
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	40 e8       	ldi	r20, 0x80	; 128
    14a4:	5f e3       	ldi	r21, 0x3F	; 63
    14a6:	0e 94 7f 0f 	call	0x1efe	; 0x1efe <__ltsf2>
    14aa:	88 23       	and	r24, r24
    14ac:	0c f0       	brlt	.+2      	; 0x14b0 <__stack+0xc51>
    14ae:	10 e0       	ldi	r17, 0x00	; 0
    14b0:	11 23       	and	r17, r17
    14b2:	49 f0       	breq	.+18     	; 0x14c6 <__stack+0xc67>
		__ticks = 1;
    14b4:	ce 01       	movw	r24, r28
    14b6:	88 53       	subi	r24, 0x38	; 56
    14b8:	9f 4f       	sbci	r25, 0xFF	; 255
    14ba:	21 e0       	ldi	r18, 0x01	; 1
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	fc 01       	movw	r30, r24
    14c0:	31 83       	std	Z+1, r19	; 0x01
    14c2:	20 83       	st	Z, r18
    14c4:	74 c0       	rjmp	.+232    	; 0x15ae <__stack+0xd4f>
	else if (__tmp > 65535)
    14c6:	ce 01       	movw	r24, r28
    14c8:	8c 53       	subi	r24, 0x3C	; 60
    14ca:	9f 4f       	sbci	r25, 0xFF	; 255
    14cc:	11 e0       	ldi	r17, 0x01	; 1
    14ce:	fc 01       	movw	r30, r24
    14d0:	60 81       	ld	r22, Z
    14d2:	71 81       	ldd	r23, Z+1	; 0x01
    14d4:	82 81       	ldd	r24, Z+2	; 0x02
    14d6:	93 81       	ldd	r25, Z+3	; 0x03
    14d8:	20 e0       	ldi	r18, 0x00	; 0
    14da:	3f ef       	ldi	r19, 0xFF	; 255
    14dc:	4f e7       	ldi	r20, 0x7F	; 127
    14de:	57 e4       	ldi	r21, 0x47	; 71
    14e0:	0e 94 1f 0f 	call	0x1e3e	; 0x1e3e <__gtsf2>
    14e4:	18 16       	cp	r1, r24
    14e6:	0c f0       	brlt	.+2      	; 0x14ea <__stack+0xc8b>
    14e8:	10 e0       	ldi	r17, 0x00	; 0
    14ea:	11 23       	and	r17, r17
    14ec:	09 f4       	brne	.+2      	; 0x14f0 <__stack+0xc91>
    14ee:	4d c0       	rjmp	.+154    	; 0x158a <__stack+0xd2b>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14f0:	ce 01       	movw	r24, r28
    14f2:	80 54       	subi	r24, 0x40	; 64
    14f4:	9f 4f       	sbci	r25, 0xFF	; 255
    14f6:	fc 01       	movw	r30, r24
    14f8:	60 81       	ld	r22, Z
    14fa:	71 81       	ldd	r23, Z+1	; 0x01
    14fc:	82 81       	ldd	r24, Z+2	; 0x02
    14fe:	93 81       	ldd	r25, Z+3	; 0x03
    1500:	20 e0       	ldi	r18, 0x00	; 0
    1502:	30 e0       	ldi	r19, 0x00	; 0
    1504:	40 e2       	ldi	r20, 0x20	; 32
    1506:	51 e4       	ldi	r21, 0x41	; 65
    1508:	0e 94 77 0d 	call	0x1aee	; 0x1aee <__mulsf3>
    150c:	dc 01       	movw	r26, r24
    150e:	cb 01       	movw	r24, r22
    1510:	8e 01       	movw	r16, r28
    1512:	08 53       	subi	r16, 0x38	; 56
    1514:	1f 4f       	sbci	r17, 0xFF	; 255
    1516:	bc 01       	movw	r22, r24
    1518:	cd 01       	movw	r24, r26
    151a:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
    151e:	dc 01       	movw	r26, r24
    1520:	cb 01       	movw	r24, r22
    1522:	f8 01       	movw	r30, r16
    1524:	91 83       	std	Z+1, r25	; 0x01
    1526:	80 83       	st	Z, r24
    1528:	27 c0       	rjmp	.+78     	; 0x1578 <__stack+0xd19>
    152a:	ce 01       	movw	r24, r28
    152c:	86 53       	subi	r24, 0x36	; 54
    152e:	9f 4f       	sbci	r25, 0xFF	; 255
    1530:	20 e9       	ldi	r18, 0x90	; 144
    1532:	31 e0       	ldi	r19, 0x01	; 1
    1534:	fc 01       	movw	r30, r24
    1536:	31 83       	std	Z+1, r19	; 0x01
    1538:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    153a:	ce 01       	movw	r24, r28
    153c:	86 53       	subi	r24, 0x36	; 54
    153e:	9f 4f       	sbci	r25, 0xFF	; 255
    1540:	fc 01       	movw	r30, r24
    1542:	80 81       	ld	r24, Z
    1544:	91 81       	ldd	r25, Z+1	; 0x01
    1546:	8c 01       	movw	r16, r24
    1548:	c8 01       	movw	r24, r16
    154a:	01 97       	sbiw	r24, 0x01	; 1
    154c:	f1 f7       	brne	.-4      	; 0x154a <__stack+0xceb>
    154e:	8c 01       	movw	r16, r24
    1550:	ce 01       	movw	r24, r28
    1552:	86 53       	subi	r24, 0x36	; 54
    1554:	9f 4f       	sbci	r25, 0xFF	; 255
    1556:	fc 01       	movw	r30, r24
    1558:	11 83       	std	Z+1, r17	; 0x01
    155a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    155c:	ce 01       	movw	r24, r28
    155e:	88 53       	subi	r24, 0x38	; 56
    1560:	9f 4f       	sbci	r25, 0xFF	; 255
    1562:	9e 01       	movw	r18, r28
    1564:	28 53       	subi	r18, 0x38	; 56
    1566:	3f 4f       	sbci	r19, 0xFF	; 255
    1568:	f9 01       	movw	r30, r18
    156a:	20 81       	ld	r18, Z
    156c:	31 81       	ldd	r19, Z+1	; 0x01
    156e:	21 50       	subi	r18, 0x01	; 1
    1570:	30 40       	sbci	r19, 0x00	; 0
    1572:	fc 01       	movw	r30, r24
    1574:	31 83       	std	Z+1, r19	; 0x01
    1576:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1578:	ce 01       	movw	r24, r28
    157a:	88 53       	subi	r24, 0x38	; 56
    157c:	9f 4f       	sbci	r25, 0xFF	; 255
    157e:	fc 01       	movw	r30, r24
    1580:	80 81       	ld	r24, Z
    1582:	91 81       	ldd	r25, Z+1	; 0x01
    1584:	00 97       	sbiw	r24, 0x00	; 0
    1586:	89 f6       	brne	.-94     	; 0x152a <__stack+0xccb>
    1588:	58 c0       	rjmp	.+176    	; 0x163a <__stack+0xddb>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    158a:	8e 01       	movw	r16, r28
    158c:	08 53       	subi	r16, 0x38	; 56
    158e:	1f 4f       	sbci	r17, 0xFF	; 255
    1590:	ce 01       	movw	r24, r28
    1592:	8c 53       	subi	r24, 0x3C	; 60
    1594:	9f 4f       	sbci	r25, 0xFF	; 255
    1596:	fc 01       	movw	r30, r24
    1598:	60 81       	ld	r22, Z
    159a:	71 81       	ldd	r23, Z+1	; 0x01
    159c:	82 81       	ldd	r24, Z+2	; 0x02
    159e:	93 81       	ldd	r25, Z+3	; 0x03
    15a0:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
    15a4:	dc 01       	movw	r26, r24
    15a6:	cb 01       	movw	r24, r22
    15a8:	f8 01       	movw	r30, r16
    15aa:	91 83       	std	Z+1, r25	; 0x01
    15ac:	80 83       	st	Z, r24
    15ae:	ce 01       	movw	r24, r28
    15b0:	84 53       	subi	r24, 0x34	; 52
    15b2:	9f 4f       	sbci	r25, 0xFF	; 255
    15b4:	9e 01       	movw	r18, r28
    15b6:	28 53       	subi	r18, 0x38	; 56
    15b8:	3f 4f       	sbci	r19, 0xFF	; 255
    15ba:	f9 01       	movw	r30, r18
    15bc:	20 81       	ld	r18, Z
    15be:	31 81       	ldd	r19, Z+1	; 0x01
    15c0:	fc 01       	movw	r30, r24
    15c2:	31 83       	std	Z+1, r19	; 0x01
    15c4:	20 83       	st	Z, r18
    15c6:	ce 01       	movw	r24, r28
    15c8:	84 53       	subi	r24, 0x34	; 52
    15ca:	9f 4f       	sbci	r25, 0xFF	; 255
    15cc:	fc 01       	movw	r30, r24
    15ce:	80 81       	ld	r24, Z
    15d0:	91 81       	ldd	r25, Z+1	; 0x01
    15d2:	8c 01       	movw	r16, r24
    15d4:	c8 01       	movw	r24, r16
    15d6:	01 97       	sbiw	r24, 0x01	; 1
    15d8:	f1 f7       	brne	.-4      	; 0x15d6 <__stack+0xd77>
    15da:	8c 01       	movw	r16, r24
    15dc:	ce 01       	movw	r24, r28
    15de:	84 53       	subi	r24, 0x34	; 52
    15e0:	9f 4f       	sbci	r25, 0xFF	; 255
    15e2:	fc 01       	movw	r30, r24
    15e4:	11 83       	std	Z+1, r17	; 0x01
    15e6:	00 83       	st	Z, r16
    15e8:	28 c0       	rjmp	.+80     	; 0x163a <__stack+0xddb>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    15ea:	8e 01       	movw	r16, r28
    15ec:	01 54       	subi	r16, 0x41	; 65
    15ee:	1f 4f       	sbci	r17, 0xFF	; 255
    15f0:	ce 01       	movw	r24, r28
    15f2:	85 54       	subi	r24, 0x45	; 69
    15f4:	9f 4f       	sbci	r25, 0xFF	; 255
    15f6:	fc 01       	movw	r30, r24
    15f8:	60 81       	ld	r22, Z
    15fa:	71 81       	ldd	r23, Z+1	; 0x01
    15fc:	82 81       	ldd	r24, Z+2	; 0x02
    15fe:	93 81       	ldd	r25, Z+3	; 0x03
    1600:	0e 94 a3 0b 	call	0x1746	; 0x1746 <__fixunssfsi>
    1604:	dc 01       	movw	r26, r24
    1606:	cb 01       	movw	r24, r22
    1608:	f8 01       	movw	r30, r16
    160a:	80 83       	st	Z, r24
    160c:	ce 01       	movw	r24, r28
    160e:	82 53       	subi	r24, 0x32	; 50
    1610:	9f 4f       	sbci	r25, 0xFF	; 255
    1612:	9e 01       	movw	r18, r28
    1614:	21 54       	subi	r18, 0x41	; 65
    1616:	3f 4f       	sbci	r19, 0xFF	; 255
    1618:	f9 01       	movw	r30, r18
    161a:	20 81       	ld	r18, Z
    161c:	fc 01       	movw	r30, r24
    161e:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1620:	ce 01       	movw	r24, r28
    1622:	82 53       	subi	r24, 0x32	; 50
    1624:	9f 4f       	sbci	r25, 0xFF	; 255
    1626:	fc 01       	movw	r30, r24
    1628:	80 81       	ld	r24, Z
    162a:	18 2f       	mov	r17, r24
    162c:	1a 95       	dec	r17
    162e:	f1 f7       	brne	.-4      	; 0x162c <__stack+0xdcd>
    1630:	ce 01       	movw	r24, r28
    1632:	82 53       	subi	r24, 0x32	; 50
    1634:	9f 4f       	sbci	r25, 0xFF	; 255
    1636:	fc 01       	movw	r30, r24
    1638:	10 83       	st	Z, r17

// dodawanie 1 i zerowanie pod koniec

{
    if (liczba1 == 10)
    163a:	89 81       	ldd	r24, Y+1	; 0x01
    163c:	9a 81       	ldd	r25, Y+2	; 0x02
    163e:	8a 30       	cpi	r24, 0x0A	; 10
    1640:	91 05       	cpc	r25, r1
    1642:	39 f4       	brne	.+14     	; 0x1652 <__stack+0xdf3>
    {

        liczba1 = 0;
    1644:	1a 82       	std	Y+2, r1	; 0x02
    1646:	19 82       	std	Y+1, r1	; 0x01
        liczba2++;
    1648:	8b 81       	ldd	r24, Y+3	; 0x03
    164a:	9c 81       	ldd	r25, Y+4	; 0x04
    164c:	01 96       	adiw	r24, 0x01	; 1
    164e:	9c 83       	std	Y+4, r25	; 0x04
    1650:	8b 83       	std	Y+3, r24	; 0x03

    }

    if (liczba2 == 10)
    1652:	8b 81       	ldd	r24, Y+3	; 0x03
    1654:	9c 81       	ldd	r25, Y+4	; 0x04
    1656:	8a 30       	cpi	r24, 0x0A	; 10
    1658:	91 05       	cpc	r25, r1
    165a:	39 f4       	brne	.+14     	; 0x166a <__stack+0xe0b>
    {

        liczba2 = 0;
    165c:	1c 82       	std	Y+4, r1	; 0x04
    165e:	1b 82       	std	Y+3, r1	; 0x03
        liczba3++;
    1660:	8d 81       	ldd	r24, Y+5	; 0x05
    1662:	9e 81       	ldd	r25, Y+6	; 0x06
    1664:	01 96       	adiw	r24, 0x01	; 1
    1666:	9e 83       	std	Y+6, r25	; 0x06
    1668:	8d 83       	std	Y+5, r24	; 0x05

    }

    if (liczba3 == 10)
    166a:	8d 81       	ldd	r24, Y+5	; 0x05
    166c:	9e 81       	ldd	r25, Y+6	; 0x06
    166e:	8a 30       	cpi	r24, 0x0A	; 10
    1670:	91 05       	cpc	r25, r1
    1672:	39 f4       	brne	.+14     	; 0x1682 <__stack+0xe23>
    {

        liczba3 = 0;
    1674:	1e 82       	std	Y+6, r1	; 0x06
    1676:	1d 82       	std	Y+5, r1	; 0x05
        liczba4++;
    1678:	8f 81       	ldd	r24, Y+7	; 0x07
    167a:	98 85       	ldd	r25, Y+8	; 0x08
    167c:	01 96       	adiw	r24, 0x01	; 1
    167e:	98 87       	std	Y+8, r25	; 0x08
    1680:	8f 83       	std	Y+7, r24	; 0x07

    }

    if (liczba4 == 10)
    1682:	8f 81       	ldd	r24, Y+7	; 0x07
    1684:	98 85       	ldd	r25, Y+8	; 0x08
    1686:	8a 30       	cpi	r24, 0x0A	; 10
    1688:	91 05       	cpc	r25, r1
    168a:	11 f0       	breq	.+4      	; 0x1690 <__stack+0xe31>
    168c:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <main+0x21e>
    {

        liczba4 = 0;
    1690:	18 86       	std	Y+8, r1	; 0x08
    1692:	1f 82       	std	Y+7, r1	; 0x07

    }

}

    };
    1694:	0c 94 51 01 	jmp	0x2a2	; 0x2a2 <main+0x220>

00001698 <cyfra>:




int cyfra(int _cyfra)
{
    1698:	df 93       	push	r29
    169a:	cf 93       	push	r28
    169c:	00 d0       	rcall	.+0      	; 0x169e <cyfra+0x6>
    169e:	cd b7       	in	r28, 0x3d	; 61
    16a0:	de b7       	in	r29, 0x3e	; 62
    16a2:	9a 83       	std	Y+2, r25	; 0x02
    16a4:	89 83       	std	Y+1, r24	; 0x01

		switch(_cyfra)
    16a6:	89 81       	ldd	r24, Y+1	; 0x01
    16a8:	9a 81       	ldd	r25, Y+2	; 0x02
    16aa:	84 30       	cpi	r24, 0x04	; 4
    16ac:	91 05       	cpc	r25, r1
    16ae:	99 f1       	breq	.+102    	; 0x1716 <cyfra+0x7e>
    16b0:	85 30       	cpi	r24, 0x05	; 5
    16b2:	91 05       	cpc	r25, r1
    16b4:	84 f4       	brge	.+32     	; 0x16d6 <cyfra+0x3e>
    16b6:	81 30       	cpi	r24, 0x01	; 1
    16b8:	91 05       	cpc	r25, r1
    16ba:	21 f1       	breq	.+72     	; 0x1704 <cyfra+0x6c>
    16bc:	82 30       	cpi	r24, 0x02	; 2
    16be:	91 05       	cpc	r25, r1
    16c0:	1c f4       	brge	.+6      	; 0x16c8 <cyfra+0x30>
    16c2:	00 97       	sbiw	r24, 0x00	; 0
    16c4:	e1 f0       	breq	.+56     	; 0x16fe <cyfra+0x66>
    16c6:	39 c0       	rjmp	.+114    	; 0x173a <cyfra+0xa2>
    16c8:	82 30       	cpi	r24, 0x02	; 2
    16ca:	91 05       	cpc	r25, r1
    16cc:	f1 f0       	breq	.+60     	; 0x170a <cyfra+0x72>
    16ce:	83 30       	cpi	r24, 0x03	; 3
    16d0:	91 05       	cpc	r25, r1
    16d2:	f1 f0       	breq	.+60     	; 0x1710 <cyfra+0x78>
    16d4:	32 c0       	rjmp	.+100    	; 0x173a <cyfra+0xa2>
    16d6:	87 30       	cpi	r24, 0x07	; 7
    16d8:	91 05       	cpc	r25, r1
    16da:	31 f1       	breq	.+76     	; 0x1728 <cyfra+0x90>
    16dc:	88 30       	cpi	r24, 0x08	; 8
    16de:	91 05       	cpc	r25, r1
    16e0:	3c f4       	brge	.+14     	; 0x16f0 <cyfra+0x58>
    16e2:	85 30       	cpi	r24, 0x05	; 5
    16e4:	91 05       	cpc	r25, r1
    16e6:	d1 f0       	breq	.+52     	; 0x171c <cyfra+0x84>
    16e8:	86 30       	cpi	r24, 0x06	; 6
    16ea:	91 05       	cpc	r25, r1
    16ec:	d1 f0       	breq	.+52     	; 0x1722 <cyfra+0x8a>
    16ee:	25 c0       	rjmp	.+74     	; 0x173a <cyfra+0xa2>
    16f0:	88 30       	cpi	r24, 0x08	; 8
    16f2:	91 05       	cpc	r25, r1
    16f4:	e1 f0       	breq	.+56     	; 0x172e <cyfra+0x96>
    16f6:	89 30       	cpi	r24, 0x09	; 9
    16f8:	91 05       	cpc	r25, r1
    16fa:	e1 f0       	breq	.+56     	; 0x1734 <cyfra+0x9c>
    16fc:	1e c0       	rjmp	.+60     	; 0x173a <cyfra+0xa2>
		{
		case 0:
		return 0b11000000; //0
    16fe:	80 ec       	ldi	r24, 0xC0	; 192
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	1c c0       	rjmp	.+56     	; 0x173c <cyfra+0xa4>

		case 1:
		return 0b11111001; //1
    1704:	89 ef       	ldi	r24, 0xF9	; 249
    1706:	90 e0       	ldi	r25, 0x00	; 0
    1708:	19 c0       	rjmp	.+50     	; 0x173c <cyfra+0xa4>

		case 2:
		return 0b10100100; //2
    170a:	84 ea       	ldi	r24, 0xA4	; 164
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	16 c0       	rjmp	.+44     	; 0x173c <cyfra+0xa4>

		case 3:
		return 0b10110000; //3
    1710:	80 eb       	ldi	r24, 0xB0	; 176
    1712:	90 e0       	ldi	r25, 0x00	; 0
    1714:	13 c0       	rjmp	.+38     	; 0x173c <cyfra+0xa4>

		case 4:
		return 0b10011001; //4
    1716:	89 e9       	ldi	r24, 0x99	; 153
    1718:	90 e0       	ldi	r25, 0x00	; 0
    171a:	10 c0       	rjmp	.+32     	; 0x173c <cyfra+0xa4>

		case 5:
		return 0b10010010; //5
    171c:	82 e9       	ldi	r24, 0x92	; 146
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	0d c0       	rjmp	.+26     	; 0x173c <cyfra+0xa4>

		case 6:
		return 0b10000010; //6
    1722:	82 e8       	ldi	r24, 0x82	; 130
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	0a c0       	rjmp	.+20     	; 0x173c <cyfra+0xa4>

		case 7:
		return 0b11111000; //7
    1728:	88 ef       	ldi	r24, 0xF8	; 248
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	07 c0       	rjmp	.+14     	; 0x173c <cyfra+0xa4>

		case 8:
		return 0b10000000; //8
    172e:	80 e8       	ldi	r24, 0x80	; 128
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	04 c0       	rjmp	.+8      	; 0x173c <cyfra+0xa4>

		case 9:
		return 0b10010000; //9
    1734:	80 e9       	ldi	r24, 0x90	; 144
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	01 c0       	rjmp	.+2      	; 0x173c <cyfra+0xa4>
    173a:	00 c0       	rjmp	.+0      	; 0x173c <cyfra+0xa4>



		}
}
    173c:	0f 90       	pop	r0
    173e:	0f 90       	pop	r0
    1740:	cf 91       	pop	r28
    1742:	df 91       	pop	r29
    1744:	08 95       	ret

00001746 <__fixunssfsi>:
    1746:	ef 92       	push	r14
    1748:	ff 92       	push	r15
    174a:	0f 93       	push	r16
    174c:	1f 93       	push	r17
    174e:	7b 01       	movw	r14, r22
    1750:	8c 01       	movw	r16, r24
    1752:	20 e0       	ldi	r18, 0x00	; 0
    1754:	30 e0       	ldi	r19, 0x00	; 0
    1756:	40 e0       	ldi	r20, 0x00	; 0
    1758:	5f e4       	ldi	r21, 0x4F	; 79
    175a:	0e 94 4f 0f 	call	0x1e9e	; 0x1e9e <__gesf2>
    175e:	87 fd       	sbrc	r24, 7
    1760:	11 c0       	rjmp	.+34     	; 0x1784 <__fixunssfsi+0x3e>
    1762:	c8 01       	movw	r24, r16
    1764:	b7 01       	movw	r22, r14
    1766:	20 e0       	ldi	r18, 0x00	; 0
    1768:	30 e0       	ldi	r19, 0x00	; 0
    176a:	40 e0       	ldi	r20, 0x00	; 0
    176c:	5f e4       	ldi	r21, 0x4F	; 79
    176e:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__subsf3>
    1772:	0e 94 0f 10 	call	0x201e	; 0x201e <__fixsfsi>
    1776:	9b 01       	movw	r18, r22
    1778:	ac 01       	movw	r20, r24
    177a:	20 50       	subi	r18, 0x00	; 0
    177c:	30 40       	sbci	r19, 0x00	; 0
    177e:	40 40       	sbci	r20, 0x00	; 0
    1780:	50 48       	sbci	r21, 0x80	; 128
    1782:	06 c0       	rjmp	.+12     	; 0x1790 <__fixunssfsi+0x4a>
    1784:	c8 01       	movw	r24, r16
    1786:	b7 01       	movw	r22, r14
    1788:	0e 94 0f 10 	call	0x201e	; 0x201e <__fixsfsi>
    178c:	9b 01       	movw	r18, r22
    178e:	ac 01       	movw	r20, r24
    1790:	b9 01       	movw	r22, r18
    1792:	ca 01       	movw	r24, r20
    1794:	1f 91       	pop	r17
    1796:	0f 91       	pop	r16
    1798:	ff 90       	pop	r15
    179a:	ef 90       	pop	r14
    179c:	08 95       	ret

0000179e <_fpadd_parts>:
    179e:	a0 e0       	ldi	r26, 0x00	; 0
    17a0:	b0 e0       	ldi	r27, 0x00	; 0
    17a2:	e5 ed       	ldi	r30, 0xD5	; 213
    17a4:	fb e0       	ldi	r31, 0x0B	; 11
    17a6:	0c 94 4f 12 	jmp	0x249e	; 0x249e <__prologue_saves__+0x8>
    17aa:	fc 01       	movw	r30, r24
    17ac:	ea 01       	movw	r28, r20
    17ae:	80 81       	ld	r24, Z
    17b0:	82 30       	cpi	r24, 0x02	; 2
    17b2:	08 f4       	brcc	.+2      	; 0x17b6 <_fpadd_parts+0x18>
    17b4:	38 c1       	rjmp	.+624    	; 0x1a26 <_fpadd_parts+0x288>
    17b6:	db 01       	movw	r26, r22
    17b8:	9c 91       	ld	r25, X
    17ba:	92 30       	cpi	r25, 0x02	; 2
    17bc:	08 f4       	brcc	.+2      	; 0x17c0 <_fpadd_parts+0x22>
    17be:	30 c1       	rjmp	.+608    	; 0x1a20 <_fpadd_parts+0x282>
    17c0:	84 30       	cpi	r24, 0x04	; 4
    17c2:	59 f4       	brne	.+22     	; 0x17da <_fpadd_parts+0x3c>
    17c4:	94 30       	cpi	r25, 0x04	; 4
    17c6:	09 f0       	breq	.+2      	; 0x17ca <_fpadd_parts+0x2c>
    17c8:	2e c1       	rjmp	.+604    	; 0x1a26 <_fpadd_parts+0x288>
    17ca:	91 81       	ldd	r25, Z+1	; 0x01
    17cc:	11 96       	adiw	r26, 0x01	; 1
    17ce:	8c 91       	ld	r24, X
    17d0:	11 97       	sbiw	r26, 0x01	; 1
    17d2:	98 17       	cp	r25, r24
    17d4:	09 f0       	breq	.+2      	; 0x17d8 <_fpadd_parts+0x3a>
    17d6:	21 c1       	rjmp	.+578    	; 0x1a1a <_fpadd_parts+0x27c>
    17d8:	26 c1       	rjmp	.+588    	; 0x1a26 <_fpadd_parts+0x288>
    17da:	94 30       	cpi	r25, 0x04	; 4
    17dc:	09 f4       	brne	.+2      	; 0x17e0 <_fpadd_parts+0x42>
    17de:	20 c1       	rjmp	.+576    	; 0x1a20 <_fpadd_parts+0x282>
    17e0:	92 30       	cpi	r25, 0x02	; 2
    17e2:	b1 f4       	brne	.+44     	; 0x1810 <_fpadd_parts+0x72>
    17e4:	82 30       	cpi	r24, 0x02	; 2
    17e6:	09 f0       	breq	.+2      	; 0x17ea <_fpadd_parts+0x4c>
    17e8:	1e c1       	rjmp	.+572    	; 0x1a26 <_fpadd_parts+0x288>
    17ea:	ca 01       	movw	r24, r20
    17ec:	af 01       	movw	r20, r30
    17ee:	28 e0       	ldi	r18, 0x08	; 8
    17f0:	da 01       	movw	r26, r20
    17f2:	0d 90       	ld	r0, X+
    17f4:	ad 01       	movw	r20, r26
    17f6:	dc 01       	movw	r26, r24
    17f8:	0d 92       	st	X+, r0
    17fa:	cd 01       	movw	r24, r26
    17fc:	21 50       	subi	r18, 0x01	; 1
    17fe:	c1 f7       	brne	.-16     	; 0x17f0 <_fpadd_parts+0x52>
    1800:	db 01       	movw	r26, r22
    1802:	11 96       	adiw	r26, 0x01	; 1
    1804:	8c 91       	ld	r24, X
    1806:	11 97       	sbiw	r26, 0x01	; 1
    1808:	91 81       	ldd	r25, Z+1	; 0x01
    180a:	89 23       	and	r24, r25
    180c:	89 83       	std	Y+1, r24	; 0x01
    180e:	0a c1       	rjmp	.+532    	; 0x1a24 <_fpadd_parts+0x286>
    1810:	82 30       	cpi	r24, 0x02	; 2
    1812:	09 f4       	brne	.+2      	; 0x1816 <_fpadd_parts+0x78>
    1814:	05 c1       	rjmp	.+522    	; 0x1a20 <_fpadd_parts+0x282>
    1816:	c2 80       	ldd	r12, Z+2	; 0x02
    1818:	d3 80       	ldd	r13, Z+3	; 0x03
    181a:	db 01       	movw	r26, r22
    181c:	12 96       	adiw	r26, 0x02	; 2
    181e:	6d 90       	ld	r6, X+
    1820:	7c 90       	ld	r7, X
    1822:	13 97       	sbiw	r26, 0x03	; 3
    1824:	24 81       	ldd	r18, Z+4	; 0x04
    1826:	35 81       	ldd	r19, Z+5	; 0x05
    1828:	46 81       	ldd	r20, Z+6	; 0x06
    182a:	57 81       	ldd	r21, Z+7	; 0x07
    182c:	14 96       	adiw	r26, 0x04	; 4
    182e:	ed 90       	ld	r14, X+
    1830:	fd 90       	ld	r15, X+
    1832:	0d 91       	ld	r16, X+
    1834:	1c 91       	ld	r17, X
    1836:	17 97       	sbiw	r26, 0x07	; 7
    1838:	c6 01       	movw	r24, r12
    183a:	86 19       	sub	r24, r6
    183c:	97 09       	sbc	r25, r7
    183e:	5c 01       	movw	r10, r24
    1840:	97 ff       	sbrs	r25, 7
    1842:	04 c0       	rjmp	.+8      	; 0x184c <_fpadd_parts+0xae>
    1844:	aa 24       	eor	r10, r10
    1846:	bb 24       	eor	r11, r11
    1848:	a8 1a       	sub	r10, r24
    184a:	b9 0a       	sbc	r11, r25
    184c:	b0 e2       	ldi	r27, 0x20	; 32
    184e:	ab 16       	cp	r10, r27
    1850:	b1 04       	cpc	r11, r1
    1852:	0c f0       	brlt	.+2      	; 0x1856 <_fpadd_parts+0xb8>
    1854:	61 c0       	rjmp	.+194    	; 0x1918 <_fpadd_parts+0x17a>
    1856:	18 16       	cp	r1, r24
    1858:	19 06       	cpc	r1, r25
    185a:	6c f5       	brge	.+90     	; 0x18b6 <_fpadd_parts+0x118>
    185c:	37 01       	movw	r6, r14
    185e:	48 01       	movw	r8, r16
    1860:	0a 2c       	mov	r0, r10
    1862:	04 c0       	rjmp	.+8      	; 0x186c <_fpadd_parts+0xce>
    1864:	96 94       	lsr	r9
    1866:	87 94       	ror	r8
    1868:	77 94       	ror	r7
    186a:	67 94       	ror	r6
    186c:	0a 94       	dec	r0
    186e:	d2 f7       	brpl	.-12     	; 0x1864 <_fpadd_parts+0xc6>
    1870:	81 e0       	ldi	r24, 0x01	; 1
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	a0 e0       	ldi	r26, 0x00	; 0
    1876:	b0 e0       	ldi	r27, 0x00	; 0
    1878:	0a 2c       	mov	r0, r10
    187a:	04 c0       	rjmp	.+8      	; 0x1884 <_fpadd_parts+0xe6>
    187c:	88 0f       	add	r24, r24
    187e:	99 1f       	adc	r25, r25
    1880:	aa 1f       	adc	r26, r26
    1882:	bb 1f       	adc	r27, r27
    1884:	0a 94       	dec	r0
    1886:	d2 f7       	brpl	.-12     	; 0x187c <_fpadd_parts+0xde>
    1888:	01 97       	sbiw	r24, 0x01	; 1
    188a:	a1 09       	sbc	r26, r1
    188c:	b1 09       	sbc	r27, r1
    188e:	8e 21       	and	r24, r14
    1890:	9f 21       	and	r25, r15
    1892:	a0 23       	and	r26, r16
    1894:	b1 23       	and	r27, r17
    1896:	ee 24       	eor	r14, r14
    1898:	ff 24       	eor	r15, r15
    189a:	87 01       	movw	r16, r14
    189c:	e3 94       	inc	r14
    189e:	00 97       	sbiw	r24, 0x00	; 0
    18a0:	a1 05       	cpc	r26, r1
    18a2:	b1 05       	cpc	r27, r1
    18a4:	19 f4       	brne	.+6      	; 0x18ac <_fpadd_parts+0x10e>
    18a6:	ee 24       	eor	r14, r14
    18a8:	ff 24       	eor	r15, r15
    18aa:	87 01       	movw	r16, r14
    18ac:	e6 28       	or	r14, r6
    18ae:	f7 28       	or	r15, r7
    18b0:	08 29       	or	r16, r8
    18b2:	19 29       	or	r17, r9
    18b4:	3c c0       	rjmp	.+120    	; 0x192e <_fpadd_parts+0x190>
    18b6:	00 97       	sbiw	r24, 0x00	; 0
    18b8:	d1 f1       	breq	.+116    	; 0x192e <_fpadd_parts+0x190>
    18ba:	ca 0c       	add	r12, r10
    18bc:	db 1c       	adc	r13, r11
    18be:	39 01       	movw	r6, r18
    18c0:	4a 01       	movw	r8, r20
    18c2:	0a 2c       	mov	r0, r10
    18c4:	04 c0       	rjmp	.+8      	; 0x18ce <_fpadd_parts+0x130>
    18c6:	96 94       	lsr	r9
    18c8:	87 94       	ror	r8
    18ca:	77 94       	ror	r7
    18cc:	67 94       	ror	r6
    18ce:	0a 94       	dec	r0
    18d0:	d2 f7       	brpl	.-12     	; 0x18c6 <_fpadd_parts+0x128>
    18d2:	81 e0       	ldi	r24, 0x01	; 1
    18d4:	90 e0       	ldi	r25, 0x00	; 0
    18d6:	a0 e0       	ldi	r26, 0x00	; 0
    18d8:	b0 e0       	ldi	r27, 0x00	; 0
    18da:	0a 2c       	mov	r0, r10
    18dc:	04 c0       	rjmp	.+8      	; 0x18e6 <_fpadd_parts+0x148>
    18de:	88 0f       	add	r24, r24
    18e0:	99 1f       	adc	r25, r25
    18e2:	aa 1f       	adc	r26, r26
    18e4:	bb 1f       	adc	r27, r27
    18e6:	0a 94       	dec	r0
    18e8:	d2 f7       	brpl	.-12     	; 0x18de <_fpadd_parts+0x140>
    18ea:	01 97       	sbiw	r24, 0x01	; 1
    18ec:	a1 09       	sbc	r26, r1
    18ee:	b1 09       	sbc	r27, r1
    18f0:	82 23       	and	r24, r18
    18f2:	93 23       	and	r25, r19
    18f4:	a4 23       	and	r26, r20
    18f6:	b5 23       	and	r27, r21
    18f8:	21 e0       	ldi	r18, 0x01	; 1
    18fa:	30 e0       	ldi	r19, 0x00	; 0
    18fc:	40 e0       	ldi	r20, 0x00	; 0
    18fe:	50 e0       	ldi	r21, 0x00	; 0
    1900:	00 97       	sbiw	r24, 0x00	; 0
    1902:	a1 05       	cpc	r26, r1
    1904:	b1 05       	cpc	r27, r1
    1906:	19 f4       	brne	.+6      	; 0x190e <_fpadd_parts+0x170>
    1908:	20 e0       	ldi	r18, 0x00	; 0
    190a:	30 e0       	ldi	r19, 0x00	; 0
    190c:	a9 01       	movw	r20, r18
    190e:	26 29       	or	r18, r6
    1910:	37 29       	or	r19, r7
    1912:	48 29       	or	r20, r8
    1914:	59 29       	or	r21, r9
    1916:	0b c0       	rjmp	.+22     	; 0x192e <_fpadd_parts+0x190>
    1918:	6c 14       	cp	r6, r12
    191a:	7d 04       	cpc	r7, r13
    191c:	24 f4       	brge	.+8      	; 0x1926 <_fpadd_parts+0x188>
    191e:	ee 24       	eor	r14, r14
    1920:	ff 24       	eor	r15, r15
    1922:	87 01       	movw	r16, r14
    1924:	04 c0       	rjmp	.+8      	; 0x192e <_fpadd_parts+0x190>
    1926:	63 01       	movw	r12, r6
    1928:	20 e0       	ldi	r18, 0x00	; 0
    192a:	30 e0       	ldi	r19, 0x00	; 0
    192c:	a9 01       	movw	r20, r18
    192e:	81 81       	ldd	r24, Z+1	; 0x01
    1930:	fb 01       	movw	r30, r22
    1932:	91 81       	ldd	r25, Z+1	; 0x01
    1934:	89 17       	cp	r24, r25
    1936:	09 f4       	brne	.+2      	; 0x193a <_fpadd_parts+0x19c>
    1938:	45 c0       	rjmp	.+138    	; 0x19c4 <_fpadd_parts+0x226>
    193a:	88 23       	and	r24, r24
    193c:	49 f0       	breq	.+18     	; 0x1950 <_fpadd_parts+0x1b2>
    193e:	d8 01       	movw	r26, r16
    1940:	c7 01       	movw	r24, r14
    1942:	82 1b       	sub	r24, r18
    1944:	93 0b       	sbc	r25, r19
    1946:	a4 0b       	sbc	r26, r20
    1948:	b5 0b       	sbc	r27, r21
    194a:	9c 01       	movw	r18, r24
    194c:	ad 01       	movw	r20, r26
    194e:	04 c0       	rjmp	.+8      	; 0x1958 <_fpadd_parts+0x1ba>
    1950:	2e 19       	sub	r18, r14
    1952:	3f 09       	sbc	r19, r15
    1954:	40 0b       	sbc	r20, r16
    1956:	51 0b       	sbc	r21, r17
    1958:	57 fd       	sbrc	r21, 7
    195a:	04 c0       	rjmp	.+8      	; 0x1964 <_fpadd_parts+0x1c6>
    195c:	19 82       	std	Y+1, r1	; 0x01
    195e:	db 82       	std	Y+3, r13	; 0x03
    1960:	ca 82       	std	Y+2, r12	; 0x02
    1962:	0b c0       	rjmp	.+22     	; 0x197a <_fpadd_parts+0x1dc>
    1964:	81 e0       	ldi	r24, 0x01	; 1
    1966:	89 83       	std	Y+1, r24	; 0x01
    1968:	db 82       	std	Y+3, r13	; 0x03
    196a:	ca 82       	std	Y+2, r12	; 0x02
    196c:	50 95       	com	r21
    196e:	40 95       	com	r20
    1970:	30 95       	com	r19
    1972:	21 95       	neg	r18
    1974:	3f 4f       	sbci	r19, 0xFF	; 255
    1976:	4f 4f       	sbci	r20, 0xFF	; 255
    1978:	5f 4f       	sbci	r21, 0xFF	; 255
    197a:	2c 83       	std	Y+4, r18	; 0x04
    197c:	3d 83       	std	Y+5, r19	; 0x05
    197e:	4e 83       	std	Y+6, r20	; 0x06
    1980:	5f 83       	std	Y+7, r21	; 0x07
    1982:	0d c0       	rjmp	.+26     	; 0x199e <_fpadd_parts+0x200>
    1984:	88 0f       	add	r24, r24
    1986:	99 1f       	adc	r25, r25
    1988:	aa 1f       	adc	r26, r26
    198a:	bb 1f       	adc	r27, r27
    198c:	8c 83       	std	Y+4, r24	; 0x04
    198e:	9d 83       	std	Y+5, r25	; 0x05
    1990:	ae 83       	std	Y+6, r26	; 0x06
    1992:	bf 83       	std	Y+7, r27	; 0x07
    1994:	8a 81       	ldd	r24, Y+2	; 0x02
    1996:	9b 81       	ldd	r25, Y+3	; 0x03
    1998:	01 97       	sbiw	r24, 0x01	; 1
    199a:	9b 83       	std	Y+3, r25	; 0x03
    199c:	8a 83       	std	Y+2, r24	; 0x02
    199e:	8c 81       	ldd	r24, Y+4	; 0x04
    19a0:	9d 81       	ldd	r25, Y+5	; 0x05
    19a2:	ae 81       	ldd	r26, Y+6	; 0x06
    19a4:	bf 81       	ldd	r27, Y+7	; 0x07
    19a6:	9c 01       	movw	r18, r24
    19a8:	ad 01       	movw	r20, r26
    19aa:	21 50       	subi	r18, 0x01	; 1
    19ac:	30 40       	sbci	r19, 0x00	; 0
    19ae:	40 40       	sbci	r20, 0x00	; 0
    19b0:	50 40       	sbci	r21, 0x00	; 0
    19b2:	2f 3f       	cpi	r18, 0xFF	; 255
    19b4:	ef ef       	ldi	r30, 0xFF	; 255
    19b6:	3e 07       	cpc	r19, r30
    19b8:	ef ef       	ldi	r30, 0xFF	; 255
    19ba:	4e 07       	cpc	r20, r30
    19bc:	ef e3       	ldi	r30, 0x3F	; 63
    19be:	5e 07       	cpc	r21, r30
    19c0:	08 f3       	brcs	.-62     	; 0x1984 <_fpadd_parts+0x1e6>
    19c2:	0b c0       	rjmp	.+22     	; 0x19da <_fpadd_parts+0x23c>
    19c4:	89 83       	std	Y+1, r24	; 0x01
    19c6:	db 82       	std	Y+3, r13	; 0x03
    19c8:	ca 82       	std	Y+2, r12	; 0x02
    19ca:	2e 0d       	add	r18, r14
    19cc:	3f 1d       	adc	r19, r15
    19ce:	40 1f       	adc	r20, r16
    19d0:	51 1f       	adc	r21, r17
    19d2:	2c 83       	std	Y+4, r18	; 0x04
    19d4:	3d 83       	std	Y+5, r19	; 0x05
    19d6:	4e 83       	std	Y+6, r20	; 0x06
    19d8:	5f 83       	std	Y+7, r21	; 0x07
    19da:	83 e0       	ldi	r24, 0x03	; 3
    19dc:	88 83       	st	Y, r24
    19de:	2c 81       	ldd	r18, Y+4	; 0x04
    19e0:	3d 81       	ldd	r19, Y+5	; 0x05
    19e2:	4e 81       	ldd	r20, Y+6	; 0x06
    19e4:	5f 81       	ldd	r21, Y+7	; 0x07
    19e6:	57 ff       	sbrs	r21, 7
    19e8:	1d c0       	rjmp	.+58     	; 0x1a24 <_fpadd_parts+0x286>
    19ea:	da 01       	movw	r26, r20
    19ec:	c9 01       	movw	r24, r18
    19ee:	81 70       	andi	r24, 0x01	; 1
    19f0:	90 70       	andi	r25, 0x00	; 0
    19f2:	a0 70       	andi	r26, 0x00	; 0
    19f4:	b0 70       	andi	r27, 0x00	; 0
    19f6:	56 95       	lsr	r21
    19f8:	47 95       	ror	r20
    19fa:	37 95       	ror	r19
    19fc:	27 95       	ror	r18
    19fe:	82 2b       	or	r24, r18
    1a00:	93 2b       	or	r25, r19
    1a02:	a4 2b       	or	r26, r20
    1a04:	b5 2b       	or	r27, r21
    1a06:	8c 83       	std	Y+4, r24	; 0x04
    1a08:	9d 83       	std	Y+5, r25	; 0x05
    1a0a:	ae 83       	std	Y+6, r26	; 0x06
    1a0c:	bf 83       	std	Y+7, r27	; 0x07
    1a0e:	8a 81       	ldd	r24, Y+2	; 0x02
    1a10:	9b 81       	ldd	r25, Y+3	; 0x03
    1a12:	01 96       	adiw	r24, 0x01	; 1
    1a14:	9b 83       	std	Y+3, r25	; 0x03
    1a16:	8a 83       	std	Y+2, r24	; 0x02
    1a18:	05 c0       	rjmp	.+10     	; 0x1a24 <_fpadd_parts+0x286>
    1a1a:	e0 e6       	ldi	r30, 0x60	; 96
    1a1c:	f0 e0       	ldi	r31, 0x00	; 0
    1a1e:	03 c0       	rjmp	.+6      	; 0x1a26 <_fpadd_parts+0x288>
    1a20:	fb 01       	movw	r30, r22
    1a22:	01 c0       	rjmp	.+2      	; 0x1a26 <_fpadd_parts+0x288>
    1a24:	fe 01       	movw	r30, r28
    1a26:	cf 01       	movw	r24, r30
    1a28:	cd b7       	in	r28, 0x3d	; 61
    1a2a:	de b7       	in	r29, 0x3e	; 62
    1a2c:	ee e0       	ldi	r30, 0x0E	; 14
    1a2e:	0c 94 6b 12 	jmp	0x24d6	; 0x24d6 <__epilogue_restores__+0x8>

00001a32 <__addsf3>:
    1a32:	a0 e2       	ldi	r26, 0x20	; 32
    1a34:	b0 e0       	ldi	r27, 0x00	; 0
    1a36:	ef e1       	ldi	r30, 0x1F	; 31
    1a38:	fd e0       	ldi	r31, 0x0D	; 13
    1a3a:	0c 94 57 12 	jmp	0x24ae	; 0x24ae <__prologue_saves__+0x18>
    1a3e:	69 83       	std	Y+1, r22	; 0x01
    1a40:	7a 83       	std	Y+2, r23	; 0x02
    1a42:	8b 83       	std	Y+3, r24	; 0x03
    1a44:	9c 83       	std	Y+4, r25	; 0x04
    1a46:	2d 83       	std	Y+5, r18	; 0x05
    1a48:	3e 83       	std	Y+6, r19	; 0x06
    1a4a:	4f 83       	std	Y+7, r20	; 0x07
    1a4c:	58 87       	std	Y+8, r21	; 0x08
    1a4e:	89 e0       	ldi	r24, 0x09	; 9
    1a50:	e8 2e       	mov	r14, r24
    1a52:	f1 2c       	mov	r15, r1
    1a54:	ec 0e       	add	r14, r28
    1a56:	fd 1e       	adc	r15, r29
    1a58:	ce 01       	movw	r24, r28
    1a5a:	01 96       	adiw	r24, 0x01	; 1
    1a5c:	b7 01       	movw	r22, r14
    1a5e:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1a62:	8e 01       	movw	r16, r28
    1a64:	0f 5e       	subi	r16, 0xEF	; 239
    1a66:	1f 4f       	sbci	r17, 0xFF	; 255
    1a68:	ce 01       	movw	r24, r28
    1a6a:	05 96       	adiw	r24, 0x05	; 5
    1a6c:	b8 01       	movw	r22, r16
    1a6e:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1a72:	c7 01       	movw	r24, r14
    1a74:	b8 01       	movw	r22, r16
    1a76:	ae 01       	movw	r20, r28
    1a78:	47 5e       	subi	r20, 0xE7	; 231
    1a7a:	5f 4f       	sbci	r21, 0xFF	; 255
    1a7c:	0e 94 cf 0b 	call	0x179e	; 0x179e <_fpadd_parts>
    1a80:	0e 94 bb 10 	call	0x2176	; 0x2176 <__pack_f>
    1a84:	a0 96       	adiw	r28, 0x20	; 32
    1a86:	e6 e0       	ldi	r30, 0x06	; 6
    1a88:	0c 94 73 12 	jmp	0x24e6	; 0x24e6 <__epilogue_restores__+0x18>

00001a8c <__subsf3>:
    1a8c:	a0 e2       	ldi	r26, 0x20	; 32
    1a8e:	b0 e0       	ldi	r27, 0x00	; 0
    1a90:	ec e4       	ldi	r30, 0x4C	; 76
    1a92:	fd e0       	ldi	r31, 0x0D	; 13
    1a94:	0c 94 57 12 	jmp	0x24ae	; 0x24ae <__prologue_saves__+0x18>
    1a98:	69 83       	std	Y+1, r22	; 0x01
    1a9a:	7a 83       	std	Y+2, r23	; 0x02
    1a9c:	8b 83       	std	Y+3, r24	; 0x03
    1a9e:	9c 83       	std	Y+4, r25	; 0x04
    1aa0:	2d 83       	std	Y+5, r18	; 0x05
    1aa2:	3e 83       	std	Y+6, r19	; 0x06
    1aa4:	4f 83       	std	Y+7, r20	; 0x07
    1aa6:	58 87       	std	Y+8, r21	; 0x08
    1aa8:	8e 01       	movw	r16, r28
    1aaa:	07 5f       	subi	r16, 0xF7	; 247
    1aac:	1f 4f       	sbci	r17, 0xFF	; 255
    1aae:	ce 01       	movw	r24, r28
    1ab0:	01 96       	adiw	r24, 0x01	; 1
    1ab2:	b8 01       	movw	r22, r16
    1ab4:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1ab8:	91 e1       	ldi	r25, 0x11	; 17
    1aba:	e9 2e       	mov	r14, r25
    1abc:	f1 2c       	mov	r15, r1
    1abe:	ec 0e       	add	r14, r28
    1ac0:	fd 1e       	adc	r15, r29
    1ac2:	ce 01       	movw	r24, r28
    1ac4:	05 96       	adiw	r24, 0x05	; 5
    1ac6:	b7 01       	movw	r22, r14
    1ac8:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1acc:	8a 89       	ldd	r24, Y+18	; 0x12
    1ace:	91 e0       	ldi	r25, 0x01	; 1
    1ad0:	89 27       	eor	r24, r25
    1ad2:	8a 8b       	std	Y+18, r24	; 0x12
    1ad4:	c8 01       	movw	r24, r16
    1ad6:	b7 01       	movw	r22, r14
    1ad8:	ae 01       	movw	r20, r28
    1ada:	47 5e       	subi	r20, 0xE7	; 231
    1adc:	5f 4f       	sbci	r21, 0xFF	; 255
    1ade:	0e 94 cf 0b 	call	0x179e	; 0x179e <_fpadd_parts>
    1ae2:	0e 94 bb 10 	call	0x2176	; 0x2176 <__pack_f>
    1ae6:	a0 96       	adiw	r28, 0x20	; 32
    1ae8:	e6 e0       	ldi	r30, 0x06	; 6
    1aea:	0c 94 73 12 	jmp	0x24e6	; 0x24e6 <__epilogue_restores__+0x18>

00001aee <__mulsf3>:
    1aee:	a0 e2       	ldi	r26, 0x20	; 32
    1af0:	b0 e0       	ldi	r27, 0x00	; 0
    1af2:	ed e7       	ldi	r30, 0x7D	; 125
    1af4:	fd e0       	ldi	r31, 0x0D	; 13
    1af6:	0c 94 4b 12 	jmp	0x2496	; 0x2496 <__prologue_saves__>
    1afa:	69 83       	std	Y+1, r22	; 0x01
    1afc:	7a 83       	std	Y+2, r23	; 0x02
    1afe:	8b 83       	std	Y+3, r24	; 0x03
    1b00:	9c 83       	std	Y+4, r25	; 0x04
    1b02:	2d 83       	std	Y+5, r18	; 0x05
    1b04:	3e 83       	std	Y+6, r19	; 0x06
    1b06:	4f 83       	std	Y+7, r20	; 0x07
    1b08:	58 87       	std	Y+8, r21	; 0x08
    1b0a:	ce 01       	movw	r24, r28
    1b0c:	01 96       	adiw	r24, 0x01	; 1
    1b0e:	be 01       	movw	r22, r28
    1b10:	67 5f       	subi	r22, 0xF7	; 247
    1b12:	7f 4f       	sbci	r23, 0xFF	; 255
    1b14:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1b18:	ce 01       	movw	r24, r28
    1b1a:	05 96       	adiw	r24, 0x05	; 5
    1b1c:	be 01       	movw	r22, r28
    1b1e:	6f 5e       	subi	r22, 0xEF	; 239
    1b20:	7f 4f       	sbci	r23, 0xFF	; 255
    1b22:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1b26:	99 85       	ldd	r25, Y+9	; 0x09
    1b28:	92 30       	cpi	r25, 0x02	; 2
    1b2a:	78 f0       	brcs	.+30     	; 0x1b4a <__mulsf3+0x5c>
    1b2c:	89 89       	ldd	r24, Y+17	; 0x11
    1b2e:	82 30       	cpi	r24, 0x02	; 2
    1b30:	c0 f0       	brcs	.+48     	; 0x1b62 <__mulsf3+0x74>
    1b32:	94 30       	cpi	r25, 0x04	; 4
    1b34:	19 f4       	brne	.+6      	; 0x1b3c <__mulsf3+0x4e>
    1b36:	82 30       	cpi	r24, 0x02	; 2
    1b38:	41 f4       	brne	.+16     	; 0x1b4a <__mulsf3+0x5c>
    1b3a:	cb c0       	rjmp	.+406    	; 0x1cd2 <__mulsf3+0x1e4>
    1b3c:	84 30       	cpi	r24, 0x04	; 4
    1b3e:	19 f4       	brne	.+6      	; 0x1b46 <__mulsf3+0x58>
    1b40:	92 30       	cpi	r25, 0x02	; 2
    1b42:	79 f4       	brne	.+30     	; 0x1b62 <__mulsf3+0x74>
    1b44:	c6 c0       	rjmp	.+396    	; 0x1cd2 <__mulsf3+0x1e4>
    1b46:	92 30       	cpi	r25, 0x02	; 2
    1b48:	51 f4       	brne	.+20     	; 0x1b5e <__mulsf3+0x70>
    1b4a:	81 e0       	ldi	r24, 0x01	; 1
    1b4c:	2a 85       	ldd	r18, Y+10	; 0x0a
    1b4e:	9a 89       	ldd	r25, Y+18	; 0x12
    1b50:	29 17       	cp	r18, r25
    1b52:	09 f4       	brne	.+2      	; 0x1b56 <__mulsf3+0x68>
    1b54:	80 e0       	ldi	r24, 0x00	; 0
    1b56:	8a 87       	std	Y+10, r24	; 0x0a
    1b58:	ce 01       	movw	r24, r28
    1b5a:	09 96       	adiw	r24, 0x09	; 9
    1b5c:	bc c0       	rjmp	.+376    	; 0x1cd6 <__mulsf3+0x1e8>
    1b5e:	82 30       	cpi	r24, 0x02	; 2
    1b60:	51 f4       	brne	.+20     	; 0x1b76 <__mulsf3+0x88>
    1b62:	81 e0       	ldi	r24, 0x01	; 1
    1b64:	2a 85       	ldd	r18, Y+10	; 0x0a
    1b66:	9a 89       	ldd	r25, Y+18	; 0x12
    1b68:	29 17       	cp	r18, r25
    1b6a:	09 f4       	brne	.+2      	; 0x1b6e <__mulsf3+0x80>
    1b6c:	80 e0       	ldi	r24, 0x00	; 0
    1b6e:	8a 8b       	std	Y+18, r24	; 0x12
    1b70:	ce 01       	movw	r24, r28
    1b72:	41 96       	adiw	r24, 0x11	; 17
    1b74:	b0 c0       	rjmp	.+352    	; 0x1cd6 <__mulsf3+0x1e8>
    1b76:	6d 84       	ldd	r6, Y+13	; 0x0d
    1b78:	7e 84       	ldd	r7, Y+14	; 0x0e
    1b7a:	8f 84       	ldd	r8, Y+15	; 0x0f
    1b7c:	98 88       	ldd	r9, Y+16	; 0x10
    1b7e:	ed 88       	ldd	r14, Y+21	; 0x15
    1b80:	fe 88       	ldd	r15, Y+22	; 0x16
    1b82:	0f 89       	ldd	r16, Y+23	; 0x17
    1b84:	18 8d       	ldd	r17, Y+24	; 0x18
    1b86:	e0 e2       	ldi	r30, 0x20	; 32
    1b88:	f0 e0       	ldi	r31, 0x00	; 0
    1b8a:	80 e0       	ldi	r24, 0x00	; 0
    1b8c:	90 e0       	ldi	r25, 0x00	; 0
    1b8e:	dc 01       	movw	r26, r24
    1b90:	aa 24       	eor	r10, r10
    1b92:	bb 24       	eor	r11, r11
    1b94:	65 01       	movw	r12, r10
    1b96:	20 e0       	ldi	r18, 0x00	; 0
    1b98:	30 e0       	ldi	r19, 0x00	; 0
    1b9a:	a9 01       	movw	r20, r18
    1b9c:	b3 01       	movw	r22, r6
    1b9e:	61 70       	andi	r22, 0x01	; 1
    1ba0:	70 70       	andi	r23, 0x00	; 0
    1ba2:	61 15       	cp	r22, r1
    1ba4:	71 05       	cpc	r23, r1
    1ba6:	d1 f0       	breq	.+52     	; 0x1bdc <__mulsf3+0xee>
    1ba8:	2e 0d       	add	r18, r14
    1baa:	3f 1d       	adc	r19, r15
    1bac:	40 1f       	adc	r20, r16
    1bae:	51 1f       	adc	r21, r17
    1bb0:	15 01       	movw	r2, r10
    1bb2:	26 01       	movw	r4, r12
    1bb4:	28 0e       	add	r2, r24
    1bb6:	39 1e       	adc	r3, r25
    1bb8:	4a 1e       	adc	r4, r26
    1bba:	5b 1e       	adc	r5, r27
    1bbc:	81 e0       	ldi	r24, 0x01	; 1
    1bbe:	90 e0       	ldi	r25, 0x00	; 0
    1bc0:	a0 e0       	ldi	r26, 0x00	; 0
    1bc2:	b0 e0       	ldi	r27, 0x00	; 0
    1bc4:	2e 15       	cp	r18, r14
    1bc6:	3f 05       	cpc	r19, r15
    1bc8:	40 07       	cpc	r20, r16
    1bca:	51 07       	cpc	r21, r17
    1bcc:	18 f0       	brcs	.+6      	; 0x1bd4 <__mulsf3+0xe6>
    1bce:	80 e0       	ldi	r24, 0x00	; 0
    1bd0:	90 e0       	ldi	r25, 0x00	; 0
    1bd2:	dc 01       	movw	r26, r24
    1bd4:	82 0d       	add	r24, r2
    1bd6:	93 1d       	adc	r25, r3
    1bd8:	a4 1d       	adc	r26, r4
    1bda:	b5 1d       	adc	r27, r5
    1bdc:	aa 0c       	add	r10, r10
    1bde:	bb 1c       	adc	r11, r11
    1be0:	cc 1c       	adc	r12, r12
    1be2:	dd 1c       	adc	r13, r13
    1be4:	17 ff       	sbrs	r17, 7
    1be6:	09 c0       	rjmp	.+18     	; 0x1bfa <__mulsf3+0x10c>
    1be8:	61 e0       	ldi	r22, 0x01	; 1
    1bea:	26 2e       	mov	r2, r22
    1bec:	31 2c       	mov	r3, r1
    1bee:	41 2c       	mov	r4, r1
    1bf0:	51 2c       	mov	r5, r1
    1bf2:	a2 28       	or	r10, r2
    1bf4:	b3 28       	or	r11, r3
    1bf6:	c4 28       	or	r12, r4
    1bf8:	d5 28       	or	r13, r5
    1bfa:	31 97       	sbiw	r30, 0x01	; 1
    1bfc:	49 f0       	breq	.+18     	; 0x1c10 <__mulsf3+0x122>
    1bfe:	ee 0c       	add	r14, r14
    1c00:	ff 1c       	adc	r15, r15
    1c02:	00 1f       	adc	r16, r16
    1c04:	11 1f       	adc	r17, r17
    1c06:	96 94       	lsr	r9
    1c08:	87 94       	ror	r8
    1c0a:	77 94       	ror	r7
    1c0c:	67 94       	ror	r6
    1c0e:	c6 cf       	rjmp	.-116    	; 0x1b9c <__mulsf3+0xae>
    1c10:	6b 89       	ldd	r22, Y+19	; 0x13
    1c12:	7c 89       	ldd	r23, Y+20	; 0x14
    1c14:	eb 85       	ldd	r30, Y+11	; 0x0b
    1c16:	fc 85       	ldd	r31, Y+12	; 0x0c
    1c18:	6e 0f       	add	r22, r30
    1c1a:	7f 1f       	adc	r23, r31
    1c1c:	6e 5f       	subi	r22, 0xFE	; 254
    1c1e:	7f 4f       	sbci	r23, 0xFF	; 255
    1c20:	7c 8f       	std	Y+28, r23	; 0x1c
    1c22:	6b 8f       	std	Y+27, r22	; 0x1b
    1c24:	61 e0       	ldi	r22, 0x01	; 1
    1c26:	ea 85       	ldd	r30, Y+10	; 0x0a
    1c28:	7a 89       	ldd	r23, Y+18	; 0x12
    1c2a:	e7 17       	cp	r30, r23
    1c2c:	09 f4       	brne	.+2      	; 0x1c30 <__mulsf3+0x142>
    1c2e:	60 e0       	ldi	r22, 0x00	; 0
    1c30:	6a 8f       	std	Y+26, r22	; 0x1a
    1c32:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1c34:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1c36:	10 c0       	rjmp	.+32     	; 0x1c58 <__mulsf3+0x16a>
    1c38:	fc 01       	movw	r30, r24
    1c3a:	e1 70       	andi	r30, 0x01	; 1
    1c3c:	f0 70       	andi	r31, 0x00	; 0
    1c3e:	30 97       	sbiw	r30, 0x00	; 0
    1c40:	29 f0       	breq	.+10     	; 0x1c4c <__mulsf3+0x15e>
    1c42:	56 95       	lsr	r21
    1c44:	47 95       	ror	r20
    1c46:	37 95       	ror	r19
    1c48:	27 95       	ror	r18
    1c4a:	50 68       	ori	r21, 0x80	; 128
    1c4c:	b6 95       	lsr	r27
    1c4e:	a7 95       	ror	r26
    1c50:	97 95       	ror	r25
    1c52:	87 95       	ror	r24
    1c54:	6f 5f       	subi	r22, 0xFF	; 255
    1c56:	7f 4f       	sbci	r23, 0xFF	; 255
    1c58:	b7 fd       	sbrc	r27, 7
    1c5a:	ee cf       	rjmp	.-36     	; 0x1c38 <__mulsf3+0x14a>
    1c5c:	0c c0       	rjmp	.+24     	; 0x1c76 <__mulsf3+0x188>
    1c5e:	88 0f       	add	r24, r24
    1c60:	99 1f       	adc	r25, r25
    1c62:	aa 1f       	adc	r26, r26
    1c64:	bb 1f       	adc	r27, r27
    1c66:	57 fd       	sbrc	r21, 7
    1c68:	81 60       	ori	r24, 0x01	; 1
    1c6a:	22 0f       	add	r18, r18
    1c6c:	33 1f       	adc	r19, r19
    1c6e:	44 1f       	adc	r20, r20
    1c70:	55 1f       	adc	r21, r21
    1c72:	61 50       	subi	r22, 0x01	; 1
    1c74:	70 40       	sbci	r23, 0x00	; 0
    1c76:	80 30       	cpi	r24, 0x00	; 0
    1c78:	e0 e0       	ldi	r30, 0x00	; 0
    1c7a:	9e 07       	cpc	r25, r30
    1c7c:	e0 e0       	ldi	r30, 0x00	; 0
    1c7e:	ae 07       	cpc	r26, r30
    1c80:	e0 e4       	ldi	r30, 0x40	; 64
    1c82:	be 07       	cpc	r27, r30
    1c84:	60 f3       	brcs	.-40     	; 0x1c5e <__mulsf3+0x170>
    1c86:	6b 8f       	std	Y+27, r22	; 0x1b
    1c88:	7c 8f       	std	Y+28, r23	; 0x1c
    1c8a:	6f e7       	ldi	r22, 0x7F	; 127
    1c8c:	e6 2e       	mov	r14, r22
    1c8e:	f1 2c       	mov	r15, r1
    1c90:	01 2d       	mov	r16, r1
    1c92:	11 2d       	mov	r17, r1
    1c94:	e8 22       	and	r14, r24
    1c96:	f9 22       	and	r15, r25
    1c98:	0a 23       	and	r16, r26
    1c9a:	1b 23       	and	r17, r27
    1c9c:	60 e4       	ldi	r22, 0x40	; 64
    1c9e:	e6 16       	cp	r14, r22
    1ca0:	f1 04       	cpc	r15, r1
    1ca2:	01 05       	cpc	r16, r1
    1ca4:	11 05       	cpc	r17, r1
    1ca6:	61 f4       	brne	.+24     	; 0x1cc0 <__mulsf3+0x1d2>
    1ca8:	87 fd       	sbrc	r24, 7
    1caa:	0a c0       	rjmp	.+20     	; 0x1cc0 <__mulsf3+0x1d2>
    1cac:	21 15       	cp	r18, r1
    1cae:	31 05       	cpc	r19, r1
    1cb0:	41 05       	cpc	r20, r1
    1cb2:	51 05       	cpc	r21, r1
    1cb4:	29 f0       	breq	.+10     	; 0x1cc0 <__mulsf3+0x1d2>
    1cb6:	80 5c       	subi	r24, 0xC0	; 192
    1cb8:	9f 4f       	sbci	r25, 0xFF	; 255
    1cba:	af 4f       	sbci	r26, 0xFF	; 255
    1cbc:	bf 4f       	sbci	r27, 0xFF	; 255
    1cbe:	80 78       	andi	r24, 0x80	; 128
    1cc0:	8d 8f       	std	Y+29, r24	; 0x1d
    1cc2:	9e 8f       	std	Y+30, r25	; 0x1e
    1cc4:	af 8f       	std	Y+31, r26	; 0x1f
    1cc6:	b8 a3       	std	Y+32, r27	; 0x20
    1cc8:	83 e0       	ldi	r24, 0x03	; 3
    1cca:	89 8f       	std	Y+25, r24	; 0x19
    1ccc:	ce 01       	movw	r24, r28
    1cce:	49 96       	adiw	r24, 0x19	; 25
    1cd0:	02 c0       	rjmp	.+4      	; 0x1cd6 <__mulsf3+0x1e8>
    1cd2:	80 e6       	ldi	r24, 0x60	; 96
    1cd4:	90 e0       	ldi	r25, 0x00	; 0
    1cd6:	0e 94 bb 10 	call	0x2176	; 0x2176 <__pack_f>
    1cda:	a0 96       	adiw	r28, 0x20	; 32
    1cdc:	e2 e1       	ldi	r30, 0x12	; 18
    1cde:	0c 94 67 12 	jmp	0x24ce	; 0x24ce <__epilogue_restores__>

00001ce2 <__divsf3>:
    1ce2:	a8 e1       	ldi	r26, 0x18	; 24
    1ce4:	b0 e0       	ldi	r27, 0x00	; 0
    1ce6:	e7 e7       	ldi	r30, 0x77	; 119
    1ce8:	fe e0       	ldi	r31, 0x0E	; 14
    1cea:	0c 94 53 12 	jmp	0x24a6	; 0x24a6 <__prologue_saves__+0x10>
    1cee:	69 83       	std	Y+1, r22	; 0x01
    1cf0:	7a 83       	std	Y+2, r23	; 0x02
    1cf2:	8b 83       	std	Y+3, r24	; 0x03
    1cf4:	9c 83       	std	Y+4, r25	; 0x04
    1cf6:	2d 83       	std	Y+5, r18	; 0x05
    1cf8:	3e 83       	std	Y+6, r19	; 0x06
    1cfa:	4f 83       	std	Y+7, r20	; 0x07
    1cfc:	58 87       	std	Y+8, r21	; 0x08
    1cfe:	8e 01       	movw	r16, r28
    1d00:	07 5f       	subi	r16, 0xF7	; 247
    1d02:	1f 4f       	sbci	r17, 0xFF	; 255
    1d04:	ce 01       	movw	r24, r28
    1d06:	01 96       	adiw	r24, 0x01	; 1
    1d08:	b8 01       	movw	r22, r16
    1d0a:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1d0e:	81 e1       	ldi	r24, 0x11	; 17
    1d10:	e8 2e       	mov	r14, r24
    1d12:	f1 2c       	mov	r15, r1
    1d14:	ec 0e       	add	r14, r28
    1d16:	fd 1e       	adc	r15, r29
    1d18:	ce 01       	movw	r24, r28
    1d1a:	05 96       	adiw	r24, 0x05	; 5
    1d1c:	b7 01       	movw	r22, r14
    1d1e:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1d22:	99 85       	ldd	r25, Y+9	; 0x09
    1d24:	92 30       	cpi	r25, 0x02	; 2
    1d26:	08 f4       	brcc	.+2      	; 0x1d2a <__divsf3+0x48>
    1d28:	83 c0       	rjmp	.+262    	; 0x1e30 <__divsf3+0x14e>
    1d2a:	89 89       	ldd	r24, Y+17	; 0x11
    1d2c:	82 30       	cpi	r24, 0x02	; 2
    1d2e:	08 f4       	brcc	.+2      	; 0x1d32 <__divsf3+0x50>
    1d30:	7b c0       	rjmp	.+246    	; 0x1e28 <__divsf3+0x146>
    1d32:	2a 85       	ldd	r18, Y+10	; 0x0a
    1d34:	3a 89       	ldd	r19, Y+18	; 0x12
    1d36:	23 27       	eor	r18, r19
    1d38:	2a 87       	std	Y+10, r18	; 0x0a
    1d3a:	94 30       	cpi	r25, 0x04	; 4
    1d3c:	11 f0       	breq	.+4      	; 0x1d42 <__divsf3+0x60>
    1d3e:	92 30       	cpi	r25, 0x02	; 2
    1d40:	21 f4       	brne	.+8      	; 0x1d4a <__divsf3+0x68>
    1d42:	98 17       	cp	r25, r24
    1d44:	09 f0       	breq	.+2      	; 0x1d48 <__divsf3+0x66>
    1d46:	6c c0       	rjmp	.+216    	; 0x1e20 <__divsf3+0x13e>
    1d48:	71 c0       	rjmp	.+226    	; 0x1e2c <__divsf3+0x14a>
    1d4a:	84 30       	cpi	r24, 0x04	; 4
    1d4c:	39 f4       	brne	.+14     	; 0x1d5c <__divsf3+0x7a>
    1d4e:	1d 86       	std	Y+13, r1	; 0x0d
    1d50:	1e 86       	std	Y+14, r1	; 0x0e
    1d52:	1f 86       	std	Y+15, r1	; 0x0f
    1d54:	18 8a       	std	Y+16, r1	; 0x10
    1d56:	1c 86       	std	Y+12, r1	; 0x0c
    1d58:	1b 86       	std	Y+11, r1	; 0x0b
    1d5a:	6a c0       	rjmp	.+212    	; 0x1e30 <__divsf3+0x14e>
    1d5c:	82 30       	cpi	r24, 0x02	; 2
    1d5e:	19 f4       	brne	.+6      	; 0x1d66 <__divsf3+0x84>
    1d60:	84 e0       	ldi	r24, 0x04	; 4
    1d62:	89 87       	std	Y+9, r24	; 0x09
    1d64:	65 c0       	rjmp	.+202    	; 0x1e30 <__divsf3+0x14e>
    1d66:	8b 85       	ldd	r24, Y+11	; 0x0b
    1d68:	9c 85       	ldd	r25, Y+12	; 0x0c
    1d6a:	2b 89       	ldd	r18, Y+19	; 0x13
    1d6c:	3c 89       	ldd	r19, Y+20	; 0x14
    1d6e:	82 1b       	sub	r24, r18
    1d70:	93 0b       	sbc	r25, r19
    1d72:	9c 87       	std	Y+12, r25	; 0x0c
    1d74:	8b 87       	std	Y+11, r24	; 0x0b
    1d76:	2d 85       	ldd	r18, Y+13	; 0x0d
    1d78:	3e 85       	ldd	r19, Y+14	; 0x0e
    1d7a:	4f 85       	ldd	r20, Y+15	; 0x0f
    1d7c:	58 89       	ldd	r21, Y+16	; 0x10
    1d7e:	ed 88       	ldd	r14, Y+21	; 0x15
    1d80:	fe 88       	ldd	r15, Y+22	; 0x16
    1d82:	0f 89       	ldd	r16, Y+23	; 0x17
    1d84:	18 8d       	ldd	r17, Y+24	; 0x18
    1d86:	2e 15       	cp	r18, r14
    1d88:	3f 05       	cpc	r19, r15
    1d8a:	40 07       	cpc	r20, r16
    1d8c:	51 07       	cpc	r21, r17
    1d8e:	38 f4       	brcc	.+14     	; 0x1d9e <__divsf3+0xbc>
    1d90:	22 0f       	add	r18, r18
    1d92:	33 1f       	adc	r19, r19
    1d94:	44 1f       	adc	r20, r20
    1d96:	55 1f       	adc	r21, r21
    1d98:	01 97       	sbiw	r24, 0x01	; 1
    1d9a:	9c 87       	std	Y+12, r25	; 0x0c
    1d9c:	8b 87       	std	Y+11, r24	; 0x0b
    1d9e:	6f e1       	ldi	r22, 0x1F	; 31
    1da0:	70 e0       	ldi	r23, 0x00	; 0
    1da2:	a1 2c       	mov	r10, r1
    1da4:	b1 2c       	mov	r11, r1
    1da6:	c1 2c       	mov	r12, r1
    1da8:	a0 e4       	ldi	r26, 0x40	; 64
    1daa:	da 2e       	mov	r13, r26
    1dac:	80 e0       	ldi	r24, 0x00	; 0
    1dae:	90 e0       	ldi	r25, 0x00	; 0
    1db0:	dc 01       	movw	r26, r24
    1db2:	2e 15       	cp	r18, r14
    1db4:	3f 05       	cpc	r19, r15
    1db6:	40 07       	cpc	r20, r16
    1db8:	51 07       	cpc	r21, r17
    1dba:	40 f0       	brcs	.+16     	; 0x1dcc <__divsf3+0xea>
    1dbc:	8a 29       	or	r24, r10
    1dbe:	9b 29       	or	r25, r11
    1dc0:	ac 29       	or	r26, r12
    1dc2:	bd 29       	or	r27, r13
    1dc4:	2e 19       	sub	r18, r14
    1dc6:	3f 09       	sbc	r19, r15
    1dc8:	40 0b       	sbc	r20, r16
    1dca:	51 0b       	sbc	r21, r17
    1dcc:	d6 94       	lsr	r13
    1dce:	c7 94       	ror	r12
    1dd0:	b7 94       	ror	r11
    1dd2:	a7 94       	ror	r10
    1dd4:	22 0f       	add	r18, r18
    1dd6:	33 1f       	adc	r19, r19
    1dd8:	44 1f       	adc	r20, r20
    1dda:	55 1f       	adc	r21, r21
    1ddc:	61 50       	subi	r22, 0x01	; 1
    1dde:	70 40       	sbci	r23, 0x00	; 0
    1de0:	41 f7       	brne	.-48     	; 0x1db2 <__divsf3+0xd0>
    1de2:	6f e7       	ldi	r22, 0x7F	; 127
    1de4:	e6 2e       	mov	r14, r22
    1de6:	f1 2c       	mov	r15, r1
    1de8:	01 2d       	mov	r16, r1
    1dea:	11 2d       	mov	r17, r1
    1dec:	e8 22       	and	r14, r24
    1dee:	f9 22       	and	r15, r25
    1df0:	0a 23       	and	r16, r26
    1df2:	1b 23       	and	r17, r27
    1df4:	60 e4       	ldi	r22, 0x40	; 64
    1df6:	e6 16       	cp	r14, r22
    1df8:	f1 04       	cpc	r15, r1
    1dfa:	01 05       	cpc	r16, r1
    1dfc:	11 05       	cpc	r17, r1
    1dfe:	61 f4       	brne	.+24     	; 0x1e18 <__divsf3+0x136>
    1e00:	87 fd       	sbrc	r24, 7
    1e02:	0a c0       	rjmp	.+20     	; 0x1e18 <__divsf3+0x136>
    1e04:	21 15       	cp	r18, r1
    1e06:	31 05       	cpc	r19, r1
    1e08:	41 05       	cpc	r20, r1
    1e0a:	51 05       	cpc	r21, r1
    1e0c:	29 f0       	breq	.+10     	; 0x1e18 <__divsf3+0x136>
    1e0e:	80 5c       	subi	r24, 0xC0	; 192
    1e10:	9f 4f       	sbci	r25, 0xFF	; 255
    1e12:	af 4f       	sbci	r26, 0xFF	; 255
    1e14:	bf 4f       	sbci	r27, 0xFF	; 255
    1e16:	80 78       	andi	r24, 0x80	; 128
    1e18:	8d 87       	std	Y+13, r24	; 0x0d
    1e1a:	9e 87       	std	Y+14, r25	; 0x0e
    1e1c:	af 87       	std	Y+15, r26	; 0x0f
    1e1e:	b8 8b       	std	Y+16, r27	; 0x10
    1e20:	8e 01       	movw	r16, r28
    1e22:	07 5f       	subi	r16, 0xF7	; 247
    1e24:	1f 4f       	sbci	r17, 0xFF	; 255
    1e26:	04 c0       	rjmp	.+8      	; 0x1e30 <__divsf3+0x14e>
    1e28:	87 01       	movw	r16, r14
    1e2a:	02 c0       	rjmp	.+4      	; 0x1e30 <__divsf3+0x14e>
    1e2c:	00 e6       	ldi	r16, 0x60	; 96
    1e2e:	10 e0       	ldi	r17, 0x00	; 0
    1e30:	c8 01       	movw	r24, r16
    1e32:	0e 94 bb 10 	call	0x2176	; 0x2176 <__pack_f>
    1e36:	68 96       	adiw	r28, 0x18	; 24
    1e38:	ea e0       	ldi	r30, 0x0A	; 10
    1e3a:	0c 94 6f 12 	jmp	0x24de	; 0x24de <__epilogue_restores__+0x10>

00001e3e <__gtsf2>:
    1e3e:	a8 e1       	ldi	r26, 0x18	; 24
    1e40:	b0 e0       	ldi	r27, 0x00	; 0
    1e42:	e5 e2       	ldi	r30, 0x25	; 37
    1e44:	ff e0       	ldi	r31, 0x0F	; 15
    1e46:	0c 94 57 12 	jmp	0x24ae	; 0x24ae <__prologue_saves__+0x18>
    1e4a:	69 83       	std	Y+1, r22	; 0x01
    1e4c:	7a 83       	std	Y+2, r23	; 0x02
    1e4e:	8b 83       	std	Y+3, r24	; 0x03
    1e50:	9c 83       	std	Y+4, r25	; 0x04
    1e52:	2d 83       	std	Y+5, r18	; 0x05
    1e54:	3e 83       	std	Y+6, r19	; 0x06
    1e56:	4f 83       	std	Y+7, r20	; 0x07
    1e58:	58 87       	std	Y+8, r21	; 0x08
    1e5a:	8e 01       	movw	r16, r28
    1e5c:	07 5f       	subi	r16, 0xF7	; 247
    1e5e:	1f 4f       	sbci	r17, 0xFF	; 255
    1e60:	ce 01       	movw	r24, r28
    1e62:	01 96       	adiw	r24, 0x01	; 1
    1e64:	b8 01       	movw	r22, r16
    1e66:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1e6a:	81 e1       	ldi	r24, 0x11	; 17
    1e6c:	e8 2e       	mov	r14, r24
    1e6e:	f1 2c       	mov	r15, r1
    1e70:	ec 0e       	add	r14, r28
    1e72:	fd 1e       	adc	r15, r29
    1e74:	ce 01       	movw	r24, r28
    1e76:	05 96       	adiw	r24, 0x05	; 5
    1e78:	b7 01       	movw	r22, r14
    1e7a:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1e7e:	89 85       	ldd	r24, Y+9	; 0x09
    1e80:	82 30       	cpi	r24, 0x02	; 2
    1e82:	40 f0       	brcs	.+16     	; 0x1e94 <__gtsf2+0x56>
    1e84:	89 89       	ldd	r24, Y+17	; 0x11
    1e86:	82 30       	cpi	r24, 0x02	; 2
    1e88:	28 f0       	brcs	.+10     	; 0x1e94 <__gtsf2+0x56>
    1e8a:	c8 01       	movw	r24, r16
    1e8c:	b7 01       	movw	r22, r14
    1e8e:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <__fpcmp_parts_f>
    1e92:	01 c0       	rjmp	.+2      	; 0x1e96 <__gtsf2+0x58>
    1e94:	8f ef       	ldi	r24, 0xFF	; 255
    1e96:	68 96       	adiw	r28, 0x18	; 24
    1e98:	e6 e0       	ldi	r30, 0x06	; 6
    1e9a:	0c 94 73 12 	jmp	0x24e6	; 0x24e6 <__epilogue_restores__+0x18>

00001e9e <__gesf2>:
    1e9e:	a8 e1       	ldi	r26, 0x18	; 24
    1ea0:	b0 e0       	ldi	r27, 0x00	; 0
    1ea2:	e5 e5       	ldi	r30, 0x55	; 85
    1ea4:	ff e0       	ldi	r31, 0x0F	; 15
    1ea6:	0c 94 57 12 	jmp	0x24ae	; 0x24ae <__prologue_saves__+0x18>
    1eaa:	69 83       	std	Y+1, r22	; 0x01
    1eac:	7a 83       	std	Y+2, r23	; 0x02
    1eae:	8b 83       	std	Y+3, r24	; 0x03
    1eb0:	9c 83       	std	Y+4, r25	; 0x04
    1eb2:	2d 83       	std	Y+5, r18	; 0x05
    1eb4:	3e 83       	std	Y+6, r19	; 0x06
    1eb6:	4f 83       	std	Y+7, r20	; 0x07
    1eb8:	58 87       	std	Y+8, r21	; 0x08
    1eba:	8e 01       	movw	r16, r28
    1ebc:	07 5f       	subi	r16, 0xF7	; 247
    1ebe:	1f 4f       	sbci	r17, 0xFF	; 255
    1ec0:	ce 01       	movw	r24, r28
    1ec2:	01 96       	adiw	r24, 0x01	; 1
    1ec4:	b8 01       	movw	r22, r16
    1ec6:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1eca:	81 e1       	ldi	r24, 0x11	; 17
    1ecc:	e8 2e       	mov	r14, r24
    1ece:	f1 2c       	mov	r15, r1
    1ed0:	ec 0e       	add	r14, r28
    1ed2:	fd 1e       	adc	r15, r29
    1ed4:	ce 01       	movw	r24, r28
    1ed6:	05 96       	adiw	r24, 0x05	; 5
    1ed8:	b7 01       	movw	r22, r14
    1eda:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1ede:	89 85       	ldd	r24, Y+9	; 0x09
    1ee0:	82 30       	cpi	r24, 0x02	; 2
    1ee2:	40 f0       	brcs	.+16     	; 0x1ef4 <__gesf2+0x56>
    1ee4:	89 89       	ldd	r24, Y+17	; 0x11
    1ee6:	82 30       	cpi	r24, 0x02	; 2
    1ee8:	28 f0       	brcs	.+10     	; 0x1ef4 <__gesf2+0x56>
    1eea:	c8 01       	movw	r24, r16
    1eec:	b7 01       	movw	r22, r14
    1eee:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <__fpcmp_parts_f>
    1ef2:	01 c0       	rjmp	.+2      	; 0x1ef6 <__gesf2+0x58>
    1ef4:	8f ef       	ldi	r24, 0xFF	; 255
    1ef6:	68 96       	adiw	r28, 0x18	; 24
    1ef8:	e6 e0       	ldi	r30, 0x06	; 6
    1efa:	0c 94 73 12 	jmp	0x24e6	; 0x24e6 <__epilogue_restores__+0x18>

00001efe <__ltsf2>:
    1efe:	a8 e1       	ldi	r26, 0x18	; 24
    1f00:	b0 e0       	ldi	r27, 0x00	; 0
    1f02:	e5 e8       	ldi	r30, 0x85	; 133
    1f04:	ff e0       	ldi	r31, 0x0F	; 15
    1f06:	0c 94 57 12 	jmp	0x24ae	; 0x24ae <__prologue_saves__+0x18>
    1f0a:	69 83       	std	Y+1, r22	; 0x01
    1f0c:	7a 83       	std	Y+2, r23	; 0x02
    1f0e:	8b 83       	std	Y+3, r24	; 0x03
    1f10:	9c 83       	std	Y+4, r25	; 0x04
    1f12:	2d 83       	std	Y+5, r18	; 0x05
    1f14:	3e 83       	std	Y+6, r19	; 0x06
    1f16:	4f 83       	std	Y+7, r20	; 0x07
    1f18:	58 87       	std	Y+8, r21	; 0x08
    1f1a:	8e 01       	movw	r16, r28
    1f1c:	07 5f       	subi	r16, 0xF7	; 247
    1f1e:	1f 4f       	sbci	r17, 0xFF	; 255
    1f20:	ce 01       	movw	r24, r28
    1f22:	01 96       	adiw	r24, 0x01	; 1
    1f24:	b8 01       	movw	r22, r16
    1f26:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1f2a:	81 e1       	ldi	r24, 0x11	; 17
    1f2c:	e8 2e       	mov	r14, r24
    1f2e:	f1 2c       	mov	r15, r1
    1f30:	ec 0e       	add	r14, r28
    1f32:	fd 1e       	adc	r15, r29
    1f34:	ce 01       	movw	r24, r28
    1f36:	05 96       	adiw	r24, 0x05	; 5
    1f38:	b7 01       	movw	r22, r14
    1f3a:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    1f3e:	89 85       	ldd	r24, Y+9	; 0x09
    1f40:	82 30       	cpi	r24, 0x02	; 2
    1f42:	40 f0       	brcs	.+16     	; 0x1f54 <__ltsf2+0x56>
    1f44:	89 89       	ldd	r24, Y+17	; 0x11
    1f46:	82 30       	cpi	r24, 0x02	; 2
    1f48:	28 f0       	brcs	.+10     	; 0x1f54 <__ltsf2+0x56>
    1f4a:	c8 01       	movw	r24, r16
    1f4c:	b7 01       	movw	r22, r14
    1f4e:	0e 94 f2 11 	call	0x23e4	; 0x23e4 <__fpcmp_parts_f>
    1f52:	01 c0       	rjmp	.+2      	; 0x1f56 <__ltsf2+0x58>
    1f54:	81 e0       	ldi	r24, 0x01	; 1
    1f56:	68 96       	adiw	r28, 0x18	; 24
    1f58:	e6 e0       	ldi	r30, 0x06	; 6
    1f5a:	0c 94 73 12 	jmp	0x24e6	; 0x24e6 <__epilogue_restores__+0x18>

00001f5e <__floatsisf>:
    1f5e:	a8 e0       	ldi	r26, 0x08	; 8
    1f60:	b0 e0       	ldi	r27, 0x00	; 0
    1f62:	e5 eb       	ldi	r30, 0xB5	; 181
    1f64:	ff e0       	ldi	r31, 0x0F	; 15
    1f66:	0c 94 57 12 	jmp	0x24ae	; 0x24ae <__prologue_saves__+0x18>
    1f6a:	7b 01       	movw	r14, r22
    1f6c:	8c 01       	movw	r16, r24
    1f6e:	83 e0       	ldi	r24, 0x03	; 3
    1f70:	89 83       	std	Y+1, r24	; 0x01
    1f72:	d8 01       	movw	r26, r16
    1f74:	c7 01       	movw	r24, r14
    1f76:	88 27       	eor	r24, r24
    1f78:	b7 fd       	sbrc	r27, 7
    1f7a:	83 95       	inc	r24
    1f7c:	99 27       	eor	r25, r25
    1f7e:	aa 27       	eor	r26, r26
    1f80:	bb 27       	eor	r27, r27
    1f82:	28 2f       	mov	r18, r24
    1f84:	8a 83       	std	Y+2, r24	; 0x02
    1f86:	e1 14       	cp	r14, r1
    1f88:	f1 04       	cpc	r15, r1
    1f8a:	01 05       	cpc	r16, r1
    1f8c:	11 05       	cpc	r17, r1
    1f8e:	19 f4       	brne	.+6      	; 0x1f96 <__floatsisf+0x38>
    1f90:	82 e0       	ldi	r24, 0x02	; 2
    1f92:	89 83       	std	Y+1, r24	; 0x01
    1f94:	37 c0       	rjmp	.+110    	; 0x2004 <__floatsisf+0xa6>
    1f96:	8e e1       	ldi	r24, 0x1E	; 30
    1f98:	90 e0       	ldi	r25, 0x00	; 0
    1f9a:	9c 83       	std	Y+4, r25	; 0x04
    1f9c:	8b 83       	std	Y+3, r24	; 0x03
    1f9e:	22 23       	and	r18, r18
    1fa0:	89 f0       	breq	.+34     	; 0x1fc4 <__floatsisf+0x66>
    1fa2:	80 e0       	ldi	r24, 0x00	; 0
    1fa4:	e8 16       	cp	r14, r24
    1fa6:	80 e0       	ldi	r24, 0x00	; 0
    1fa8:	f8 06       	cpc	r15, r24
    1faa:	80 e0       	ldi	r24, 0x00	; 0
    1fac:	08 07       	cpc	r16, r24
    1fae:	80 e8       	ldi	r24, 0x80	; 128
    1fb0:	18 07       	cpc	r17, r24
    1fb2:	69 f1       	breq	.+90     	; 0x200e <__floatsisf+0xb0>
    1fb4:	10 95       	com	r17
    1fb6:	00 95       	com	r16
    1fb8:	f0 94       	com	r15
    1fba:	e0 94       	com	r14
    1fbc:	e1 1c       	adc	r14, r1
    1fbe:	f1 1c       	adc	r15, r1
    1fc0:	01 1d       	adc	r16, r1
    1fc2:	11 1d       	adc	r17, r1
    1fc4:	ed 82       	std	Y+5, r14	; 0x05
    1fc6:	fe 82       	std	Y+6, r15	; 0x06
    1fc8:	0f 83       	std	Y+7, r16	; 0x07
    1fca:	18 87       	std	Y+8, r17	; 0x08
    1fcc:	c8 01       	movw	r24, r16
    1fce:	b7 01       	movw	r22, r14
    1fd0:	0e 94 61 10 	call	0x20c2	; 0x20c2 <__clzsi2>
    1fd4:	9c 01       	movw	r18, r24
    1fd6:	21 50       	subi	r18, 0x01	; 1
    1fd8:	30 40       	sbci	r19, 0x00	; 0
    1fda:	12 16       	cp	r1, r18
    1fdc:	13 06       	cpc	r1, r19
    1fde:	94 f4       	brge	.+36     	; 0x2004 <__floatsisf+0xa6>
    1fe0:	02 2e       	mov	r0, r18
    1fe2:	04 c0       	rjmp	.+8      	; 0x1fec <__floatsisf+0x8e>
    1fe4:	ee 0c       	add	r14, r14
    1fe6:	ff 1c       	adc	r15, r15
    1fe8:	00 1f       	adc	r16, r16
    1fea:	11 1f       	adc	r17, r17
    1fec:	0a 94       	dec	r0
    1fee:	d2 f7       	brpl	.-12     	; 0x1fe4 <__floatsisf+0x86>
    1ff0:	ed 82       	std	Y+5, r14	; 0x05
    1ff2:	fe 82       	std	Y+6, r15	; 0x06
    1ff4:	0f 83       	std	Y+7, r16	; 0x07
    1ff6:	18 87       	std	Y+8, r17	; 0x08
    1ff8:	8e e1       	ldi	r24, 0x1E	; 30
    1ffa:	90 e0       	ldi	r25, 0x00	; 0
    1ffc:	82 1b       	sub	r24, r18
    1ffe:	93 0b       	sbc	r25, r19
    2000:	9c 83       	std	Y+4, r25	; 0x04
    2002:	8b 83       	std	Y+3, r24	; 0x03
    2004:	ce 01       	movw	r24, r28
    2006:	01 96       	adiw	r24, 0x01	; 1
    2008:	0e 94 bb 10 	call	0x2176	; 0x2176 <__pack_f>
    200c:	04 c0       	rjmp	.+8      	; 0x2016 <__floatsisf+0xb8>
    200e:	60 e0       	ldi	r22, 0x00	; 0
    2010:	70 e0       	ldi	r23, 0x00	; 0
    2012:	80 e0       	ldi	r24, 0x00	; 0
    2014:	9f ec       	ldi	r25, 0xCF	; 207
    2016:	28 96       	adiw	r28, 0x08	; 8
    2018:	e6 e0       	ldi	r30, 0x06	; 6
    201a:	0c 94 73 12 	jmp	0x24e6	; 0x24e6 <__epilogue_restores__+0x18>

0000201e <__fixsfsi>:
    201e:	ac e0       	ldi	r26, 0x0C	; 12
    2020:	b0 e0       	ldi	r27, 0x00	; 0
    2022:	e5 e1       	ldi	r30, 0x15	; 21
    2024:	f0 e1       	ldi	r31, 0x10	; 16
    2026:	0c 94 5b 12 	jmp	0x24b6	; 0x24b6 <__prologue_saves__+0x20>
    202a:	69 83       	std	Y+1, r22	; 0x01
    202c:	7a 83       	std	Y+2, r23	; 0x02
    202e:	8b 83       	std	Y+3, r24	; 0x03
    2030:	9c 83       	std	Y+4, r25	; 0x04
    2032:	ce 01       	movw	r24, r28
    2034:	01 96       	adiw	r24, 0x01	; 1
    2036:	be 01       	movw	r22, r28
    2038:	6b 5f       	subi	r22, 0xFB	; 251
    203a:	7f 4f       	sbci	r23, 0xFF	; 255
    203c:	0e 94 89 11 	call	0x2312	; 0x2312 <__unpack_f>
    2040:	8d 81       	ldd	r24, Y+5	; 0x05
    2042:	82 30       	cpi	r24, 0x02	; 2
    2044:	81 f1       	breq	.+96     	; 0x20a6 <__fixsfsi+0x88>
    2046:	82 30       	cpi	r24, 0x02	; 2
    2048:	70 f1       	brcs	.+92     	; 0x20a6 <__fixsfsi+0x88>
    204a:	84 30       	cpi	r24, 0x04	; 4
    204c:	21 f4       	brne	.+8      	; 0x2056 <__fixsfsi+0x38>
    204e:	8e 81       	ldd	r24, Y+6	; 0x06
    2050:	88 23       	and	r24, r24
    2052:	69 f1       	breq	.+90     	; 0x20ae <__fixsfsi+0x90>
    2054:	0a c0       	rjmp	.+20     	; 0x206a <__fixsfsi+0x4c>
    2056:	2f 81       	ldd	r18, Y+7	; 0x07
    2058:	38 85       	ldd	r19, Y+8	; 0x08
    205a:	37 fd       	sbrc	r19, 7
    205c:	24 c0       	rjmp	.+72     	; 0x20a6 <__fixsfsi+0x88>
    205e:	6e 81       	ldd	r22, Y+6	; 0x06
    2060:	2f 31       	cpi	r18, 0x1F	; 31
    2062:	31 05       	cpc	r19, r1
    2064:	3c f0       	brlt	.+14     	; 0x2074 <__fixsfsi+0x56>
    2066:	66 23       	and	r22, r22
    2068:	11 f1       	breq	.+68     	; 0x20ae <__fixsfsi+0x90>
    206a:	20 e0       	ldi	r18, 0x00	; 0
    206c:	30 e0       	ldi	r19, 0x00	; 0
    206e:	40 e0       	ldi	r20, 0x00	; 0
    2070:	50 e8       	ldi	r21, 0x80	; 128
    2072:	21 c0       	rjmp	.+66     	; 0x20b6 <__fixsfsi+0x98>
    2074:	8e e1       	ldi	r24, 0x1E	; 30
    2076:	90 e0       	ldi	r25, 0x00	; 0
    2078:	82 1b       	sub	r24, r18
    207a:	93 0b       	sbc	r25, r19
    207c:	29 85       	ldd	r18, Y+9	; 0x09
    207e:	3a 85       	ldd	r19, Y+10	; 0x0a
    2080:	4b 85       	ldd	r20, Y+11	; 0x0b
    2082:	5c 85       	ldd	r21, Y+12	; 0x0c
    2084:	04 c0       	rjmp	.+8      	; 0x208e <__fixsfsi+0x70>
    2086:	56 95       	lsr	r21
    2088:	47 95       	ror	r20
    208a:	37 95       	ror	r19
    208c:	27 95       	ror	r18
    208e:	8a 95       	dec	r24
    2090:	d2 f7       	brpl	.-12     	; 0x2086 <__fixsfsi+0x68>
    2092:	66 23       	and	r22, r22
    2094:	81 f0       	breq	.+32     	; 0x20b6 <__fixsfsi+0x98>
    2096:	50 95       	com	r21
    2098:	40 95       	com	r20
    209a:	30 95       	com	r19
    209c:	21 95       	neg	r18
    209e:	3f 4f       	sbci	r19, 0xFF	; 255
    20a0:	4f 4f       	sbci	r20, 0xFF	; 255
    20a2:	5f 4f       	sbci	r21, 0xFF	; 255
    20a4:	08 c0       	rjmp	.+16     	; 0x20b6 <__fixsfsi+0x98>
    20a6:	20 e0       	ldi	r18, 0x00	; 0
    20a8:	30 e0       	ldi	r19, 0x00	; 0
    20aa:	a9 01       	movw	r20, r18
    20ac:	04 c0       	rjmp	.+8      	; 0x20b6 <__fixsfsi+0x98>
    20ae:	2f ef       	ldi	r18, 0xFF	; 255
    20b0:	3f ef       	ldi	r19, 0xFF	; 255
    20b2:	4f ef       	ldi	r20, 0xFF	; 255
    20b4:	5f e7       	ldi	r21, 0x7F	; 127
    20b6:	b9 01       	movw	r22, r18
    20b8:	ca 01       	movw	r24, r20
    20ba:	2c 96       	adiw	r28, 0x0c	; 12
    20bc:	e2 e0       	ldi	r30, 0x02	; 2
    20be:	0c 94 77 12 	jmp	0x24ee	; 0x24ee <__epilogue_restores__+0x20>

000020c2 <__clzsi2>:
    20c2:	af 92       	push	r10
    20c4:	bf 92       	push	r11
    20c6:	cf 92       	push	r12
    20c8:	df 92       	push	r13
    20ca:	ef 92       	push	r14
    20cc:	ff 92       	push	r15
    20ce:	0f 93       	push	r16
    20d0:	1f 93       	push	r17
    20d2:	7b 01       	movw	r14, r22
    20d4:	8c 01       	movw	r16, r24
    20d6:	80 e0       	ldi	r24, 0x00	; 0
    20d8:	e8 16       	cp	r14, r24
    20da:	80 e0       	ldi	r24, 0x00	; 0
    20dc:	f8 06       	cpc	r15, r24
    20de:	81 e0       	ldi	r24, 0x01	; 1
    20e0:	08 07       	cpc	r16, r24
    20e2:	80 e0       	ldi	r24, 0x00	; 0
    20e4:	18 07       	cpc	r17, r24
    20e6:	58 f4       	brcc	.+22     	; 0x20fe <__clzsi2+0x3c>
    20e8:	ef ef       	ldi	r30, 0xFF	; 255
    20ea:	ee 16       	cp	r14, r30
    20ec:	f1 04       	cpc	r15, r1
    20ee:	01 05       	cpc	r16, r1
    20f0:	11 05       	cpc	r17, r1
    20f2:	09 f0       	breq	.+2      	; 0x20f6 <__clzsi2+0x34>
    20f4:	90 f4       	brcc	.+36     	; 0x211a <__clzsi2+0x58>
    20f6:	80 e0       	ldi	r24, 0x00	; 0
    20f8:	90 e0       	ldi	r25, 0x00	; 0
    20fa:	dc 01       	movw	r26, r24
    20fc:	17 c0       	rjmp	.+46     	; 0x212c <__clzsi2+0x6a>
    20fe:	f0 e0       	ldi	r31, 0x00	; 0
    2100:	ef 16       	cp	r14, r31
    2102:	f0 e0       	ldi	r31, 0x00	; 0
    2104:	ff 06       	cpc	r15, r31
    2106:	f0 e0       	ldi	r31, 0x00	; 0
    2108:	0f 07       	cpc	r16, r31
    210a:	f1 e0       	ldi	r31, 0x01	; 1
    210c:	1f 07       	cpc	r17, r31
    210e:	50 f4       	brcc	.+20     	; 0x2124 <__clzsi2+0x62>
    2110:	80 e1       	ldi	r24, 0x10	; 16
    2112:	90 e0       	ldi	r25, 0x00	; 0
    2114:	a0 e0       	ldi	r26, 0x00	; 0
    2116:	b0 e0       	ldi	r27, 0x00	; 0
    2118:	09 c0       	rjmp	.+18     	; 0x212c <__clzsi2+0x6a>
    211a:	88 e0       	ldi	r24, 0x08	; 8
    211c:	90 e0       	ldi	r25, 0x00	; 0
    211e:	a0 e0       	ldi	r26, 0x00	; 0
    2120:	b0 e0       	ldi	r27, 0x00	; 0
    2122:	04 c0       	rjmp	.+8      	; 0x212c <__clzsi2+0x6a>
    2124:	88 e1       	ldi	r24, 0x18	; 24
    2126:	90 e0       	ldi	r25, 0x00	; 0
    2128:	a0 e0       	ldi	r26, 0x00	; 0
    212a:	b0 e0       	ldi	r27, 0x00	; 0
    212c:	20 e2       	ldi	r18, 0x20	; 32
    212e:	30 e0       	ldi	r19, 0x00	; 0
    2130:	40 e0       	ldi	r20, 0x00	; 0
    2132:	50 e0       	ldi	r21, 0x00	; 0
    2134:	28 1b       	sub	r18, r24
    2136:	39 0b       	sbc	r19, r25
    2138:	4a 0b       	sbc	r20, r26
    213a:	5b 0b       	sbc	r21, r27
    213c:	57 01       	movw	r10, r14
    213e:	68 01       	movw	r12, r16
    2140:	04 c0       	rjmp	.+8      	; 0x214a <__clzsi2+0x88>
    2142:	d6 94       	lsr	r13
    2144:	c7 94       	ror	r12
    2146:	b7 94       	ror	r11
    2148:	a7 94       	ror	r10
    214a:	8a 95       	dec	r24
    214c:	d2 f7       	brpl	.-12     	; 0x2142 <__clzsi2+0x80>
    214e:	d6 01       	movw	r26, r12
    2150:	c5 01       	movw	r24, r10
    2152:	88 59       	subi	r24, 0x98	; 152
    2154:	9f 4f       	sbci	r25, 0xFF	; 255
    2156:	fc 01       	movw	r30, r24
    2158:	80 81       	ld	r24, Z
    215a:	28 1b       	sub	r18, r24
    215c:	31 09       	sbc	r19, r1
    215e:	41 09       	sbc	r20, r1
    2160:	51 09       	sbc	r21, r1
    2162:	c9 01       	movw	r24, r18
    2164:	1f 91       	pop	r17
    2166:	0f 91       	pop	r16
    2168:	ff 90       	pop	r15
    216a:	ef 90       	pop	r14
    216c:	df 90       	pop	r13
    216e:	cf 90       	pop	r12
    2170:	bf 90       	pop	r11
    2172:	af 90       	pop	r10
    2174:	08 95       	ret

00002176 <__pack_f>:
    2176:	ef 92       	push	r14
    2178:	ff 92       	push	r15
    217a:	0f 93       	push	r16
    217c:	1f 93       	push	r17
    217e:	cf 93       	push	r28
    2180:	df 93       	push	r29
    2182:	fc 01       	movw	r30, r24
    2184:	24 81       	ldd	r18, Z+4	; 0x04
    2186:	35 81       	ldd	r19, Z+5	; 0x05
    2188:	46 81       	ldd	r20, Z+6	; 0x06
    218a:	57 81       	ldd	r21, Z+7	; 0x07
    218c:	61 81       	ldd	r22, Z+1	; 0x01
    218e:	80 81       	ld	r24, Z
    2190:	82 30       	cpi	r24, 0x02	; 2
    2192:	20 f4       	brcc	.+8      	; 0x219c <__pack_f+0x26>
    2194:	40 61       	ori	r20, 0x10	; 16
    2196:	ef ef       	ldi	r30, 0xFF	; 255
    2198:	f0 e0       	ldi	r31, 0x00	; 0
    219a:	a3 c0       	rjmp	.+326    	; 0x22e2 <__pack_f+0x16c>
    219c:	84 30       	cpi	r24, 0x04	; 4
    219e:	09 f4       	brne	.+2      	; 0x21a2 <__pack_f+0x2c>
    21a0:	9b c0       	rjmp	.+310    	; 0x22d8 <__pack_f+0x162>
    21a2:	82 30       	cpi	r24, 0x02	; 2
    21a4:	09 f4       	brne	.+2      	; 0x21a8 <__pack_f+0x32>
    21a6:	92 c0       	rjmp	.+292    	; 0x22cc <__pack_f+0x156>
    21a8:	21 15       	cp	r18, r1
    21aa:	31 05       	cpc	r19, r1
    21ac:	41 05       	cpc	r20, r1
    21ae:	51 05       	cpc	r21, r1
    21b0:	09 f4       	brne	.+2      	; 0x21b4 <__pack_f+0x3e>
    21b2:	8f c0       	rjmp	.+286    	; 0x22d2 <__pack_f+0x15c>
    21b4:	02 80       	ldd	r0, Z+2	; 0x02
    21b6:	f3 81       	ldd	r31, Z+3	; 0x03
    21b8:	e0 2d       	mov	r30, r0
    21ba:	8f ef       	ldi	r24, 0xFF	; 255
    21bc:	e2 38       	cpi	r30, 0x82	; 130
    21be:	f8 07       	cpc	r31, r24
    21c0:	0c f0       	brlt	.+2      	; 0x21c4 <__pack_f+0x4e>
    21c2:	5a c0       	rjmp	.+180    	; 0x2278 <__pack_f+0x102>
    21c4:	c2 e8       	ldi	r28, 0x82	; 130
    21c6:	df ef       	ldi	r29, 0xFF	; 255
    21c8:	ce 1b       	sub	r28, r30
    21ca:	df 0b       	sbc	r29, r31
    21cc:	ca 31       	cpi	r28, 0x1A	; 26
    21ce:	d1 05       	cpc	r29, r1
    21d0:	6c f5       	brge	.+90     	; 0x222c <__pack_f+0xb6>
    21d2:	79 01       	movw	r14, r18
    21d4:	8a 01       	movw	r16, r20
    21d6:	0c 2e       	mov	r0, r28
    21d8:	04 c0       	rjmp	.+8      	; 0x21e2 <__pack_f+0x6c>
    21da:	16 95       	lsr	r17
    21dc:	07 95       	ror	r16
    21de:	f7 94       	ror	r15
    21e0:	e7 94       	ror	r14
    21e2:	0a 94       	dec	r0
    21e4:	d2 f7       	brpl	.-12     	; 0x21da <__pack_f+0x64>
    21e6:	81 e0       	ldi	r24, 0x01	; 1
    21e8:	90 e0       	ldi	r25, 0x00	; 0
    21ea:	a0 e0       	ldi	r26, 0x00	; 0
    21ec:	b0 e0       	ldi	r27, 0x00	; 0
    21ee:	0c 2e       	mov	r0, r28
    21f0:	04 c0       	rjmp	.+8      	; 0x21fa <__pack_f+0x84>
    21f2:	88 0f       	add	r24, r24
    21f4:	99 1f       	adc	r25, r25
    21f6:	aa 1f       	adc	r26, r26
    21f8:	bb 1f       	adc	r27, r27
    21fa:	0a 94       	dec	r0
    21fc:	d2 f7       	brpl	.-12     	; 0x21f2 <__pack_f+0x7c>
    21fe:	01 97       	sbiw	r24, 0x01	; 1
    2200:	a1 09       	sbc	r26, r1
    2202:	b1 09       	sbc	r27, r1
    2204:	82 23       	and	r24, r18
    2206:	93 23       	and	r25, r19
    2208:	a4 23       	and	r26, r20
    220a:	b5 23       	and	r27, r21
    220c:	21 e0       	ldi	r18, 0x01	; 1
    220e:	30 e0       	ldi	r19, 0x00	; 0
    2210:	40 e0       	ldi	r20, 0x00	; 0
    2212:	50 e0       	ldi	r21, 0x00	; 0
    2214:	00 97       	sbiw	r24, 0x00	; 0
    2216:	a1 05       	cpc	r26, r1
    2218:	b1 05       	cpc	r27, r1
    221a:	19 f4       	brne	.+6      	; 0x2222 <__pack_f+0xac>
    221c:	20 e0       	ldi	r18, 0x00	; 0
    221e:	30 e0       	ldi	r19, 0x00	; 0
    2220:	a9 01       	movw	r20, r18
    2222:	2e 29       	or	r18, r14
    2224:	3f 29       	or	r19, r15
    2226:	40 2b       	or	r20, r16
    2228:	51 2b       	or	r21, r17
    222a:	03 c0       	rjmp	.+6      	; 0x2232 <__pack_f+0xbc>
    222c:	20 e0       	ldi	r18, 0x00	; 0
    222e:	30 e0       	ldi	r19, 0x00	; 0
    2230:	a9 01       	movw	r20, r18
    2232:	da 01       	movw	r26, r20
    2234:	c9 01       	movw	r24, r18
    2236:	8f 77       	andi	r24, 0x7F	; 127
    2238:	90 70       	andi	r25, 0x00	; 0
    223a:	a0 70       	andi	r26, 0x00	; 0
    223c:	b0 70       	andi	r27, 0x00	; 0
    223e:	80 34       	cpi	r24, 0x40	; 64
    2240:	91 05       	cpc	r25, r1
    2242:	a1 05       	cpc	r26, r1
    2244:	b1 05       	cpc	r27, r1
    2246:	39 f4       	brne	.+14     	; 0x2256 <__pack_f+0xe0>
    2248:	27 ff       	sbrs	r18, 7
    224a:	09 c0       	rjmp	.+18     	; 0x225e <__pack_f+0xe8>
    224c:	20 5c       	subi	r18, 0xC0	; 192
    224e:	3f 4f       	sbci	r19, 0xFF	; 255
    2250:	4f 4f       	sbci	r20, 0xFF	; 255
    2252:	5f 4f       	sbci	r21, 0xFF	; 255
    2254:	04 c0       	rjmp	.+8      	; 0x225e <__pack_f+0xe8>
    2256:	21 5c       	subi	r18, 0xC1	; 193
    2258:	3f 4f       	sbci	r19, 0xFF	; 255
    225a:	4f 4f       	sbci	r20, 0xFF	; 255
    225c:	5f 4f       	sbci	r21, 0xFF	; 255
    225e:	e1 e0       	ldi	r30, 0x01	; 1
    2260:	f0 e0       	ldi	r31, 0x00	; 0
    2262:	20 30       	cpi	r18, 0x00	; 0
    2264:	80 e0       	ldi	r24, 0x00	; 0
    2266:	38 07       	cpc	r19, r24
    2268:	80 e0       	ldi	r24, 0x00	; 0
    226a:	48 07       	cpc	r20, r24
    226c:	80 e4       	ldi	r24, 0x40	; 64
    226e:	58 07       	cpc	r21, r24
    2270:	28 f5       	brcc	.+74     	; 0x22bc <__pack_f+0x146>
    2272:	e0 e0       	ldi	r30, 0x00	; 0
    2274:	f0 e0       	ldi	r31, 0x00	; 0
    2276:	22 c0       	rjmp	.+68     	; 0x22bc <__pack_f+0x146>
    2278:	e0 38       	cpi	r30, 0x80	; 128
    227a:	f1 05       	cpc	r31, r1
    227c:	6c f5       	brge	.+90     	; 0x22d8 <__pack_f+0x162>
    227e:	e1 58       	subi	r30, 0x81	; 129
    2280:	ff 4f       	sbci	r31, 0xFF	; 255
    2282:	da 01       	movw	r26, r20
    2284:	c9 01       	movw	r24, r18
    2286:	8f 77       	andi	r24, 0x7F	; 127
    2288:	90 70       	andi	r25, 0x00	; 0
    228a:	a0 70       	andi	r26, 0x00	; 0
    228c:	b0 70       	andi	r27, 0x00	; 0
    228e:	80 34       	cpi	r24, 0x40	; 64
    2290:	91 05       	cpc	r25, r1
    2292:	a1 05       	cpc	r26, r1
    2294:	b1 05       	cpc	r27, r1
    2296:	39 f4       	brne	.+14     	; 0x22a6 <__pack_f+0x130>
    2298:	27 ff       	sbrs	r18, 7
    229a:	09 c0       	rjmp	.+18     	; 0x22ae <__pack_f+0x138>
    229c:	20 5c       	subi	r18, 0xC0	; 192
    229e:	3f 4f       	sbci	r19, 0xFF	; 255
    22a0:	4f 4f       	sbci	r20, 0xFF	; 255
    22a2:	5f 4f       	sbci	r21, 0xFF	; 255
    22a4:	04 c0       	rjmp	.+8      	; 0x22ae <__pack_f+0x138>
    22a6:	21 5c       	subi	r18, 0xC1	; 193
    22a8:	3f 4f       	sbci	r19, 0xFF	; 255
    22aa:	4f 4f       	sbci	r20, 0xFF	; 255
    22ac:	5f 4f       	sbci	r21, 0xFF	; 255
    22ae:	57 ff       	sbrs	r21, 7
    22b0:	05 c0       	rjmp	.+10     	; 0x22bc <__pack_f+0x146>
    22b2:	56 95       	lsr	r21
    22b4:	47 95       	ror	r20
    22b6:	37 95       	ror	r19
    22b8:	27 95       	ror	r18
    22ba:	31 96       	adiw	r30, 0x01	; 1
    22bc:	87 e0       	ldi	r24, 0x07	; 7
    22be:	56 95       	lsr	r21
    22c0:	47 95       	ror	r20
    22c2:	37 95       	ror	r19
    22c4:	27 95       	ror	r18
    22c6:	8a 95       	dec	r24
    22c8:	d1 f7       	brne	.-12     	; 0x22be <__pack_f+0x148>
    22ca:	0b c0       	rjmp	.+22     	; 0x22e2 <__pack_f+0x16c>
    22cc:	e0 e0       	ldi	r30, 0x00	; 0
    22ce:	f0 e0       	ldi	r31, 0x00	; 0
    22d0:	05 c0       	rjmp	.+10     	; 0x22dc <__pack_f+0x166>
    22d2:	e0 e0       	ldi	r30, 0x00	; 0
    22d4:	f0 e0       	ldi	r31, 0x00	; 0
    22d6:	05 c0       	rjmp	.+10     	; 0x22e2 <__pack_f+0x16c>
    22d8:	ef ef       	ldi	r30, 0xFF	; 255
    22da:	f0 e0       	ldi	r31, 0x00	; 0
    22dc:	20 e0       	ldi	r18, 0x00	; 0
    22de:	30 e0       	ldi	r19, 0x00	; 0
    22e0:	a9 01       	movw	r20, r18
    22e2:	8e 2f       	mov	r24, r30
    22e4:	87 95       	ror	r24
    22e6:	88 27       	eor	r24, r24
    22e8:	87 95       	ror	r24
    22ea:	94 2f       	mov	r25, r20
    22ec:	9f 77       	andi	r25, 0x7F	; 127
    22ee:	67 95       	ror	r22
    22f0:	66 27       	eor	r22, r22
    22f2:	67 95       	ror	r22
    22f4:	e6 95       	lsr	r30
    22f6:	e2 2e       	mov	r14, r18
    22f8:	a9 2f       	mov	r26, r25
    22fa:	a8 2b       	or	r26, r24
    22fc:	fe 2f       	mov	r31, r30
    22fe:	f6 2b       	or	r31, r22
    2300:	62 2f       	mov	r22, r18
    2302:	73 2f       	mov	r23, r19
    2304:	8a 2f       	mov	r24, r26
    2306:	9f 2f       	mov	r25, r31
    2308:	cd b7       	in	r28, 0x3d	; 61
    230a:	de b7       	in	r29, 0x3e	; 62
    230c:	e6 e0       	ldi	r30, 0x06	; 6
    230e:	0c 94 73 12 	jmp	0x24e6	; 0x24e6 <__epilogue_restores__+0x18>

00002312 <__unpack_f>:
    2312:	dc 01       	movw	r26, r24
    2314:	fb 01       	movw	r30, r22
    2316:	2c 91       	ld	r18, X
    2318:	11 96       	adiw	r26, 0x01	; 1
    231a:	3c 91       	ld	r19, X
    231c:	11 97       	sbiw	r26, 0x01	; 1
    231e:	12 96       	adiw	r26, 0x02	; 2
    2320:	8c 91       	ld	r24, X
    2322:	12 97       	sbiw	r26, 0x02	; 2
    2324:	48 2f       	mov	r20, r24
    2326:	4f 77       	andi	r20, 0x7F	; 127
    2328:	50 e0       	ldi	r21, 0x00	; 0
    232a:	98 2f       	mov	r25, r24
    232c:	99 1f       	adc	r25, r25
    232e:	99 27       	eor	r25, r25
    2330:	99 1f       	adc	r25, r25
    2332:	13 96       	adiw	r26, 0x03	; 3
    2334:	6c 91       	ld	r22, X
    2336:	13 97       	sbiw	r26, 0x03	; 3
    2338:	86 2f       	mov	r24, r22
    233a:	88 0f       	add	r24, r24
    233c:	89 2b       	or	r24, r25
    233e:	90 e0       	ldi	r25, 0x00	; 0
    2340:	66 1f       	adc	r22, r22
    2342:	66 27       	eor	r22, r22
    2344:	66 1f       	adc	r22, r22
    2346:	61 83       	std	Z+1, r22	; 0x01
    2348:	00 97       	sbiw	r24, 0x00	; 0
    234a:	39 f5       	brne	.+78     	; 0x239a <__unpack_f+0x88>
    234c:	21 15       	cp	r18, r1
    234e:	31 05       	cpc	r19, r1
    2350:	41 05       	cpc	r20, r1
    2352:	51 05       	cpc	r21, r1
    2354:	11 f4       	brne	.+4      	; 0x235a <__unpack_f+0x48>
    2356:	82 e0       	ldi	r24, 0x02	; 2
    2358:	29 c0       	rjmp	.+82     	; 0x23ac <__unpack_f+0x9a>
    235a:	82 e8       	ldi	r24, 0x82	; 130
    235c:	9f ef       	ldi	r25, 0xFF	; 255
    235e:	93 83       	std	Z+3, r25	; 0x03
    2360:	82 83       	std	Z+2, r24	; 0x02
    2362:	67 e0       	ldi	r22, 0x07	; 7
    2364:	22 0f       	add	r18, r18
    2366:	33 1f       	adc	r19, r19
    2368:	44 1f       	adc	r20, r20
    236a:	55 1f       	adc	r21, r21
    236c:	6a 95       	dec	r22
    236e:	d1 f7       	brne	.-12     	; 0x2364 <__unpack_f+0x52>
    2370:	83 e0       	ldi	r24, 0x03	; 3
    2372:	80 83       	st	Z, r24
    2374:	09 c0       	rjmp	.+18     	; 0x2388 <__unpack_f+0x76>
    2376:	22 0f       	add	r18, r18
    2378:	33 1f       	adc	r19, r19
    237a:	44 1f       	adc	r20, r20
    237c:	55 1f       	adc	r21, r21
    237e:	82 81       	ldd	r24, Z+2	; 0x02
    2380:	93 81       	ldd	r25, Z+3	; 0x03
    2382:	01 97       	sbiw	r24, 0x01	; 1
    2384:	93 83       	std	Z+3, r25	; 0x03
    2386:	82 83       	std	Z+2, r24	; 0x02
    2388:	20 30       	cpi	r18, 0x00	; 0
    238a:	80 e0       	ldi	r24, 0x00	; 0
    238c:	38 07       	cpc	r19, r24
    238e:	80 e0       	ldi	r24, 0x00	; 0
    2390:	48 07       	cpc	r20, r24
    2392:	80 e4       	ldi	r24, 0x40	; 64
    2394:	58 07       	cpc	r21, r24
    2396:	78 f3       	brcs	.-34     	; 0x2376 <__unpack_f+0x64>
    2398:	20 c0       	rjmp	.+64     	; 0x23da <__unpack_f+0xc8>
    239a:	8f 3f       	cpi	r24, 0xFF	; 255
    239c:	91 05       	cpc	r25, r1
    239e:	79 f4       	brne	.+30     	; 0x23be <__unpack_f+0xac>
    23a0:	21 15       	cp	r18, r1
    23a2:	31 05       	cpc	r19, r1
    23a4:	41 05       	cpc	r20, r1
    23a6:	51 05       	cpc	r21, r1
    23a8:	19 f4       	brne	.+6      	; 0x23b0 <__unpack_f+0x9e>
    23aa:	84 e0       	ldi	r24, 0x04	; 4
    23ac:	80 83       	st	Z, r24
    23ae:	08 95       	ret
    23b0:	44 ff       	sbrs	r20, 4
    23b2:	03 c0       	rjmp	.+6      	; 0x23ba <__unpack_f+0xa8>
    23b4:	81 e0       	ldi	r24, 0x01	; 1
    23b6:	80 83       	st	Z, r24
    23b8:	10 c0       	rjmp	.+32     	; 0x23da <__unpack_f+0xc8>
    23ba:	10 82       	st	Z, r1
    23bc:	0e c0       	rjmp	.+28     	; 0x23da <__unpack_f+0xc8>
    23be:	8f 57       	subi	r24, 0x7F	; 127
    23c0:	90 40       	sbci	r25, 0x00	; 0
    23c2:	93 83       	std	Z+3, r25	; 0x03
    23c4:	82 83       	std	Z+2, r24	; 0x02
    23c6:	83 e0       	ldi	r24, 0x03	; 3
    23c8:	80 83       	st	Z, r24
    23ca:	87 e0       	ldi	r24, 0x07	; 7
    23cc:	22 0f       	add	r18, r18
    23ce:	33 1f       	adc	r19, r19
    23d0:	44 1f       	adc	r20, r20
    23d2:	55 1f       	adc	r21, r21
    23d4:	8a 95       	dec	r24
    23d6:	d1 f7       	brne	.-12     	; 0x23cc <__unpack_f+0xba>
    23d8:	50 64       	ori	r21, 0x40	; 64
    23da:	24 83       	std	Z+4, r18	; 0x04
    23dc:	35 83       	std	Z+5, r19	; 0x05
    23de:	46 83       	std	Z+6, r20	; 0x06
    23e0:	57 83       	std	Z+7, r21	; 0x07
    23e2:	08 95       	ret

000023e4 <__fpcmp_parts_f>:
    23e4:	fc 01       	movw	r30, r24
    23e6:	db 01       	movw	r26, r22
    23e8:	90 81       	ld	r25, Z
    23ea:	92 30       	cpi	r25, 0x02	; 2
    23ec:	08 f4       	brcc	.+2      	; 0x23f0 <__fpcmp_parts_f+0xc>
    23ee:	49 c0       	rjmp	.+146    	; 0x2482 <__fpcmp_parts_f+0x9e>
    23f0:	8c 91       	ld	r24, X
    23f2:	82 30       	cpi	r24, 0x02	; 2
    23f4:	08 f4       	brcc	.+2      	; 0x23f8 <__fpcmp_parts_f+0x14>
    23f6:	45 c0       	rjmp	.+138    	; 0x2482 <__fpcmp_parts_f+0x9e>
    23f8:	94 30       	cpi	r25, 0x04	; 4
    23fa:	51 f4       	brne	.+20     	; 0x2410 <__fpcmp_parts_f+0x2c>
    23fc:	61 81       	ldd	r22, Z+1	; 0x01
    23fe:	84 30       	cpi	r24, 0x04	; 4
    2400:	b1 f5       	brne	.+108    	; 0x246e <__fpcmp_parts_f+0x8a>
    2402:	11 96       	adiw	r26, 0x01	; 1
    2404:	2c 91       	ld	r18, X
    2406:	11 97       	sbiw	r26, 0x01	; 1
    2408:	30 e0       	ldi	r19, 0x00	; 0
    240a:	26 1b       	sub	r18, r22
    240c:	31 09       	sbc	r19, r1
    240e:	41 c0       	rjmp	.+130    	; 0x2492 <__fpcmp_parts_f+0xae>
    2410:	84 30       	cpi	r24, 0x04	; 4
    2412:	21 f0       	breq	.+8      	; 0x241c <__fpcmp_parts_f+0x38>
    2414:	92 30       	cpi	r25, 0x02	; 2
    2416:	41 f4       	brne	.+16     	; 0x2428 <__fpcmp_parts_f+0x44>
    2418:	82 30       	cpi	r24, 0x02	; 2
    241a:	b1 f1       	breq	.+108    	; 0x2488 <__fpcmp_parts_f+0xa4>
    241c:	11 96       	adiw	r26, 0x01	; 1
    241e:	8c 91       	ld	r24, X
    2420:	11 97       	sbiw	r26, 0x01	; 1
    2422:	88 23       	and	r24, r24
    2424:	a1 f1       	breq	.+104    	; 0x248e <__fpcmp_parts_f+0xaa>
    2426:	2d c0       	rjmp	.+90     	; 0x2482 <__fpcmp_parts_f+0x9e>
    2428:	61 81       	ldd	r22, Z+1	; 0x01
    242a:	82 30       	cpi	r24, 0x02	; 2
    242c:	01 f1       	breq	.+64     	; 0x246e <__fpcmp_parts_f+0x8a>
    242e:	11 96       	adiw	r26, 0x01	; 1
    2430:	8c 91       	ld	r24, X
    2432:	11 97       	sbiw	r26, 0x01	; 1
    2434:	68 17       	cp	r22, r24
    2436:	d9 f4       	brne	.+54     	; 0x246e <__fpcmp_parts_f+0x8a>
    2438:	22 81       	ldd	r18, Z+2	; 0x02
    243a:	33 81       	ldd	r19, Z+3	; 0x03
    243c:	12 96       	adiw	r26, 0x02	; 2
    243e:	8d 91       	ld	r24, X+
    2440:	9c 91       	ld	r25, X
    2442:	13 97       	sbiw	r26, 0x03	; 3
    2444:	82 17       	cp	r24, r18
    2446:	93 07       	cpc	r25, r19
    2448:	94 f0       	brlt	.+36     	; 0x246e <__fpcmp_parts_f+0x8a>
    244a:	28 17       	cp	r18, r24
    244c:	39 07       	cpc	r19, r25
    244e:	bc f0       	brlt	.+46     	; 0x247e <__fpcmp_parts_f+0x9a>
    2450:	24 81       	ldd	r18, Z+4	; 0x04
    2452:	35 81       	ldd	r19, Z+5	; 0x05
    2454:	46 81       	ldd	r20, Z+6	; 0x06
    2456:	57 81       	ldd	r21, Z+7	; 0x07
    2458:	14 96       	adiw	r26, 0x04	; 4
    245a:	8d 91       	ld	r24, X+
    245c:	9d 91       	ld	r25, X+
    245e:	0d 90       	ld	r0, X+
    2460:	bc 91       	ld	r27, X
    2462:	a0 2d       	mov	r26, r0
    2464:	82 17       	cp	r24, r18
    2466:	93 07       	cpc	r25, r19
    2468:	a4 07       	cpc	r26, r20
    246a:	b5 07       	cpc	r27, r21
    246c:	18 f4       	brcc	.+6      	; 0x2474 <__fpcmp_parts_f+0x90>
    246e:	66 23       	and	r22, r22
    2470:	41 f0       	breq	.+16     	; 0x2482 <__fpcmp_parts_f+0x9e>
    2472:	0d c0       	rjmp	.+26     	; 0x248e <__fpcmp_parts_f+0xaa>
    2474:	28 17       	cp	r18, r24
    2476:	39 07       	cpc	r19, r25
    2478:	4a 07       	cpc	r20, r26
    247a:	5b 07       	cpc	r21, r27
    247c:	28 f4       	brcc	.+10     	; 0x2488 <__fpcmp_parts_f+0xa4>
    247e:	66 23       	and	r22, r22
    2480:	31 f0       	breq	.+12     	; 0x248e <__fpcmp_parts_f+0xaa>
    2482:	21 e0       	ldi	r18, 0x01	; 1
    2484:	30 e0       	ldi	r19, 0x00	; 0
    2486:	05 c0       	rjmp	.+10     	; 0x2492 <__fpcmp_parts_f+0xae>
    2488:	20 e0       	ldi	r18, 0x00	; 0
    248a:	30 e0       	ldi	r19, 0x00	; 0
    248c:	02 c0       	rjmp	.+4      	; 0x2492 <__fpcmp_parts_f+0xae>
    248e:	2f ef       	ldi	r18, 0xFF	; 255
    2490:	3f ef       	ldi	r19, 0xFF	; 255
    2492:	c9 01       	movw	r24, r18
    2494:	08 95       	ret

00002496 <__prologue_saves__>:
    2496:	2f 92       	push	r2
    2498:	3f 92       	push	r3
    249a:	4f 92       	push	r4
    249c:	5f 92       	push	r5
    249e:	6f 92       	push	r6
    24a0:	7f 92       	push	r7
    24a2:	8f 92       	push	r8
    24a4:	9f 92       	push	r9
    24a6:	af 92       	push	r10
    24a8:	bf 92       	push	r11
    24aa:	cf 92       	push	r12
    24ac:	df 92       	push	r13
    24ae:	ef 92       	push	r14
    24b0:	ff 92       	push	r15
    24b2:	0f 93       	push	r16
    24b4:	1f 93       	push	r17
    24b6:	cf 93       	push	r28
    24b8:	df 93       	push	r29
    24ba:	cd b7       	in	r28, 0x3d	; 61
    24bc:	de b7       	in	r29, 0x3e	; 62
    24be:	ca 1b       	sub	r28, r26
    24c0:	db 0b       	sbc	r29, r27
    24c2:	0f b6       	in	r0, 0x3f	; 63
    24c4:	f8 94       	cli
    24c6:	de bf       	out	0x3e, r29	; 62
    24c8:	0f be       	out	0x3f, r0	; 63
    24ca:	cd bf       	out	0x3d, r28	; 61
    24cc:	09 94       	ijmp

000024ce <__epilogue_restores__>:
    24ce:	2a 88       	ldd	r2, Y+18	; 0x12
    24d0:	39 88       	ldd	r3, Y+17	; 0x11
    24d2:	48 88       	ldd	r4, Y+16	; 0x10
    24d4:	5f 84       	ldd	r5, Y+15	; 0x0f
    24d6:	6e 84       	ldd	r6, Y+14	; 0x0e
    24d8:	7d 84       	ldd	r7, Y+13	; 0x0d
    24da:	8c 84       	ldd	r8, Y+12	; 0x0c
    24dc:	9b 84       	ldd	r9, Y+11	; 0x0b
    24de:	aa 84       	ldd	r10, Y+10	; 0x0a
    24e0:	b9 84       	ldd	r11, Y+9	; 0x09
    24e2:	c8 84       	ldd	r12, Y+8	; 0x08
    24e4:	df 80       	ldd	r13, Y+7	; 0x07
    24e6:	ee 80       	ldd	r14, Y+6	; 0x06
    24e8:	fd 80       	ldd	r15, Y+5	; 0x05
    24ea:	0c 81       	ldd	r16, Y+4	; 0x04
    24ec:	1b 81       	ldd	r17, Y+3	; 0x03
    24ee:	aa 81       	ldd	r26, Y+2	; 0x02
    24f0:	b9 81       	ldd	r27, Y+1	; 0x01
    24f2:	ce 0f       	add	r28, r30
    24f4:	d1 1d       	adc	r29, r1
    24f6:	0f b6       	in	r0, 0x3f	; 63
    24f8:	f8 94       	cli
    24fa:	de bf       	out	0x3e, r29	; 62
    24fc:	0f be       	out	0x3f, r0	; 63
    24fe:	cd bf       	out	0x3d, r28	; 61
    2500:	ed 01       	movw	r28, r26
    2502:	08 95       	ret

00002504 <_exit>:
    2504:	f8 94       	cli

00002506 <__stop_program>:
    2506:	ff cf       	rjmp	.-2      	; 0x2506 <__stop_program>
