
bin/Debug/LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002b10  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000078  00800060  00002b10  00002ba4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .fuse         00000002  00820000  00820000  00002c1c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .stab         00003d50  00000000  00000000  00002c20  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00002a16  00000000  00000000  00006970  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e1       	ldi	r30, 0x10	; 16
      68:	fb e2       	ldi	r31, 0x2B	; 43
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a8 3d       	cpi	r26, 0xD8	; 216
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 04 06 	call	0xc08	; 0xc08 <main>
      7a:	0c 94 86 15 	jmp	0x2b0c	; 0x2b0c <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <_LCD_OutNibble>:
//
// Funkcja wystawiaj¹ca pó³bajt na magistralê danych
//
//-------------------------------------------------------------------------------------------------
void _LCD_OutNibble(unsigned char nibbleToWrite)
{
      82:	df 93       	push	r29
      84:	cf 93       	push	r28
      86:	0f 92       	push	r0
      88:	cd b7       	in	r28, 0x3d	; 61
      8a:	de b7       	in	r29, 0x3e	; 62
      8c:	89 83       	std	Y+1, r24	; 0x01
if(nibbleToWrite & 0x01)
      8e:	89 81       	ldd	r24, Y+1	; 0x01
      90:	88 2f       	mov	r24, r24
      92:	90 e0       	ldi	r25, 0x00	; 0
      94:	81 70       	andi	r24, 0x01	; 1
      96:	90 70       	andi	r25, 0x00	; 0
      98:	88 23       	and	r24, r24
      9a:	51 f0       	breq	.+20     	; 0xb0 <_LCD_OutNibble+0x2e>
	LCD_DB4_PORT |= LCD_DB4;
      9c:	88 e3       	ldi	r24, 0x38	; 56
      9e:	90 e0       	ldi	r25, 0x00	; 0
      a0:	28 e3       	ldi	r18, 0x38	; 56
      a2:	30 e0       	ldi	r19, 0x00	; 0
      a4:	f9 01       	movw	r30, r18
      a6:	20 81       	ld	r18, Z
      a8:	20 61       	ori	r18, 0x10	; 16
      aa:	fc 01       	movw	r30, r24
      ac:	20 83       	st	Z, r18
      ae:	09 c0       	rjmp	.+18     	; 0xc2 <_LCD_OutNibble+0x40>
else
	LCD_DB4_PORT  &= ~LCD_DB4;
      b0:	88 e3       	ldi	r24, 0x38	; 56
      b2:	90 e0       	ldi	r25, 0x00	; 0
      b4:	28 e3       	ldi	r18, 0x38	; 56
      b6:	30 e0       	ldi	r19, 0x00	; 0
      b8:	f9 01       	movw	r30, r18
      ba:	20 81       	ld	r18, Z
      bc:	2f 7e       	andi	r18, 0xEF	; 239
      be:	fc 01       	movw	r30, r24
      c0:	20 83       	st	Z, r18

if(nibbleToWrite & 0x02)
      c2:	89 81       	ldd	r24, Y+1	; 0x01
      c4:	88 2f       	mov	r24, r24
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	82 70       	andi	r24, 0x02	; 2
      ca:	90 70       	andi	r25, 0x00	; 0
      cc:	00 97       	sbiw	r24, 0x00	; 0
      ce:	51 f0       	breq	.+20     	; 0xe4 <_LCD_OutNibble+0x62>
	LCD_DB5_PORT |= LCD_DB5;
      d0:	88 e3       	ldi	r24, 0x38	; 56
      d2:	90 e0       	ldi	r25, 0x00	; 0
      d4:	28 e3       	ldi	r18, 0x38	; 56
      d6:	30 e0       	ldi	r19, 0x00	; 0
      d8:	f9 01       	movw	r30, r18
      da:	20 81       	ld	r18, Z
      dc:	20 62       	ori	r18, 0x20	; 32
      de:	fc 01       	movw	r30, r24
      e0:	20 83       	st	Z, r18
      e2:	09 c0       	rjmp	.+18     	; 0xf6 <_LCD_OutNibble+0x74>
else
	LCD_DB5_PORT  &= ~LCD_DB5;
      e4:	88 e3       	ldi	r24, 0x38	; 56
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	28 e3       	ldi	r18, 0x38	; 56
      ea:	30 e0       	ldi	r19, 0x00	; 0
      ec:	f9 01       	movw	r30, r18
      ee:	20 81       	ld	r18, Z
      f0:	2f 7d       	andi	r18, 0xDF	; 223
      f2:	fc 01       	movw	r30, r24
      f4:	20 83       	st	Z, r18

if(nibbleToWrite & 0x04)
      f6:	89 81       	ldd	r24, Y+1	; 0x01
      f8:	88 2f       	mov	r24, r24
      fa:	90 e0       	ldi	r25, 0x00	; 0
      fc:	84 70       	andi	r24, 0x04	; 4
      fe:	90 70       	andi	r25, 0x00	; 0
     100:	00 97       	sbiw	r24, 0x00	; 0
     102:	51 f0       	breq	.+20     	; 0x118 <_LCD_OutNibble+0x96>
	LCD_DB6_PORT |= LCD_DB6;
     104:	88 e3       	ldi	r24, 0x38	; 56
     106:	90 e0       	ldi	r25, 0x00	; 0
     108:	28 e3       	ldi	r18, 0x38	; 56
     10a:	30 e0       	ldi	r19, 0x00	; 0
     10c:	f9 01       	movw	r30, r18
     10e:	20 81       	ld	r18, Z
     110:	20 64       	ori	r18, 0x40	; 64
     112:	fc 01       	movw	r30, r24
     114:	20 83       	st	Z, r18
     116:	09 c0       	rjmp	.+18     	; 0x12a <_LCD_OutNibble+0xa8>
else
	LCD_DB6_PORT  &= ~LCD_DB6;
     118:	88 e3       	ldi	r24, 0x38	; 56
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	28 e3       	ldi	r18, 0x38	; 56
     11e:	30 e0       	ldi	r19, 0x00	; 0
     120:	f9 01       	movw	r30, r18
     122:	20 81       	ld	r18, Z
     124:	2f 7b       	andi	r18, 0xBF	; 191
     126:	fc 01       	movw	r30, r24
     128:	20 83       	st	Z, r18

if(nibbleToWrite & 0x08)
     12a:	89 81       	ldd	r24, Y+1	; 0x01
     12c:	88 2f       	mov	r24, r24
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	88 70       	andi	r24, 0x08	; 8
     132:	90 70       	andi	r25, 0x00	; 0
     134:	00 97       	sbiw	r24, 0x00	; 0
     136:	51 f0       	breq	.+20     	; 0x14c <_LCD_OutNibble+0xca>
	LCD_DB7_PORT |= LCD_DB7;
     138:	88 e3       	ldi	r24, 0x38	; 56
     13a:	90 e0       	ldi	r25, 0x00	; 0
     13c:	28 e3       	ldi	r18, 0x38	; 56
     13e:	30 e0       	ldi	r19, 0x00	; 0
     140:	f9 01       	movw	r30, r18
     142:	20 81       	ld	r18, Z
     144:	20 68       	ori	r18, 0x80	; 128
     146:	fc 01       	movw	r30, r24
     148:	20 83       	st	Z, r18
     14a:	09 c0       	rjmp	.+18     	; 0x15e <_LCD_OutNibble+0xdc>
else
	LCD_DB7_PORT  &= ~LCD_DB7;
     14c:	88 e3       	ldi	r24, 0x38	; 56
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	28 e3       	ldi	r18, 0x38	; 56
     152:	30 e0       	ldi	r19, 0x00	; 0
     154:	f9 01       	movw	r30, r18
     156:	20 81       	ld	r18, Z
     158:	2f 77       	andi	r18, 0x7F	; 127
     15a:	fc 01       	movw	r30, r24
     15c:	20 83       	st	Z, r18
}
     15e:	0f 90       	pop	r0
     160:	cf 91       	pop	r28
     162:	df 91       	pop	r29
     164:	08 95       	ret

00000166 <_LCD_Write>:
//
// Funkcja zapisu bajtu do wyœwietacza (bez rozró¿nienia instrukcja/dane).
//
//-------------------------------------------------------------------------------------------------
void _LCD_Write(unsigned char dataToWrite)
{
     166:	0f 93       	push	r16
     168:	1f 93       	push	r17
     16a:	df 93       	push	r29
     16c:	cf 93       	push	r28
     16e:	cd b7       	in	r28, 0x3d	; 61
     170:	de b7       	in	r29, 0x3e	; 62
     172:	69 97       	sbiw	r28, 0x19	; 25
     174:	0f b6       	in	r0, 0x3f	; 63
     176:	f8 94       	cli
     178:	de bf       	out	0x3e, r29	; 62
     17a:	0f be       	out	0x3f, r0	; 63
     17c:	cd bf       	out	0x3d, r28	; 61
     17e:	89 8f       	std	Y+25, r24	; 0x19
LCD_E_PORT |= LCD_E;
     180:	8b e3       	ldi	r24, 0x3B	; 59
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	2b e3       	ldi	r18, 0x3B	; 59
     186:	30 e0       	ldi	r19, 0x00	; 0
     188:	f9 01       	movw	r30, r18
     18a:	20 81       	ld	r18, Z
     18c:	22 60       	ori	r18, 0x02	; 2
     18e:	fc 01       	movw	r30, r24
     190:	20 83       	st	Z, r18
_LCD_OutNibble(dataToWrite >> 4);
     192:	89 8d       	ldd	r24, Y+25	; 0x19
     194:	82 95       	swap	r24
     196:	8f 70       	andi	r24, 0x0F	; 15
     198:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
LCD_E_PORT &= ~LCD_E;
     19c:	8b e3       	ldi	r24, 0x3B	; 59
     19e:	90 e0       	ldi	r25, 0x00	; 0
     1a0:	2b e3       	ldi	r18, 0x3B	; 59
     1a2:	30 e0       	ldi	r19, 0x00	; 0
     1a4:	f9 01       	movw	r30, r18
     1a6:	20 81       	ld	r18, Z
     1a8:	2d 7f       	andi	r18, 0xFD	; 253
     1aa:	fc 01       	movw	r30, r24
     1ac:	20 83       	st	Z, r18
LCD_E_PORT |= LCD_E;
     1ae:	8b e3       	ldi	r24, 0x3B	; 59
     1b0:	90 e0       	ldi	r25, 0x00	; 0
     1b2:	2b e3       	ldi	r18, 0x3B	; 59
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	f9 01       	movw	r30, r18
     1b8:	20 81       	ld	r18, Z
     1ba:	22 60       	ori	r18, 0x02	; 2
     1bc:	fc 01       	movw	r30, r24
     1be:	20 83       	st	Z, r18
_LCD_OutNibble(dataToWrite);
     1c0:	89 8d       	ldd	r24, Y+25	; 0x19
     1c2:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
LCD_E_PORT &= ~LCD_E;
     1c6:	8b e3       	ldi	r24, 0x3B	; 59
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	2b e3       	ldi	r18, 0x3B	; 59
     1cc:	30 e0       	ldi	r19, 0x00	; 0
     1ce:	f9 01       	movw	r30, r18
     1d0:	20 81       	ld	r18, Z
     1d2:	2d 7f       	andi	r18, 0xFD	; 253
     1d4:	fc 01       	movw	r30, r24
     1d6:	20 83       	st	Z, r18
     1d8:	80 e0       	ldi	r24, 0x00	; 0
     1da:	90 e0       	ldi	r25, 0x00	; 0
     1dc:	a8 e4       	ldi	r26, 0x48	; 72
     1de:	b2 e4       	ldi	r27, 0x42	; 66
     1e0:	89 83       	std	Y+1, r24	; 0x01
     1e2:	9a 83       	std	Y+2, r25	; 0x02
     1e4:	ab 83       	std	Y+3, r26	; 0x03
     1e6:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     1e8:	69 81       	ldd	r22, Y+1	; 0x01
     1ea:	7a 81       	ldd	r23, Y+2	; 0x02
     1ec:	8b 81       	ldd	r24, Y+3	; 0x03
     1ee:	9c 81       	ldd	r25, Y+4	; 0x04
     1f0:	2b ea       	ldi	r18, 0xAB	; 171
     1f2:	3a ea       	ldi	r19, 0xAA	; 170
     1f4:	4a ea       	ldi	r20, 0xAA	; 170
     1f6:	50 e4       	ldi	r21, 0x40	; 64
     1f8:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     1fc:	dc 01       	movw	r26, r24
     1fe:	cb 01       	movw	r24, r22
     200:	8d 83       	std	Y+5, r24	; 0x05
     202:	9e 83       	std	Y+6, r25	; 0x06
     204:	af 83       	std	Y+7, r26	; 0x07
     206:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     208:	11 e0       	ldi	r17, 0x01	; 1
     20a:	6d 81       	ldd	r22, Y+5	; 0x05
     20c:	7e 81       	ldd	r23, Y+6	; 0x06
     20e:	8f 81       	ldd	r24, Y+7	; 0x07
     210:	98 85       	ldd	r25, Y+8	; 0x08
     212:	20 e0       	ldi	r18, 0x00	; 0
     214:	30 e0       	ldi	r19, 0x00	; 0
     216:	40 e8       	ldi	r20, 0x80	; 128
     218:	5f e3       	ldi	r21, 0x3F	; 63
     21a:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
     21e:	88 23       	and	r24, r24
     220:	0c f0       	brlt	.+2      	; 0x224 <_LCD_Write+0xbe>
     222:	10 e0       	ldi	r17, 0x00	; 0
     224:	11 23       	and	r17, r17
     226:	19 f0       	breq	.+6      	; 0x22e <_LCD_Write+0xc8>
		__ticks = 1;
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	89 87       	std	Y+9, r24	; 0x09
     22c:	a3 c0       	rjmp	.+326    	; 0x374 <_LCD_Write+0x20e>
	else if (__tmp > 255)
     22e:	11 e0       	ldi	r17, 0x01	; 1
     230:	6d 81       	ldd	r22, Y+5	; 0x05
     232:	7e 81       	ldd	r23, Y+6	; 0x06
     234:	8f 81       	ldd	r24, Y+7	; 0x07
     236:	98 85       	ldd	r25, Y+8	; 0x08
     238:	20 e0       	ldi	r18, 0x00	; 0
     23a:	30 e0       	ldi	r19, 0x00	; 0
     23c:	4f e7       	ldi	r20, 0x7F	; 127
     23e:	53 e4       	ldi	r21, 0x43	; 67
     240:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
     244:	18 16       	cp	r1, r24
     246:	0c f0       	brlt	.+2      	; 0x24a <_LCD_Write+0xe4>
     248:	10 e0       	ldi	r17, 0x00	; 0
     24a:	11 23       	and	r17, r17
     24c:	09 f4       	brne	.+2      	; 0x250 <_LCD_Write+0xea>
     24e:	89 c0       	rjmp	.+274    	; 0x362 <_LCD_Write+0x1fc>
	{
		_delay_ms(__us / 1000.0);
     250:	69 81       	ldd	r22, Y+1	; 0x01
     252:	7a 81       	ldd	r23, Y+2	; 0x02
     254:	8b 81       	ldd	r24, Y+3	; 0x03
     256:	9c 81       	ldd	r25, Y+4	; 0x04
     258:	20 e0       	ldi	r18, 0x00	; 0
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	4a e7       	ldi	r20, 0x7A	; 122
     25e:	54 e4       	ldi	r21, 0x44	; 68
     260:	0e 94 85 0f 	call	0x1f0a	; 0x1f0a <__divsf3>
     264:	dc 01       	movw	r26, r24
     266:	cb 01       	movw	r24, r22
     268:	8a 87       	std	Y+10, r24	; 0x0a
     26a:	9b 87       	std	Y+11, r25	; 0x0b
     26c:	ac 87       	std	Y+12, r26	; 0x0c
     26e:	bd 87       	std	Y+13, r27	; 0x0d
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     270:	6a 85       	ldd	r22, Y+10	; 0x0a
     272:	7b 85       	ldd	r23, Y+11	; 0x0b
     274:	8c 85       	ldd	r24, Y+12	; 0x0c
     276:	9d 85       	ldd	r25, Y+13	; 0x0d
     278:	20 e0       	ldi	r18, 0x00	; 0
     27a:	30 e0       	ldi	r19, 0x00	; 0
     27c:	4a e7       	ldi	r20, 0x7A	; 122
     27e:	55 e4       	ldi	r21, 0x45	; 69
     280:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     284:	dc 01       	movw	r26, r24
     286:	cb 01       	movw	r24, r22
     288:	8e 87       	std	Y+14, r24	; 0x0e
     28a:	9f 87       	std	Y+15, r25	; 0x0f
     28c:	a8 8b       	std	Y+16, r26	; 0x10
     28e:	b9 8b       	std	Y+17, r27	; 0x11
	if (__tmp < 1.0)
     290:	11 e0       	ldi	r17, 0x01	; 1
     292:	6e 85       	ldd	r22, Y+14	; 0x0e
     294:	7f 85       	ldd	r23, Y+15	; 0x0f
     296:	88 89       	ldd	r24, Y+16	; 0x10
     298:	99 89       	ldd	r25, Y+17	; 0x11
     29a:	20 e0       	ldi	r18, 0x00	; 0
     29c:	30 e0       	ldi	r19, 0x00	; 0
     29e:	40 e8       	ldi	r20, 0x80	; 128
     2a0:	5f e3       	ldi	r21, 0x3F	; 63
     2a2:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
     2a6:	88 23       	and	r24, r24
     2a8:	0c f0       	brlt	.+2      	; 0x2ac <_LCD_Write+0x146>
     2aa:	10 e0       	ldi	r17, 0x00	; 0
     2ac:	11 23       	and	r17, r17
     2ae:	29 f0       	breq	.+10     	; 0x2ba <_LCD_Write+0x154>
		__ticks = 1;
     2b0:	81 e0       	ldi	r24, 0x01	; 1
     2b2:	90 e0       	ldi	r25, 0x00	; 0
     2b4:	9b 8b       	std	Y+19, r25	; 0x13
     2b6:	8a 8b       	std	Y+18, r24	; 0x12
     2b8:	46 c0       	rjmp	.+140    	; 0x346 <_LCD_Write+0x1e0>
	else if (__tmp > 65535)
     2ba:	11 e0       	ldi	r17, 0x01	; 1
     2bc:	6e 85       	ldd	r22, Y+14	; 0x0e
     2be:	7f 85       	ldd	r23, Y+15	; 0x0f
     2c0:	88 89       	ldd	r24, Y+16	; 0x10
     2c2:	99 89       	ldd	r25, Y+17	; 0x11
     2c4:	20 e0       	ldi	r18, 0x00	; 0
     2c6:	3f ef       	ldi	r19, 0xFF	; 255
     2c8:	4f e7       	ldi	r20, 0x7F	; 127
     2ca:	57 e4       	ldi	r21, 0x47	; 71
     2cc:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
     2d0:	18 16       	cp	r1, r24
     2d2:	0c f0       	brlt	.+2      	; 0x2d6 <_LCD_Write+0x170>
     2d4:	10 e0       	ldi	r17, 0x00	; 0
     2d6:	11 23       	and	r17, r17
     2d8:	61 f1       	breq	.+88     	; 0x332 <_LCD_Write+0x1cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2da:	6a 85       	ldd	r22, Y+10	; 0x0a
     2dc:	7b 85       	ldd	r23, Y+11	; 0x0b
     2de:	8c 85       	ldd	r24, Y+12	; 0x0c
     2e0:	9d 85       	ldd	r25, Y+13	; 0x0d
     2e2:	20 e0       	ldi	r18, 0x00	; 0
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	40 e2       	ldi	r20, 0x20	; 32
     2e8:	51 e4       	ldi	r21, 0x41	; 65
     2ea:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     2ee:	dc 01       	movw	r26, r24
     2f0:	cb 01       	movw	r24, r22
     2f2:	bc 01       	movw	r22, r24
     2f4:	cd 01       	movw	r24, r26
     2f6:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     2fa:	dc 01       	movw	r26, r24
     2fc:	cb 01       	movw	r24, r22
     2fe:	9b 8b       	std	Y+19, r25	; 0x13
     300:	8a 8b       	std	Y+18, r24	; 0x12
     302:	12 c0       	rjmp	.+36     	; 0x328 <_LCD_Write+0x1c2>
     304:	80 e9       	ldi	r24, 0x90	; 144
     306:	91 e0       	ldi	r25, 0x01	; 1
     308:	9d 8b       	std	Y+21, r25	; 0x15
     30a:	8c 8b       	std	Y+20, r24	; 0x14
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     30c:	8c 89       	ldd	r24, Y+20	; 0x14
     30e:	9d 89       	ldd	r25, Y+21	; 0x15
     310:	8c 01       	movw	r16, r24
     312:	c8 01       	movw	r24, r16
     314:	01 97       	sbiw	r24, 0x01	; 1
     316:	f1 f7       	brne	.-4      	; 0x314 <_LCD_Write+0x1ae>
     318:	8c 01       	movw	r16, r24
     31a:	1d 8b       	std	Y+21, r17	; 0x15
     31c:	0c 8b       	std	Y+20, r16	; 0x14
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     31e:	8a 89       	ldd	r24, Y+18	; 0x12
     320:	9b 89       	ldd	r25, Y+19	; 0x13
     322:	01 97       	sbiw	r24, 0x01	; 1
     324:	9b 8b       	std	Y+19, r25	; 0x13
     326:	8a 8b       	std	Y+18, r24	; 0x12
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     328:	8a 89       	ldd	r24, Y+18	; 0x12
     32a:	9b 89       	ldd	r25, Y+19	; 0x13
     32c:	00 97       	sbiw	r24, 0x00	; 0
     32e:	51 f7       	brne	.-44     	; 0x304 <_LCD_Write+0x19e>
     330:	28 c0       	rjmp	.+80     	; 0x382 <_LCD_Write+0x21c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     332:	6e 85       	ldd	r22, Y+14	; 0x0e
     334:	7f 85       	ldd	r23, Y+15	; 0x0f
     336:	88 89       	ldd	r24, Y+16	; 0x10
     338:	99 89       	ldd	r25, Y+17	; 0x11
     33a:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     33e:	dc 01       	movw	r26, r24
     340:	cb 01       	movw	r24, r22
     342:	9b 8b       	std	Y+19, r25	; 0x13
     344:	8a 8b       	std	Y+18, r24	; 0x12
     346:	8a 89       	ldd	r24, Y+18	; 0x12
     348:	9b 89       	ldd	r25, Y+19	; 0x13
     34a:	9f 8b       	std	Y+23, r25	; 0x17
     34c:	8e 8b       	std	Y+22, r24	; 0x16
     34e:	8e 89       	ldd	r24, Y+22	; 0x16
     350:	9f 89       	ldd	r25, Y+23	; 0x17
     352:	8c 01       	movw	r16, r24
     354:	f8 01       	movw	r30, r16
     356:	31 97       	sbiw	r30, 0x01	; 1
     358:	f1 f7       	brne	.-4      	; 0x356 <_LCD_Write+0x1f0>
     35a:	8f 01       	movw	r16, r30
     35c:	1f 8b       	std	Y+23, r17	; 0x17
     35e:	0e 8b       	std	Y+22, r16	; 0x16
     360:	10 c0       	rjmp	.+32     	; 0x382 <_LCD_Write+0x21c>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     362:	6d 81       	ldd	r22, Y+5	; 0x05
     364:	7e 81       	ldd	r23, Y+6	; 0x06
     366:	8f 81       	ldd	r24, Y+7	; 0x07
     368:	98 85       	ldd	r25, Y+8	; 0x08
     36a:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     36e:	dc 01       	movw	r26, r24
     370:	cb 01       	movw	r24, r22
     372:	89 87       	std	Y+9, r24	; 0x09
     374:	89 85       	ldd	r24, Y+9	; 0x09
     376:	88 8f       	std	Y+24, r24	; 0x18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     378:	88 8d       	ldd	r24, Y+24	; 0x18
     37a:	18 2f       	mov	r17, r24
     37c:	1a 95       	dec	r17
     37e:	f1 f7       	brne	.-4      	; 0x37c <_LCD_Write+0x216>
     380:	18 8f       	std	Y+24, r17	; 0x18
_delay_us(50);
}
     382:	69 96       	adiw	r28, 0x19	; 25
     384:	0f b6       	in	r0, 0x3f	; 63
     386:	f8 94       	cli
     388:	de bf       	out	0x3e, r29	; 62
     38a:	0f be       	out	0x3f, r0	; 63
     38c:	cd bf       	out	0x3d, r28	; 61
     38e:	cf 91       	pop	r28
     390:	df 91       	pop	r29
     392:	1f 91       	pop	r17
     394:	0f 91       	pop	r16
     396:	08 95       	ret

00000398 <LCD_WriteCommand>:
//
// Funkcja zapisu rozkazu do wyœwietlacza
//
//-------------------------------------------------------------------------------------------------
void LCD_WriteCommand(unsigned char commandToWrite)
{
     398:	df 93       	push	r29
     39a:	cf 93       	push	r28
     39c:	0f 92       	push	r0
     39e:	cd b7       	in	r28, 0x3d	; 61
     3a0:	de b7       	in	r29, 0x3e	; 62
     3a2:	89 83       	std	Y+1, r24	; 0x01
LCD_RS_PORT &= ~LCD_RS;
     3a4:	8b e3       	ldi	r24, 0x3B	; 59
     3a6:	90 e0       	ldi	r25, 0x00	; 0
     3a8:	2b e3       	ldi	r18, 0x3B	; 59
     3aa:	30 e0       	ldi	r19, 0x00	; 0
     3ac:	f9 01       	movw	r30, r18
     3ae:	20 81       	ld	r18, Z
     3b0:	2b 7f       	andi	r18, 0xFB	; 251
     3b2:	fc 01       	movw	r30, r24
     3b4:	20 83       	st	Z, r18
_LCD_Write(commandToWrite);
     3b6:	89 81       	ldd	r24, Y+1	; 0x01
     3b8:	0e 94 b3 00 	call	0x166	; 0x166 <_LCD_Write>
}
     3bc:	0f 90       	pop	r0
     3be:	cf 91       	pop	r28
     3c0:	df 91       	pop	r29
     3c2:	08 95       	ret

000003c4 <LCD_WriteData>:
//
// Funkcja zapisu danych do pamiêci wyœwietlacza
//
//-------------------------------------------------------------------------------------------------
void LCD_WriteData(unsigned char dataToWrite)
{
     3c4:	df 93       	push	r29
     3c6:	cf 93       	push	r28
     3c8:	0f 92       	push	r0
     3ca:	cd b7       	in	r28, 0x3d	; 61
     3cc:	de b7       	in	r29, 0x3e	; 62
     3ce:	89 83       	std	Y+1, r24	; 0x01
LCD_RS_PORT |= LCD_RS;
     3d0:	8b e3       	ldi	r24, 0x3B	; 59
     3d2:	90 e0       	ldi	r25, 0x00	; 0
     3d4:	2b e3       	ldi	r18, 0x3B	; 59
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	f9 01       	movw	r30, r18
     3da:	20 81       	ld	r18, Z
     3dc:	24 60       	ori	r18, 0x04	; 4
     3de:	fc 01       	movw	r30, r24
     3e0:	20 83       	st	Z, r18
_LCD_Write(dataToWrite);
     3e2:	89 81       	ldd	r24, Y+1	; 0x01
     3e4:	0e 94 b3 00 	call	0x166	; 0x166 <_LCD_Write>
}
     3e8:	0f 90       	pop	r0
     3ea:	cf 91       	pop	r28
     3ec:	df 91       	pop	r29
     3ee:	08 95       	ret

000003f0 <LCD_WriteText>:
//
// Funkcja wyœwietlenia napisu na wyswietlaczu.
//
//-------------------------------------------------------------------------------------------------
void LCD_WriteText(char * text)
{
     3f0:	df 93       	push	r29
     3f2:	cf 93       	push	r28
     3f4:	00 d0       	rcall	.+0      	; 0x3f6 <LCD_WriteText+0x6>
     3f6:	cd b7       	in	r28, 0x3d	; 61
     3f8:	de b7       	in	r29, 0x3e	; 62
     3fa:	9a 83       	std	Y+2, r25	; 0x02
     3fc:	89 83       	std	Y+1, r24	; 0x01
while(*text)
     3fe:	0d c0       	rjmp	.+26     	; 0x41a <LCD_WriteText+0x2a>
  LCD_WriteData(*text++);
     400:	89 81       	ldd	r24, Y+1	; 0x01
     402:	9a 81       	ldd	r25, Y+2	; 0x02
     404:	fc 01       	movw	r30, r24
     406:	80 81       	ld	r24, Z
     408:	28 2f       	mov	r18, r24
     40a:	89 81       	ldd	r24, Y+1	; 0x01
     40c:	9a 81       	ldd	r25, Y+2	; 0x02
     40e:	01 96       	adiw	r24, 0x01	; 1
     410:	9a 83       	std	Y+2, r25	; 0x02
     412:	89 83       	std	Y+1, r24	; 0x01
     414:	82 2f       	mov	r24, r18
     416:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <LCD_WriteData>
// Funkcja wyœwietlenia napisu na wyswietlaczu.
//
//-------------------------------------------------------------------------------------------------
void LCD_WriteText(char * text)
{
while(*text)
     41a:	89 81       	ldd	r24, Y+1	; 0x01
     41c:	9a 81       	ldd	r25, Y+2	; 0x02
     41e:	fc 01       	movw	r30, r24
     420:	80 81       	ld	r24, Z
     422:	88 23       	and	r24, r24
     424:	69 f7       	brne	.-38     	; 0x400 <LCD_WriteText+0x10>
  LCD_WriteData(*text++);
}
     426:	0f 90       	pop	r0
     428:	0f 90       	pop	r0
     42a:	cf 91       	pop	r28
     42c:	df 91       	pop	r29
     42e:	08 95       	ret

00000430 <LCD_GoTo>:
//
// Funkcja ustawienia wspó³rzêdnych ekranowych
//
//-------------------------------------------------------------------------------------------------
void LCD_GoTo(unsigned char x, unsigned char y)
{
     430:	df 93       	push	r29
     432:	cf 93       	push	r28
     434:	00 d0       	rcall	.+0      	; 0x436 <LCD_GoTo+0x6>
     436:	cd b7       	in	r28, 0x3d	; 61
     438:	de b7       	in	r29, 0x3e	; 62
     43a:	89 83       	std	Y+1, r24	; 0x01
     43c:	6a 83       	std	Y+2, r22	; 0x02
LCD_WriteCommand(HD44780_DDRAM_SET | (x + (0x40 * y)));
     43e:	8a 81       	ldd	r24, Y+2	; 0x02
     440:	98 2f       	mov	r25, r24
     442:	92 95       	swap	r25
     444:	99 0f       	add	r25, r25
     446:	99 0f       	add	r25, r25
     448:	90 7c       	andi	r25, 0xC0	; 192
     44a:	89 81       	ldd	r24, Y+1	; 0x01
     44c:	89 0f       	add	r24, r25
     44e:	80 68       	ori	r24, 0x80	; 128
     450:	0e 94 cc 01 	call	0x398	; 0x398 <LCD_WriteCommand>
}
     454:	0f 90       	pop	r0
     456:	0f 90       	pop	r0
     458:	cf 91       	pop	r28
     45a:	df 91       	pop	r29
     45c:	08 95       	ret

0000045e <LCD_Clear>:
//
// Funkcja czyszczenia ekranu wyœwietlacza.
//
//-------------------------------------------------------------------------------------------------
void LCD_Clear(void)
{
     45e:	0f 93       	push	r16
     460:	1f 93       	push	r17
     462:	df 93       	push	r29
     464:	cf 93       	push	r28
     466:	cd b7       	in	r28, 0x3d	; 61
     468:	de b7       	in	r29, 0x3e	; 62
     46a:	2e 97       	sbiw	r28, 0x0e	; 14
     46c:	0f b6       	in	r0, 0x3f	; 63
     46e:	f8 94       	cli
     470:	de bf       	out	0x3e, r29	; 62
     472:	0f be       	out	0x3f, r0	; 63
     474:	cd bf       	out	0x3d, r28	; 61
LCD_WriteCommand(HD44780_CLEAR);
     476:	81 e0       	ldi	r24, 0x01	; 1
     478:	0e 94 cc 01 	call	0x398	; 0x398 <LCD_WriteCommand>
     47c:	80 e0       	ldi	r24, 0x00	; 0
     47e:	90 e0       	ldi	r25, 0x00	; 0
     480:	a0 e0       	ldi	r26, 0x00	; 0
     482:	b0 e4       	ldi	r27, 0x40	; 64
     484:	89 83       	std	Y+1, r24	; 0x01
     486:	9a 83       	std	Y+2, r25	; 0x02
     488:	ab 83       	std	Y+3, r26	; 0x03
     48a:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     48c:	69 81       	ldd	r22, Y+1	; 0x01
     48e:	7a 81       	ldd	r23, Y+2	; 0x02
     490:	8b 81       	ldd	r24, Y+3	; 0x03
     492:	9c 81       	ldd	r25, Y+4	; 0x04
     494:	20 e0       	ldi	r18, 0x00	; 0
     496:	30 e0       	ldi	r19, 0x00	; 0
     498:	4a e7       	ldi	r20, 0x7A	; 122
     49a:	55 e4       	ldi	r21, 0x45	; 69
     49c:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     4a0:	dc 01       	movw	r26, r24
     4a2:	cb 01       	movw	r24, r22
     4a4:	8d 83       	std	Y+5, r24	; 0x05
     4a6:	9e 83       	std	Y+6, r25	; 0x06
     4a8:	af 83       	std	Y+7, r26	; 0x07
     4aa:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     4ac:	11 e0       	ldi	r17, 0x01	; 1
     4ae:	6d 81       	ldd	r22, Y+5	; 0x05
     4b0:	7e 81       	ldd	r23, Y+6	; 0x06
     4b2:	8f 81       	ldd	r24, Y+7	; 0x07
     4b4:	98 85       	ldd	r25, Y+8	; 0x08
     4b6:	20 e0       	ldi	r18, 0x00	; 0
     4b8:	30 e0       	ldi	r19, 0x00	; 0
     4ba:	40 e8       	ldi	r20, 0x80	; 128
     4bc:	5f e3       	ldi	r21, 0x3F	; 63
     4be:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
     4c2:	88 23       	and	r24, r24
     4c4:	0c f0       	brlt	.+2      	; 0x4c8 <LCD_Clear+0x6a>
     4c6:	10 e0       	ldi	r17, 0x00	; 0
     4c8:	11 23       	and	r17, r17
     4ca:	29 f0       	breq	.+10     	; 0x4d6 <LCD_Clear+0x78>
		__ticks = 1;
     4cc:	81 e0       	ldi	r24, 0x01	; 1
     4ce:	90 e0       	ldi	r25, 0x00	; 0
     4d0:	9a 87       	std	Y+10, r25	; 0x0a
     4d2:	89 87       	std	Y+9, r24	; 0x09
     4d4:	46 c0       	rjmp	.+140    	; 0x562 <LCD_Clear+0x104>
	else if (__tmp > 65535)
     4d6:	11 e0       	ldi	r17, 0x01	; 1
     4d8:	6d 81       	ldd	r22, Y+5	; 0x05
     4da:	7e 81       	ldd	r23, Y+6	; 0x06
     4dc:	8f 81       	ldd	r24, Y+7	; 0x07
     4de:	98 85       	ldd	r25, Y+8	; 0x08
     4e0:	20 e0       	ldi	r18, 0x00	; 0
     4e2:	3f ef       	ldi	r19, 0xFF	; 255
     4e4:	4f e7       	ldi	r20, 0x7F	; 127
     4e6:	57 e4       	ldi	r21, 0x47	; 71
     4e8:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
     4ec:	18 16       	cp	r1, r24
     4ee:	0c f0       	brlt	.+2      	; 0x4f2 <LCD_Clear+0x94>
     4f0:	10 e0       	ldi	r17, 0x00	; 0
     4f2:	11 23       	and	r17, r17
     4f4:	61 f1       	breq	.+88     	; 0x54e <LCD_Clear+0xf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4f6:	69 81       	ldd	r22, Y+1	; 0x01
     4f8:	7a 81       	ldd	r23, Y+2	; 0x02
     4fa:	8b 81       	ldd	r24, Y+3	; 0x03
     4fc:	9c 81       	ldd	r25, Y+4	; 0x04
     4fe:	20 e0       	ldi	r18, 0x00	; 0
     500:	30 e0       	ldi	r19, 0x00	; 0
     502:	40 e2       	ldi	r20, 0x20	; 32
     504:	51 e4       	ldi	r21, 0x41	; 65
     506:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     50a:	dc 01       	movw	r26, r24
     50c:	cb 01       	movw	r24, r22
     50e:	bc 01       	movw	r22, r24
     510:	cd 01       	movw	r24, r26
     512:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     516:	dc 01       	movw	r26, r24
     518:	cb 01       	movw	r24, r22
     51a:	9a 87       	std	Y+10, r25	; 0x0a
     51c:	89 87       	std	Y+9, r24	; 0x09
     51e:	12 c0       	rjmp	.+36     	; 0x544 <LCD_Clear+0xe6>
     520:	80 e9       	ldi	r24, 0x90	; 144
     522:	91 e0       	ldi	r25, 0x01	; 1
     524:	9c 87       	std	Y+12, r25	; 0x0c
     526:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     528:	8b 85       	ldd	r24, Y+11	; 0x0b
     52a:	9c 85       	ldd	r25, Y+12	; 0x0c
     52c:	8c 01       	movw	r16, r24
     52e:	c8 01       	movw	r24, r16
     530:	01 97       	sbiw	r24, 0x01	; 1
     532:	f1 f7       	brne	.-4      	; 0x530 <LCD_Clear+0xd2>
     534:	8c 01       	movw	r16, r24
     536:	1c 87       	std	Y+12, r17	; 0x0c
     538:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     53a:	89 85       	ldd	r24, Y+9	; 0x09
     53c:	9a 85       	ldd	r25, Y+10	; 0x0a
     53e:	01 97       	sbiw	r24, 0x01	; 1
     540:	9a 87       	std	Y+10, r25	; 0x0a
     542:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     544:	89 85       	ldd	r24, Y+9	; 0x09
     546:	9a 85       	ldd	r25, Y+10	; 0x0a
     548:	00 97       	sbiw	r24, 0x00	; 0
     54a:	51 f7       	brne	.-44     	; 0x520 <LCD_Clear+0xc2>
     54c:	17 c0       	rjmp	.+46     	; 0x57c <LCD_Clear+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     54e:	6d 81       	ldd	r22, Y+5	; 0x05
     550:	7e 81       	ldd	r23, Y+6	; 0x06
     552:	8f 81       	ldd	r24, Y+7	; 0x07
     554:	98 85       	ldd	r25, Y+8	; 0x08
     556:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     55a:	dc 01       	movw	r26, r24
     55c:	cb 01       	movw	r24, r22
     55e:	9a 87       	std	Y+10, r25	; 0x0a
     560:	89 87       	std	Y+9, r24	; 0x09
     562:	89 85       	ldd	r24, Y+9	; 0x09
     564:	9a 85       	ldd	r25, Y+10	; 0x0a
     566:	9e 87       	std	Y+14, r25	; 0x0e
     568:	8d 87       	std	Y+13, r24	; 0x0d
     56a:	8d 85       	ldd	r24, Y+13	; 0x0d
     56c:	9e 85       	ldd	r25, Y+14	; 0x0e
     56e:	8c 01       	movw	r16, r24
     570:	c8 01       	movw	r24, r16
     572:	01 97       	sbiw	r24, 0x01	; 1
     574:	f1 f7       	brne	.-4      	; 0x572 <LCD_Clear+0x114>
     576:	8c 01       	movw	r16, r24
     578:	1e 87       	std	Y+14, r17	; 0x0e
     57a:	0d 87       	std	Y+13, r16	; 0x0d
_delay_ms(2);
}
     57c:	2e 96       	adiw	r28, 0x0e	; 14
     57e:	0f b6       	in	r0, 0x3f	; 63
     580:	f8 94       	cli
     582:	de bf       	out	0x3e, r29	; 62
     584:	0f be       	out	0x3f, r0	; 63
     586:	cd bf       	out	0x3d, r28	; 61
     588:	cf 91       	pop	r28
     58a:	df 91       	pop	r29
     58c:	1f 91       	pop	r17
     58e:	0f 91       	pop	r16
     590:	08 95       	ret

00000592 <LCD_Home>:
//
// Funkcja przywrócenia pocz¹tkowych wspó³rzêdnych wyœwietlacza.
//
//-------------------------------------------------------------------------------------------------
void LCD_Home(void)
{
     592:	0f 93       	push	r16
     594:	1f 93       	push	r17
     596:	df 93       	push	r29
     598:	cf 93       	push	r28
     59a:	cd b7       	in	r28, 0x3d	; 61
     59c:	de b7       	in	r29, 0x3e	; 62
     59e:	2e 97       	sbiw	r28, 0x0e	; 14
     5a0:	0f b6       	in	r0, 0x3f	; 63
     5a2:	f8 94       	cli
     5a4:	de bf       	out	0x3e, r29	; 62
     5a6:	0f be       	out	0x3f, r0	; 63
     5a8:	cd bf       	out	0x3d, r28	; 61
LCD_WriteCommand(HD44780_HOME);
     5aa:	82 e0       	ldi	r24, 0x02	; 2
     5ac:	0e 94 cc 01 	call	0x398	; 0x398 <LCD_WriteCommand>
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	90 e0       	ldi	r25, 0x00	; 0
     5b4:	a0 e0       	ldi	r26, 0x00	; 0
     5b6:	b0 e4       	ldi	r27, 0x40	; 64
     5b8:	89 83       	std	Y+1, r24	; 0x01
     5ba:	9a 83       	std	Y+2, r25	; 0x02
     5bc:	ab 83       	std	Y+3, r26	; 0x03
     5be:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     5c0:	69 81       	ldd	r22, Y+1	; 0x01
     5c2:	7a 81       	ldd	r23, Y+2	; 0x02
     5c4:	8b 81       	ldd	r24, Y+3	; 0x03
     5c6:	9c 81       	ldd	r25, Y+4	; 0x04
     5c8:	20 e0       	ldi	r18, 0x00	; 0
     5ca:	30 e0       	ldi	r19, 0x00	; 0
     5cc:	4a e7       	ldi	r20, 0x7A	; 122
     5ce:	55 e4       	ldi	r21, 0x45	; 69
     5d0:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     5d4:	dc 01       	movw	r26, r24
     5d6:	cb 01       	movw	r24, r22
     5d8:	8d 83       	std	Y+5, r24	; 0x05
     5da:	9e 83       	std	Y+6, r25	; 0x06
     5dc:	af 83       	std	Y+7, r26	; 0x07
     5de:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     5e0:	11 e0       	ldi	r17, 0x01	; 1
     5e2:	6d 81       	ldd	r22, Y+5	; 0x05
     5e4:	7e 81       	ldd	r23, Y+6	; 0x06
     5e6:	8f 81       	ldd	r24, Y+7	; 0x07
     5e8:	98 85       	ldd	r25, Y+8	; 0x08
     5ea:	20 e0       	ldi	r18, 0x00	; 0
     5ec:	30 e0       	ldi	r19, 0x00	; 0
     5ee:	40 e8       	ldi	r20, 0x80	; 128
     5f0:	5f e3       	ldi	r21, 0x3F	; 63
     5f2:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
     5f6:	88 23       	and	r24, r24
     5f8:	0c f0       	brlt	.+2      	; 0x5fc <LCD_Home+0x6a>
     5fa:	10 e0       	ldi	r17, 0x00	; 0
     5fc:	11 23       	and	r17, r17
     5fe:	29 f0       	breq	.+10     	; 0x60a <LCD_Home+0x78>
		__ticks = 1;
     600:	81 e0       	ldi	r24, 0x01	; 1
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	9a 87       	std	Y+10, r25	; 0x0a
     606:	89 87       	std	Y+9, r24	; 0x09
     608:	46 c0       	rjmp	.+140    	; 0x696 <LCD_Home+0x104>
	else if (__tmp > 65535)
     60a:	11 e0       	ldi	r17, 0x01	; 1
     60c:	6d 81       	ldd	r22, Y+5	; 0x05
     60e:	7e 81       	ldd	r23, Y+6	; 0x06
     610:	8f 81       	ldd	r24, Y+7	; 0x07
     612:	98 85       	ldd	r25, Y+8	; 0x08
     614:	20 e0       	ldi	r18, 0x00	; 0
     616:	3f ef       	ldi	r19, 0xFF	; 255
     618:	4f e7       	ldi	r20, 0x7F	; 127
     61a:	57 e4       	ldi	r21, 0x47	; 71
     61c:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
     620:	18 16       	cp	r1, r24
     622:	0c f0       	brlt	.+2      	; 0x626 <LCD_Home+0x94>
     624:	10 e0       	ldi	r17, 0x00	; 0
     626:	11 23       	and	r17, r17
     628:	61 f1       	breq	.+88     	; 0x682 <LCD_Home+0xf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     62a:	69 81       	ldd	r22, Y+1	; 0x01
     62c:	7a 81       	ldd	r23, Y+2	; 0x02
     62e:	8b 81       	ldd	r24, Y+3	; 0x03
     630:	9c 81       	ldd	r25, Y+4	; 0x04
     632:	20 e0       	ldi	r18, 0x00	; 0
     634:	30 e0       	ldi	r19, 0x00	; 0
     636:	40 e2       	ldi	r20, 0x20	; 32
     638:	51 e4       	ldi	r21, 0x41	; 65
     63a:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     63e:	dc 01       	movw	r26, r24
     640:	cb 01       	movw	r24, r22
     642:	bc 01       	movw	r22, r24
     644:	cd 01       	movw	r24, r26
     646:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     64a:	dc 01       	movw	r26, r24
     64c:	cb 01       	movw	r24, r22
     64e:	9a 87       	std	Y+10, r25	; 0x0a
     650:	89 87       	std	Y+9, r24	; 0x09
     652:	12 c0       	rjmp	.+36     	; 0x678 <LCD_Home+0xe6>
     654:	80 e9       	ldi	r24, 0x90	; 144
     656:	91 e0       	ldi	r25, 0x01	; 1
     658:	9c 87       	std	Y+12, r25	; 0x0c
     65a:	8b 87       	std	Y+11, r24	; 0x0b
     65c:	8b 85       	ldd	r24, Y+11	; 0x0b
     65e:	9c 85       	ldd	r25, Y+12	; 0x0c
     660:	8c 01       	movw	r16, r24
     662:	c8 01       	movw	r24, r16
     664:	01 97       	sbiw	r24, 0x01	; 1
     666:	f1 f7       	brne	.-4      	; 0x664 <LCD_Home+0xd2>
     668:	8c 01       	movw	r16, r24
     66a:	1c 87       	std	Y+12, r17	; 0x0c
     66c:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     66e:	89 85       	ldd	r24, Y+9	; 0x09
     670:	9a 85       	ldd	r25, Y+10	; 0x0a
     672:	01 97       	sbiw	r24, 0x01	; 1
     674:	9a 87       	std	Y+10, r25	; 0x0a
     676:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     678:	89 85       	ldd	r24, Y+9	; 0x09
     67a:	9a 85       	ldd	r25, Y+10	; 0x0a
     67c:	00 97       	sbiw	r24, 0x00	; 0
     67e:	51 f7       	brne	.-44     	; 0x654 <LCD_Home+0xc2>
     680:	17 c0       	rjmp	.+46     	; 0x6b0 <LCD_Home+0x11e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     682:	6d 81       	ldd	r22, Y+5	; 0x05
     684:	7e 81       	ldd	r23, Y+6	; 0x06
     686:	8f 81       	ldd	r24, Y+7	; 0x07
     688:	98 85       	ldd	r25, Y+8	; 0x08
     68a:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     68e:	dc 01       	movw	r26, r24
     690:	cb 01       	movw	r24, r22
     692:	9a 87       	std	Y+10, r25	; 0x0a
     694:	89 87       	std	Y+9, r24	; 0x09
     696:	89 85       	ldd	r24, Y+9	; 0x09
     698:	9a 85       	ldd	r25, Y+10	; 0x0a
     69a:	9e 87       	std	Y+14, r25	; 0x0e
     69c:	8d 87       	std	Y+13, r24	; 0x0d
     69e:	8d 85       	ldd	r24, Y+13	; 0x0d
     6a0:	9e 85       	ldd	r25, Y+14	; 0x0e
     6a2:	8c 01       	movw	r16, r24
     6a4:	c8 01       	movw	r24, r16
     6a6:	01 97       	sbiw	r24, 0x01	; 1
     6a8:	f1 f7       	brne	.-4      	; 0x6a6 <LCD_Home+0x114>
     6aa:	8c 01       	movw	r16, r24
     6ac:	1e 87       	std	Y+14, r17	; 0x0e
     6ae:	0d 87       	std	Y+13, r16	; 0x0d
_delay_ms(2);
}
     6b0:	2e 96       	adiw	r28, 0x0e	; 14
     6b2:	0f b6       	in	r0, 0x3f	; 63
     6b4:	f8 94       	cli
     6b6:	de bf       	out	0x3e, r29	; 62
     6b8:	0f be       	out	0x3f, r0	; 63
     6ba:	cd bf       	out	0x3d, r28	; 61
     6bc:	cf 91       	pop	r28
     6be:	df 91       	pop	r29
     6c0:	1f 91       	pop	r17
     6c2:	0f 91       	pop	r16
     6c4:	08 95       	ret

000006c6 <LCD_Initalize>:
//
// Procedura inicjalizacji kontrolera HD44780.
//
//-------------------------------------------------------------------------------------------------
void LCD_Initalize(void)
{
     6c6:	0f 93       	push	r16
     6c8:	1f 93       	push	r17
     6ca:	df 93       	push	r29
     6cc:	cf 93       	push	r28
     6ce:	cd b7       	in	r28, 0x3d	; 61
     6d0:	de b7       	in	r29, 0x3e	; 62
     6d2:	e9 97       	sbiw	r28, 0x39	; 57
     6d4:	0f b6       	in	r0, 0x3f	; 63
     6d6:	f8 94       	cli
     6d8:	de bf       	out	0x3e, r29	; 62
     6da:	0f be       	out	0x3f, r0	; 63
     6dc:	cd bf       	out	0x3d, r28	; 61
unsigned char i;
LCD_DB4_DIR |= LCD_DB4; // Konfiguracja kierunku pracy wyprowadzeñ
     6de:	87 e3       	ldi	r24, 0x37	; 55
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	27 e3       	ldi	r18, 0x37	; 55
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	f9 01       	movw	r30, r18
     6e8:	20 81       	ld	r18, Z
     6ea:	20 61       	ori	r18, 0x10	; 16
     6ec:	fc 01       	movw	r30, r24
     6ee:	20 83       	st	Z, r18
LCD_DB5_DIR |= LCD_DB5; //
     6f0:	87 e3       	ldi	r24, 0x37	; 55
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	27 e3       	ldi	r18, 0x37	; 55
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	f9 01       	movw	r30, r18
     6fa:	20 81       	ld	r18, Z
     6fc:	20 62       	ori	r18, 0x20	; 32
     6fe:	fc 01       	movw	r30, r24
     700:	20 83       	st	Z, r18
LCD_DB6_DIR |= LCD_DB6; //
     702:	87 e3       	ldi	r24, 0x37	; 55
     704:	90 e0       	ldi	r25, 0x00	; 0
     706:	27 e3       	ldi	r18, 0x37	; 55
     708:	30 e0       	ldi	r19, 0x00	; 0
     70a:	f9 01       	movw	r30, r18
     70c:	20 81       	ld	r18, Z
     70e:	20 64       	ori	r18, 0x40	; 64
     710:	fc 01       	movw	r30, r24
     712:	20 83       	st	Z, r18
LCD_DB7_DIR |= LCD_DB7; //
     714:	87 e3       	ldi	r24, 0x37	; 55
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	27 e3       	ldi	r18, 0x37	; 55
     71a:	30 e0       	ldi	r19, 0x00	; 0
     71c:	f9 01       	movw	r30, r18
     71e:	20 81       	ld	r18, Z
     720:	20 68       	ori	r18, 0x80	; 128
     722:	fc 01       	movw	r30, r24
     724:	20 83       	st	Z, r18
LCD_E_DIR 	|= LCD_E;   //
     726:	8a e3       	ldi	r24, 0x3A	; 58
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	2a e3       	ldi	r18, 0x3A	; 58
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	f9 01       	movw	r30, r18
     730:	20 81       	ld	r18, Z
     732:	22 60       	ori	r18, 0x02	; 2
     734:	fc 01       	movw	r30, r24
     736:	20 83       	st	Z, r18
LCD_RS_DIR 	|= LCD_RS;  //
     738:	8a e3       	ldi	r24, 0x3A	; 58
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	2a e3       	ldi	r18, 0x3A	; 58
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	f9 01       	movw	r30, r18
     742:	20 81       	ld	r18, Z
     744:	24 60       	ori	r18, 0x04	; 4
     746:	fc 01       	movw	r30, r24
     748:	20 83       	st	Z, r18
     74a:	80 e0       	ldi	r24, 0x00	; 0
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	a0 e7       	ldi	r26, 0x70	; 112
     750:	b1 e4       	ldi	r27, 0x41	; 65
     752:	8a 83       	std	Y+2, r24	; 0x02
     754:	9b 83       	std	Y+3, r25	; 0x03
     756:	ac 83       	std	Y+4, r26	; 0x04
     758:	bd 83       	std	Y+5, r27	; 0x05
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     75a:	6a 81       	ldd	r22, Y+2	; 0x02
     75c:	7b 81       	ldd	r23, Y+3	; 0x03
     75e:	8c 81       	ldd	r24, Y+4	; 0x04
     760:	9d 81       	ldd	r25, Y+5	; 0x05
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	4a e7       	ldi	r20, 0x7A	; 122
     768:	55 e4       	ldi	r21, 0x45	; 69
     76a:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     76e:	dc 01       	movw	r26, r24
     770:	cb 01       	movw	r24, r22
     772:	8e 83       	std	Y+6, r24	; 0x06
     774:	9f 83       	std	Y+7, r25	; 0x07
     776:	a8 87       	std	Y+8, r26	; 0x08
     778:	b9 87       	std	Y+9, r27	; 0x09
	if (__tmp < 1.0)
     77a:	11 e0       	ldi	r17, 0x01	; 1
     77c:	6e 81       	ldd	r22, Y+6	; 0x06
     77e:	7f 81       	ldd	r23, Y+7	; 0x07
     780:	88 85       	ldd	r24, Y+8	; 0x08
     782:	99 85       	ldd	r25, Y+9	; 0x09
     784:	20 e0       	ldi	r18, 0x00	; 0
     786:	30 e0       	ldi	r19, 0x00	; 0
     788:	40 e8       	ldi	r20, 0x80	; 128
     78a:	5f e3       	ldi	r21, 0x3F	; 63
     78c:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
     790:	88 23       	and	r24, r24
     792:	0c f0       	brlt	.+2      	; 0x796 <LCD_Initalize+0xd0>
     794:	10 e0       	ldi	r17, 0x00	; 0
     796:	11 23       	and	r17, r17
     798:	29 f0       	breq	.+10     	; 0x7a4 <LCD_Initalize+0xde>
		__ticks = 1;
     79a:	81 e0       	ldi	r24, 0x01	; 1
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	9b 87       	std	Y+11, r25	; 0x0b
     7a0:	8a 87       	std	Y+10, r24	; 0x0a
     7a2:	46 c0       	rjmp	.+140    	; 0x830 <LCD_Initalize+0x16a>
	else if (__tmp > 65535)
     7a4:	11 e0       	ldi	r17, 0x01	; 1
     7a6:	6e 81       	ldd	r22, Y+6	; 0x06
     7a8:	7f 81       	ldd	r23, Y+7	; 0x07
     7aa:	88 85       	ldd	r24, Y+8	; 0x08
     7ac:	99 85       	ldd	r25, Y+9	; 0x09
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	3f ef       	ldi	r19, 0xFF	; 255
     7b2:	4f e7       	ldi	r20, 0x7F	; 127
     7b4:	57 e4       	ldi	r21, 0x47	; 71
     7b6:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
     7ba:	18 16       	cp	r1, r24
     7bc:	0c f0       	brlt	.+2      	; 0x7c0 <LCD_Initalize+0xfa>
     7be:	10 e0       	ldi	r17, 0x00	; 0
     7c0:	11 23       	and	r17, r17
     7c2:	61 f1       	breq	.+88     	; 0x81c <LCD_Initalize+0x156>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7c4:	6a 81       	ldd	r22, Y+2	; 0x02
     7c6:	7b 81       	ldd	r23, Y+3	; 0x03
     7c8:	8c 81       	ldd	r24, Y+4	; 0x04
     7ca:	9d 81       	ldd	r25, Y+5	; 0x05
     7cc:	20 e0       	ldi	r18, 0x00	; 0
     7ce:	30 e0       	ldi	r19, 0x00	; 0
     7d0:	40 e2       	ldi	r20, 0x20	; 32
     7d2:	51 e4       	ldi	r21, 0x41	; 65
     7d4:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     7d8:	dc 01       	movw	r26, r24
     7da:	cb 01       	movw	r24, r22
     7dc:	bc 01       	movw	r22, r24
     7de:	cd 01       	movw	r24, r26
     7e0:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     7e4:	dc 01       	movw	r26, r24
     7e6:	cb 01       	movw	r24, r22
     7e8:	9b 87       	std	Y+11, r25	; 0x0b
     7ea:	8a 87       	std	Y+10, r24	; 0x0a
     7ec:	12 c0       	rjmp	.+36     	; 0x812 <LCD_Initalize+0x14c>
     7ee:	80 e9       	ldi	r24, 0x90	; 144
     7f0:	91 e0       	ldi	r25, 0x01	; 1
     7f2:	9d 87       	std	Y+13, r25	; 0x0d
     7f4:	8c 87       	std	Y+12, r24	; 0x0c
     7f6:	8c 85       	ldd	r24, Y+12	; 0x0c
     7f8:	9d 85       	ldd	r25, Y+13	; 0x0d
     7fa:	8c 01       	movw	r16, r24
     7fc:	c8 01       	movw	r24, r16
     7fe:	01 97       	sbiw	r24, 0x01	; 1
     800:	f1 f7       	brne	.-4      	; 0x7fe <LCD_Initalize+0x138>
     802:	8c 01       	movw	r16, r24
     804:	1d 87       	std	Y+13, r17	; 0x0d
     806:	0c 87       	std	Y+12, r16	; 0x0c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     808:	8a 85       	ldd	r24, Y+10	; 0x0a
     80a:	9b 85       	ldd	r25, Y+11	; 0x0b
     80c:	01 97       	sbiw	r24, 0x01	; 1
     80e:	9b 87       	std	Y+11, r25	; 0x0b
     810:	8a 87       	std	Y+10, r24	; 0x0a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     812:	8a 85       	ldd	r24, Y+10	; 0x0a
     814:	9b 85       	ldd	r25, Y+11	; 0x0b
     816:	00 97       	sbiw	r24, 0x00	; 0
     818:	51 f7       	brne	.-44     	; 0x7ee <LCD_Initalize+0x128>
     81a:	17 c0       	rjmp	.+46     	; 0x84a <LCD_Initalize+0x184>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     81c:	6e 81       	ldd	r22, Y+6	; 0x06
     81e:	7f 81       	ldd	r23, Y+7	; 0x07
     820:	88 85       	ldd	r24, Y+8	; 0x08
     822:	99 85       	ldd	r25, Y+9	; 0x09
     824:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     828:	dc 01       	movw	r26, r24
     82a:	cb 01       	movw	r24, r22
     82c:	9b 87       	std	Y+11, r25	; 0x0b
     82e:	8a 87       	std	Y+10, r24	; 0x0a
     830:	8a 85       	ldd	r24, Y+10	; 0x0a
     832:	9b 85       	ldd	r25, Y+11	; 0x0b
     834:	9f 87       	std	Y+15, r25	; 0x0f
     836:	8e 87       	std	Y+14, r24	; 0x0e
     838:	8e 85       	ldd	r24, Y+14	; 0x0e
     83a:	9f 85       	ldd	r25, Y+15	; 0x0f
     83c:	8c 01       	movw	r16, r24
     83e:	f8 01       	movw	r30, r16
     840:	31 97       	sbiw	r30, 0x01	; 1
     842:	f1 f7       	brne	.-4      	; 0x840 <LCD_Initalize+0x17a>
     844:	8f 01       	movw	r16, r30
     846:	1f 87       	std	Y+15, r17	; 0x0f
     848:	0e 87       	std	Y+14, r16	; 0x0e
_delay_ms(15); // oczekiwanie na ustalibizowanie siê napiecia zasilajacego
LCD_RS_PORT &= ~LCD_RS; // wyzerowanie linii RS
     84a:	8b e3       	ldi	r24, 0x3B	; 59
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	2b e3       	ldi	r18, 0x3B	; 59
     850:	30 e0       	ldi	r19, 0x00	; 0
     852:	f9 01       	movw	r30, r18
     854:	20 81       	ld	r18, Z
     856:	2b 7f       	andi	r18, 0xFB	; 251
     858:	fc 01       	movw	r30, r24
     85a:	20 83       	st	Z, r18
LCD_E_PORT &= ~LCD_E;  // wyzerowanie linii E
     85c:	8b e3       	ldi	r24, 0x3B	; 59
     85e:	90 e0       	ldi	r25, 0x00	; 0
     860:	2b e3       	ldi	r18, 0x3B	; 59
     862:	30 e0       	ldi	r19, 0x00	; 0
     864:	f9 01       	movw	r30, r18
     866:	20 81       	ld	r18, Z
     868:	2d 7f       	andi	r18, 0xFD	; 253
     86a:	fc 01       	movw	r30, r24
     86c:	20 83       	st	Z, r18

for(i = 0; i < 3; i++) // trzykrotne powtórzenie bloku instrukcji
     86e:	19 82       	std	Y+1, r1	; 0x01
     870:	98 c0       	rjmp	.+304    	; 0x9a2 <__stack+0x143>
  {
  LCD_E_PORT |= LCD_E; //  E = 1
     872:	8b e3       	ldi	r24, 0x3B	; 59
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	2b e3       	ldi	r18, 0x3B	; 59
     878:	30 e0       	ldi	r19, 0x00	; 0
     87a:	f9 01       	movw	r30, r18
     87c:	20 81       	ld	r18, Z
     87e:	22 60       	ori	r18, 0x02	; 2
     880:	fc 01       	movw	r30, r24
     882:	20 83       	st	Z, r18
  _LCD_OutNibble(0x03); // tryb 8-bitowy
     884:	83 e0       	ldi	r24, 0x03	; 3
     886:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
  LCD_E_PORT &= ~LCD_E; // E = 0
     88a:	8b e3       	ldi	r24, 0x3B	; 59
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	2b e3       	ldi	r18, 0x3B	; 59
     890:	30 e0       	ldi	r19, 0x00	; 0
     892:	f9 01       	movw	r30, r18
     894:	20 81       	ld	r18, Z
     896:	2d 7f       	andi	r18, 0xFD	; 253
     898:	fc 01       	movw	r30, r24
     89a:	20 83       	st	Z, r18
     89c:	80 e0       	ldi	r24, 0x00	; 0
     89e:	90 e0       	ldi	r25, 0x00	; 0
     8a0:	a0 ea       	ldi	r26, 0xA0	; 160
     8a2:	b0 e4       	ldi	r27, 0x40	; 64
     8a4:	88 8b       	std	Y+16, r24	; 0x10
     8a6:	99 8b       	std	Y+17, r25	; 0x11
     8a8:	aa 8b       	std	Y+18, r26	; 0x12
     8aa:	bb 8b       	std	Y+19, r27	; 0x13
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     8ac:	68 89       	ldd	r22, Y+16	; 0x10
     8ae:	79 89       	ldd	r23, Y+17	; 0x11
     8b0:	8a 89       	ldd	r24, Y+18	; 0x12
     8b2:	9b 89       	ldd	r25, Y+19	; 0x13
     8b4:	20 e0       	ldi	r18, 0x00	; 0
     8b6:	30 e0       	ldi	r19, 0x00	; 0
     8b8:	4a e7       	ldi	r20, 0x7A	; 122
     8ba:	55 e4       	ldi	r21, 0x45	; 69
     8bc:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     8c0:	dc 01       	movw	r26, r24
     8c2:	cb 01       	movw	r24, r22
     8c4:	8c 8b       	std	Y+20, r24	; 0x14
     8c6:	9d 8b       	std	Y+21, r25	; 0x15
     8c8:	ae 8b       	std	Y+22, r26	; 0x16
     8ca:	bf 8b       	std	Y+23, r27	; 0x17
	if (__tmp < 1.0)
     8cc:	11 e0       	ldi	r17, 0x01	; 1
     8ce:	6c 89       	ldd	r22, Y+20	; 0x14
     8d0:	7d 89       	ldd	r23, Y+21	; 0x15
     8d2:	8e 89       	ldd	r24, Y+22	; 0x16
     8d4:	9f 89       	ldd	r25, Y+23	; 0x17
     8d6:	20 e0       	ldi	r18, 0x00	; 0
     8d8:	30 e0       	ldi	r19, 0x00	; 0
     8da:	40 e8       	ldi	r20, 0x80	; 128
     8dc:	5f e3       	ldi	r21, 0x3F	; 63
     8de:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
     8e2:	88 23       	and	r24, r24
     8e4:	0c f0       	brlt	.+2      	; 0x8e8 <__stack+0x89>
     8e6:	10 e0       	ldi	r17, 0x00	; 0
     8e8:	11 23       	and	r17, r17
     8ea:	29 f0       	breq	.+10     	; 0x8f6 <__stack+0x97>
		__ticks = 1;
     8ec:	81 e0       	ldi	r24, 0x01	; 1
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	99 8f       	std	Y+25, r25	; 0x19
     8f2:	88 8f       	std	Y+24, r24	; 0x18
     8f4:	46 c0       	rjmp	.+140    	; 0x982 <__stack+0x123>
	else if (__tmp > 65535)
     8f6:	11 e0       	ldi	r17, 0x01	; 1
     8f8:	6c 89       	ldd	r22, Y+20	; 0x14
     8fa:	7d 89       	ldd	r23, Y+21	; 0x15
     8fc:	8e 89       	ldd	r24, Y+22	; 0x16
     8fe:	9f 89       	ldd	r25, Y+23	; 0x17
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	3f ef       	ldi	r19, 0xFF	; 255
     904:	4f e7       	ldi	r20, 0x7F	; 127
     906:	57 e4       	ldi	r21, 0x47	; 71
     908:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
     90c:	18 16       	cp	r1, r24
     90e:	0c f0       	brlt	.+2      	; 0x912 <__stack+0xb3>
     910:	10 e0       	ldi	r17, 0x00	; 0
     912:	11 23       	and	r17, r17
     914:	61 f1       	breq	.+88     	; 0x96e <__stack+0x10f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     916:	68 89       	ldd	r22, Y+16	; 0x10
     918:	79 89       	ldd	r23, Y+17	; 0x11
     91a:	8a 89       	ldd	r24, Y+18	; 0x12
     91c:	9b 89       	ldd	r25, Y+19	; 0x13
     91e:	20 e0       	ldi	r18, 0x00	; 0
     920:	30 e0       	ldi	r19, 0x00	; 0
     922:	40 e2       	ldi	r20, 0x20	; 32
     924:	51 e4       	ldi	r21, 0x41	; 65
     926:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     92a:	dc 01       	movw	r26, r24
     92c:	cb 01       	movw	r24, r22
     92e:	bc 01       	movw	r22, r24
     930:	cd 01       	movw	r24, r26
     932:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     936:	dc 01       	movw	r26, r24
     938:	cb 01       	movw	r24, r22
     93a:	99 8f       	std	Y+25, r25	; 0x19
     93c:	88 8f       	std	Y+24, r24	; 0x18
     93e:	12 c0       	rjmp	.+36     	; 0x964 <__stack+0x105>
     940:	80 e9       	ldi	r24, 0x90	; 144
     942:	91 e0       	ldi	r25, 0x01	; 1
     944:	9b 8f       	std	Y+27, r25	; 0x1b
     946:	8a 8f       	std	Y+26, r24	; 0x1a
     948:	8a 8d       	ldd	r24, Y+26	; 0x1a
     94a:	9b 8d       	ldd	r25, Y+27	; 0x1b
     94c:	8c 01       	movw	r16, r24
     94e:	c8 01       	movw	r24, r16
     950:	01 97       	sbiw	r24, 0x01	; 1
     952:	f1 f7       	brne	.-4      	; 0x950 <__stack+0xf1>
     954:	8c 01       	movw	r16, r24
     956:	1b 8f       	std	Y+27, r17	; 0x1b
     958:	0a 8f       	std	Y+26, r16	; 0x1a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     95a:	88 8d       	ldd	r24, Y+24	; 0x18
     95c:	99 8d       	ldd	r25, Y+25	; 0x19
     95e:	01 97       	sbiw	r24, 0x01	; 1
     960:	99 8f       	std	Y+25, r25	; 0x19
     962:	88 8f       	std	Y+24, r24	; 0x18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     964:	88 8d       	ldd	r24, Y+24	; 0x18
     966:	99 8d       	ldd	r25, Y+25	; 0x19
     968:	00 97       	sbiw	r24, 0x00	; 0
     96a:	51 f7       	brne	.-44     	; 0x940 <__stack+0xe1>
     96c:	17 c0       	rjmp	.+46     	; 0x99c <__stack+0x13d>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     96e:	6c 89       	ldd	r22, Y+20	; 0x14
     970:	7d 89       	ldd	r23, Y+21	; 0x15
     972:	8e 89       	ldd	r24, Y+22	; 0x16
     974:	9f 89       	ldd	r25, Y+23	; 0x17
     976:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     97a:	dc 01       	movw	r26, r24
     97c:	cb 01       	movw	r24, r22
     97e:	99 8f       	std	Y+25, r25	; 0x19
     980:	88 8f       	std	Y+24, r24	; 0x18
     982:	88 8d       	ldd	r24, Y+24	; 0x18
     984:	99 8d       	ldd	r25, Y+25	; 0x19
     986:	9d 8f       	std	Y+29, r25	; 0x1d
     988:	8c 8f       	std	Y+28, r24	; 0x1c
     98a:	8c 8d       	ldd	r24, Y+28	; 0x1c
     98c:	9d 8d       	ldd	r25, Y+29	; 0x1d
     98e:	8c 01       	movw	r16, r24
     990:	f8 01       	movw	r30, r16
     992:	31 97       	sbiw	r30, 0x01	; 1
     994:	f1 f7       	brne	.-4      	; 0x992 <__stack+0x133>
     996:	8f 01       	movw	r16, r30
     998:	1d 8f       	std	Y+29, r17	; 0x1d
     99a:	0c 8f       	std	Y+28, r16	; 0x1c
LCD_RS_DIR 	|= LCD_RS;  //
_delay_ms(15); // oczekiwanie na ustalibizowanie siê napiecia zasilajacego
LCD_RS_PORT &= ~LCD_RS; // wyzerowanie linii RS
LCD_E_PORT &= ~LCD_E;  // wyzerowanie linii E

for(i = 0; i < 3; i++) // trzykrotne powtórzenie bloku instrukcji
     99c:	89 81       	ldd	r24, Y+1	; 0x01
     99e:	8f 5f       	subi	r24, 0xFF	; 255
     9a0:	89 83       	std	Y+1, r24	; 0x01
     9a2:	89 81       	ldd	r24, Y+1	; 0x01
     9a4:	83 30       	cpi	r24, 0x03	; 3
     9a6:	08 f4       	brcc	.+2      	; 0x9aa <__stack+0x14b>
     9a8:	64 cf       	rjmp	.-312    	; 0x872 <__stack+0x13>
  _LCD_OutNibble(0x03); // tryb 8-bitowy
  LCD_E_PORT &= ~LCD_E; // E = 0
  _delay_ms(5); // czekaj 5ms
  }

LCD_E_PORT |= LCD_E; // E = 1
     9aa:	8b e3       	ldi	r24, 0x3B	; 59
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	2b e3       	ldi	r18, 0x3B	; 59
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	f9 01       	movw	r30, r18
     9b4:	20 81       	ld	r18, Z
     9b6:	22 60       	ori	r18, 0x02	; 2
     9b8:	fc 01       	movw	r30, r24
     9ba:	20 83       	st	Z, r18
_LCD_OutNibble(0x02); // tryb 4-bitowy
     9bc:	82 e0       	ldi	r24, 0x02	; 2
     9be:	0e 94 41 00 	call	0x82	; 0x82 <_LCD_OutNibble>
LCD_E_PORT &= ~LCD_E; // E = 0
     9c2:	8b e3       	ldi	r24, 0x3B	; 59
     9c4:	90 e0       	ldi	r25, 0x00	; 0
     9c6:	2b e3       	ldi	r18, 0x3B	; 59
     9c8:	30 e0       	ldi	r19, 0x00	; 0
     9ca:	f9 01       	movw	r30, r18
     9cc:	20 81       	ld	r18, Z
     9ce:	2d 7f       	andi	r18, 0xFD	; 253
     9d0:	fc 01       	movw	r30, r24
     9d2:	20 83       	st	Z, r18
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	a0 e8       	ldi	r26, 0x80	; 128
     9da:	bf e3       	ldi	r27, 0x3F	; 63
     9dc:	8e 8f       	std	Y+30, r24	; 0x1e
     9de:	9f 8f       	std	Y+31, r25	; 0x1f
     9e0:	a8 a3       	std	Y+32, r26	; 0x20
     9e2:	b9 a3       	std	Y+33, r27	; 0x21
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     9e4:	6e 8d       	ldd	r22, Y+30	; 0x1e
     9e6:	7f 8d       	ldd	r23, Y+31	; 0x1f
     9e8:	88 a1       	ldd	r24, Y+32	; 0x20
     9ea:	99 a1       	ldd	r25, Y+33	; 0x21
     9ec:	20 e0       	ldi	r18, 0x00	; 0
     9ee:	30 e0       	ldi	r19, 0x00	; 0
     9f0:	4a e7       	ldi	r20, 0x7A	; 122
     9f2:	55 e4       	ldi	r21, 0x45	; 69
     9f4:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     9f8:	dc 01       	movw	r26, r24
     9fa:	cb 01       	movw	r24, r22
     9fc:	8a a3       	std	Y+34, r24	; 0x22
     9fe:	9b a3       	std	Y+35, r25	; 0x23
     a00:	ac a3       	std	Y+36, r26	; 0x24
     a02:	bd a3       	std	Y+37, r27	; 0x25
	if (__tmp < 1.0)
     a04:	11 e0       	ldi	r17, 0x01	; 1
     a06:	6a a1       	ldd	r22, Y+34	; 0x22
     a08:	7b a1       	ldd	r23, Y+35	; 0x23
     a0a:	8c a1       	ldd	r24, Y+36	; 0x24
     a0c:	9d a1       	ldd	r25, Y+37	; 0x25
     a0e:	20 e0       	ldi	r18, 0x00	; 0
     a10:	30 e0       	ldi	r19, 0x00	; 0
     a12:	40 e8       	ldi	r20, 0x80	; 128
     a14:	5f e3       	ldi	r21, 0x3F	; 63
     a16:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
     a1a:	88 23       	and	r24, r24
     a1c:	0c f0       	brlt	.+2      	; 0xa20 <__stack+0x1c1>
     a1e:	10 e0       	ldi	r17, 0x00	; 0
     a20:	11 23       	and	r17, r17
     a22:	29 f0       	breq	.+10     	; 0xa2e <__stack+0x1cf>
		__ticks = 1;
     a24:	81 e0       	ldi	r24, 0x01	; 1
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	9f a3       	std	Y+39, r25	; 0x27
     a2a:	8e a3       	std	Y+38, r24	; 0x26
     a2c:	46 c0       	rjmp	.+140    	; 0xaba <__stack+0x25b>
	else if (__tmp > 65535)
     a2e:	11 e0       	ldi	r17, 0x01	; 1
     a30:	6a a1       	ldd	r22, Y+34	; 0x22
     a32:	7b a1       	ldd	r23, Y+35	; 0x23
     a34:	8c a1       	ldd	r24, Y+36	; 0x24
     a36:	9d a1       	ldd	r25, Y+37	; 0x25
     a38:	20 e0       	ldi	r18, 0x00	; 0
     a3a:	3f ef       	ldi	r19, 0xFF	; 255
     a3c:	4f e7       	ldi	r20, 0x7F	; 127
     a3e:	57 e4       	ldi	r21, 0x47	; 71
     a40:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
     a44:	18 16       	cp	r1, r24
     a46:	0c f0       	brlt	.+2      	; 0xa4a <__stack+0x1eb>
     a48:	10 e0       	ldi	r17, 0x00	; 0
     a4a:	11 23       	and	r17, r17
     a4c:	61 f1       	breq	.+88     	; 0xaa6 <__stack+0x247>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a4e:	6e 8d       	ldd	r22, Y+30	; 0x1e
     a50:	7f 8d       	ldd	r23, Y+31	; 0x1f
     a52:	88 a1       	ldd	r24, Y+32	; 0x20
     a54:	99 a1       	ldd	r25, Y+33	; 0x21
     a56:	20 e0       	ldi	r18, 0x00	; 0
     a58:	30 e0       	ldi	r19, 0x00	; 0
     a5a:	40 e2       	ldi	r20, 0x20	; 32
     a5c:	51 e4       	ldi	r21, 0x41	; 65
     a5e:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     a62:	dc 01       	movw	r26, r24
     a64:	cb 01       	movw	r24, r22
     a66:	bc 01       	movw	r22, r24
     a68:	cd 01       	movw	r24, r26
     a6a:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     a6e:	dc 01       	movw	r26, r24
     a70:	cb 01       	movw	r24, r22
     a72:	9f a3       	std	Y+39, r25	; 0x27
     a74:	8e a3       	std	Y+38, r24	; 0x26
     a76:	12 c0       	rjmp	.+36     	; 0xa9c <__stack+0x23d>
     a78:	80 e9       	ldi	r24, 0x90	; 144
     a7a:	91 e0       	ldi	r25, 0x01	; 1
     a7c:	99 a7       	std	Y+41, r25	; 0x29
     a7e:	88 a7       	std	Y+40, r24	; 0x28
     a80:	88 a5       	ldd	r24, Y+40	; 0x28
     a82:	99 a5       	ldd	r25, Y+41	; 0x29
     a84:	8c 01       	movw	r16, r24
     a86:	c8 01       	movw	r24, r16
     a88:	01 97       	sbiw	r24, 0x01	; 1
     a8a:	f1 f7       	brne	.-4      	; 0xa88 <__stack+0x229>
     a8c:	8c 01       	movw	r16, r24
     a8e:	19 a7       	std	Y+41, r17	; 0x29
     a90:	08 a7       	std	Y+40, r16	; 0x28
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     a92:	8e a1       	ldd	r24, Y+38	; 0x26
     a94:	9f a1       	ldd	r25, Y+39	; 0x27
     a96:	01 97       	sbiw	r24, 0x01	; 1
     a98:	9f a3       	std	Y+39, r25	; 0x27
     a9a:	8e a3       	std	Y+38, r24	; 0x26
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     a9c:	8e a1       	ldd	r24, Y+38	; 0x26
     a9e:	9f a1       	ldd	r25, Y+39	; 0x27
     aa0:	00 97       	sbiw	r24, 0x00	; 0
     aa2:	51 f7       	brne	.-44     	; 0xa78 <__stack+0x219>
     aa4:	17 c0       	rjmp	.+46     	; 0xad4 <__stack+0x275>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     aa6:	6a a1       	ldd	r22, Y+34	; 0x22
     aa8:	7b a1       	ldd	r23, Y+35	; 0x23
     aaa:	8c a1       	ldd	r24, Y+36	; 0x24
     aac:	9d a1       	ldd	r25, Y+37	; 0x25
     aae:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     ab2:	dc 01       	movw	r26, r24
     ab4:	cb 01       	movw	r24, r22
     ab6:	9f a3       	std	Y+39, r25	; 0x27
     ab8:	8e a3       	std	Y+38, r24	; 0x26
     aba:	8e a1       	ldd	r24, Y+38	; 0x26
     abc:	9f a1       	ldd	r25, Y+39	; 0x27
     abe:	9b a7       	std	Y+43, r25	; 0x2b
     ac0:	8a a7       	std	Y+42, r24	; 0x2a
     ac2:	8a a5       	ldd	r24, Y+42	; 0x2a
     ac4:	9b a5       	ldd	r25, Y+43	; 0x2b
     ac6:	8c 01       	movw	r16, r24
     ac8:	f8 01       	movw	r30, r16
     aca:	31 97       	sbiw	r30, 0x01	; 1
     acc:	f1 f7       	brne	.-4      	; 0xaca <__stack+0x26b>
     ace:	8f 01       	movw	r16, r30
     ad0:	1b a7       	std	Y+43, r17	; 0x2b
     ad2:	0a a7       	std	Y+42, r16	; 0x2a

_delay_ms(1); // czekaj 1ms 
LCD_WriteCommand(HD44780_FUNCTION_SET | HD44780_FONT5x7 | HD44780_TWO_LINE | HD44780_4_BIT); // interfejs 4-bity, 2-linie, znak 5x7
     ad4:	88 e2       	ldi	r24, 0x28	; 40
     ad6:	0e 94 cc 01 	call	0x398	; 0x398 <LCD_WriteCommand>
LCD_WriteCommand(HD44780_DISPLAY_ONOFF | HD44780_DISPLAY_OFF); // wy³¹czenie wyswietlacza
     ada:	88 e0       	ldi	r24, 0x08	; 8
     adc:	0e 94 cc 01 	call	0x398	; 0x398 <LCD_WriteCommand>
LCD_WriteCommand(HD44780_CLEAR); // czyszczenie zawartosæi pamieci DDRAM
     ae0:	81 e0       	ldi	r24, 0x01	; 1
     ae2:	0e 94 cc 01 	call	0x398	; 0x398 <LCD_WriteCommand>
     ae6:	80 e0       	ldi	r24, 0x00	; 0
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	a0 e0       	ldi	r26, 0x00	; 0
     aec:	b0 e4       	ldi	r27, 0x40	; 64
     aee:	8c a7       	std	Y+44, r24	; 0x2c
     af0:	9d a7       	std	Y+45, r25	; 0x2d
     af2:	ae a7       	std	Y+46, r26	; 0x2e
     af4:	bf a7       	std	Y+47, r27	; 0x2f
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     af6:	6c a5       	ldd	r22, Y+44	; 0x2c
     af8:	7d a5       	ldd	r23, Y+45	; 0x2d
     afa:	8e a5       	ldd	r24, Y+46	; 0x2e
     afc:	9f a5       	ldd	r25, Y+47	; 0x2f
     afe:	20 e0       	ldi	r18, 0x00	; 0
     b00:	30 e0       	ldi	r19, 0x00	; 0
     b02:	4a e7       	ldi	r20, 0x7A	; 122
     b04:	55 e4       	ldi	r21, 0x45	; 69
     b06:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     b0a:	dc 01       	movw	r26, r24
     b0c:	cb 01       	movw	r24, r22
     b0e:	88 ab       	std	Y+48, r24	; 0x30
     b10:	99 ab       	std	Y+49, r25	; 0x31
     b12:	aa ab       	std	Y+50, r26	; 0x32
     b14:	bb ab       	std	Y+51, r27	; 0x33
	if (__tmp < 1.0)
     b16:	11 e0       	ldi	r17, 0x01	; 1
     b18:	68 a9       	ldd	r22, Y+48	; 0x30
     b1a:	79 a9       	ldd	r23, Y+49	; 0x31
     b1c:	8a a9       	ldd	r24, Y+50	; 0x32
     b1e:	9b a9       	ldd	r25, Y+51	; 0x33
     b20:	20 e0       	ldi	r18, 0x00	; 0
     b22:	30 e0       	ldi	r19, 0x00	; 0
     b24:	40 e8       	ldi	r20, 0x80	; 128
     b26:	5f e3       	ldi	r21, 0x3F	; 63
     b28:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
     b2c:	88 23       	and	r24, r24
     b2e:	0c f0       	brlt	.+2      	; 0xb32 <__stack+0x2d3>
     b30:	10 e0       	ldi	r17, 0x00	; 0
     b32:	11 23       	and	r17, r17
     b34:	29 f0       	breq	.+10     	; 0xb40 <__stack+0x2e1>
		__ticks = 1;
     b36:	81 e0       	ldi	r24, 0x01	; 1
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	9d ab       	std	Y+53, r25	; 0x35
     b3c:	8c ab       	std	Y+52, r24	; 0x34
     b3e:	46 c0       	rjmp	.+140    	; 0xbcc <__stack+0x36d>
	else if (__tmp > 65535)
     b40:	11 e0       	ldi	r17, 0x01	; 1
     b42:	68 a9       	ldd	r22, Y+48	; 0x30
     b44:	79 a9       	ldd	r23, Y+49	; 0x31
     b46:	8a a9       	ldd	r24, Y+50	; 0x32
     b48:	9b a9       	ldd	r25, Y+51	; 0x33
     b4a:	20 e0       	ldi	r18, 0x00	; 0
     b4c:	3f ef       	ldi	r19, 0xFF	; 255
     b4e:	4f e7       	ldi	r20, 0x7F	; 127
     b50:	57 e4       	ldi	r21, 0x47	; 71
     b52:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
     b56:	18 16       	cp	r1, r24
     b58:	0c f0       	brlt	.+2      	; 0xb5c <__stack+0x2fd>
     b5a:	10 e0       	ldi	r17, 0x00	; 0
     b5c:	11 23       	and	r17, r17
     b5e:	61 f1       	breq	.+88     	; 0xbb8 <__stack+0x359>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b60:	6c a5       	ldd	r22, Y+44	; 0x2c
     b62:	7d a5       	ldd	r23, Y+45	; 0x2d
     b64:	8e a5       	ldd	r24, Y+46	; 0x2e
     b66:	9f a5       	ldd	r25, Y+47	; 0x2f
     b68:	20 e0       	ldi	r18, 0x00	; 0
     b6a:	30 e0       	ldi	r19, 0x00	; 0
     b6c:	40 e2       	ldi	r20, 0x20	; 32
     b6e:	51 e4       	ldi	r21, 0x41	; 65
     b70:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     b74:	dc 01       	movw	r26, r24
     b76:	cb 01       	movw	r24, r22
     b78:	bc 01       	movw	r22, r24
     b7a:	cd 01       	movw	r24, r26
     b7c:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     b80:	dc 01       	movw	r26, r24
     b82:	cb 01       	movw	r24, r22
     b84:	9d ab       	std	Y+53, r25	; 0x35
     b86:	8c ab       	std	Y+52, r24	; 0x34
     b88:	12 c0       	rjmp	.+36     	; 0xbae <__stack+0x34f>
     b8a:	80 e9       	ldi	r24, 0x90	; 144
     b8c:	91 e0       	ldi	r25, 0x01	; 1
     b8e:	9f ab       	std	Y+55, r25	; 0x37
     b90:	8e ab       	std	Y+54, r24	; 0x36
     b92:	8e a9       	ldd	r24, Y+54	; 0x36
     b94:	9f a9       	ldd	r25, Y+55	; 0x37
     b96:	8c 01       	movw	r16, r24
     b98:	c8 01       	movw	r24, r16
     b9a:	01 97       	sbiw	r24, 0x01	; 1
     b9c:	f1 f7       	brne	.-4      	; 0xb9a <__stack+0x33b>
     b9e:	8c 01       	movw	r16, r24
     ba0:	1f ab       	std	Y+55, r17	; 0x37
     ba2:	0e ab       	std	Y+54, r16	; 0x36
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     ba4:	8c a9       	ldd	r24, Y+52	; 0x34
     ba6:	9d a9       	ldd	r25, Y+53	; 0x35
     ba8:	01 97       	sbiw	r24, 0x01	; 1
     baa:	9d ab       	std	Y+53, r25	; 0x35
     bac:	8c ab       	std	Y+52, r24	; 0x34
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bae:	8c a9       	ldd	r24, Y+52	; 0x34
     bb0:	9d a9       	ldd	r25, Y+53	; 0x35
     bb2:	00 97       	sbiw	r24, 0x00	; 0
     bb4:	51 f7       	brne	.-44     	; 0xb8a <__stack+0x32b>
     bb6:	17 c0       	rjmp	.+46     	; 0xbe6 <__stack+0x387>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     bb8:	68 a9       	ldd	r22, Y+48	; 0x30
     bba:	79 a9       	ldd	r23, Y+49	; 0x31
     bbc:	8a a9       	ldd	r24, Y+50	; 0x32
     bbe:	9b a9       	ldd	r25, Y+51	; 0x33
     bc0:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     bc4:	dc 01       	movw	r26, r24
     bc6:	cb 01       	movw	r24, r22
     bc8:	9d ab       	std	Y+53, r25	; 0x35
     bca:	8c ab       	std	Y+52, r24	; 0x34
     bcc:	8c a9       	ldd	r24, Y+52	; 0x34
     bce:	9d a9       	ldd	r25, Y+53	; 0x35
     bd0:	99 af       	std	Y+57, r25	; 0x39
     bd2:	88 af       	std	Y+56, r24	; 0x38
     bd4:	88 ad       	ldd	r24, Y+56	; 0x38
     bd6:	99 ad       	ldd	r25, Y+57	; 0x39
     bd8:	8c 01       	movw	r16, r24
     bda:	f8 01       	movw	r30, r16
     bdc:	31 97       	sbiw	r30, 0x01	; 1
     bde:	f1 f7       	brne	.-4      	; 0xbdc <__stack+0x37d>
     be0:	8f 01       	movw	r16, r30
     be2:	19 af       	std	Y+57, r17	; 0x39
     be4:	08 af       	std	Y+56, r16	; 0x38
_delay_ms(2);
LCD_WriteCommand(HD44780_ENTRY_MODE | HD44780_EM_SHIFT_CURSOR | HD44780_EM_INCREMENT);// inkrementaja adresu i przesuwanie kursora
     be6:	86 e0       	ldi	r24, 0x06	; 6
     be8:	0e 94 cc 01 	call	0x398	; 0x398 <LCD_WriteCommand>
LCD_WriteCommand(HD44780_DISPLAY_ONOFF | HD44780_DISPLAY_ON | HD44780_CURSOR_OFF | HD44780_CURSOR_NOBLINK); // w³¹cz LCD, bez kursora i mrugania
     bec:	8c e0       	ldi	r24, 0x0C	; 12
     bee:	0e 94 cc 01 	call	0x398	; 0x398 <LCD_WriteCommand>
}
     bf2:	e9 96       	adiw	r28, 0x39	; 57
     bf4:	0f b6       	in	r0, 0x3f	; 63
     bf6:	f8 94       	cli
     bf8:	de bf       	out	0x3e, r29	; 62
     bfa:	0f be       	out	0x3f, r0	; 63
     bfc:	cd bf       	out	0x3d, r28	; 61
     bfe:	cf 91       	pop	r28
     c00:	df 91       	pop	r29
     c02:	1f 91       	pop	r17
     c04:	0f 91       	pop	r16
     c06:	08 95       	ret

00000c08 <main>:
#include <avr/interrupt.h>
#include "HD44780.h"
#include <stdlib.h>

int main(void)
{
     c08:	0f 93       	push	r16
     c0a:	1f 93       	push	r17
     c0c:	df 93       	push	r29
     c0e:	cf 93       	push	r28
     c10:	cd b7       	in	r28, 0x3d	; 61
     c12:	de b7       	in	r29, 0x3e	; 62
     c14:	ca 58       	subi	r28, 0x8A	; 138
     c16:	d0 40       	sbci	r29, 0x00	; 0
     c18:	0f b6       	in	r0, 0x3f	; 63
     c1a:	f8 94       	cli
     c1c:	de bf       	out	0x3e, r29	; 62
     c1e:	0f be       	out	0x3f, r0	; 63
     c20:	cd bf       	out	0x3d, r28	; 61

    DDRD = 0xff;
     c22:	81 e3       	ldi	r24, 0x31	; 49
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	2f ef       	ldi	r18, 0xFF	; 255
     c28:	fc 01       	movw	r30, r24
     c2a:	20 83       	st	Z, r18
    PORTD = 0x00;
     c2c:	82 e3       	ldi	r24, 0x32	; 50
     c2e:	90 e0       	ldi	r25, 0x00	; 0
     c30:	fc 01       	movw	r30, r24
     c32:	10 82       	st	Z, r1

    char tekst[10] ;
    // Insert code
    LCD_Initalize();
     c34:	0e 94 63 03 	call	0x6c6	; 0x6c6 <LCD_Initalize>
    LCD_GoTo(0, 0);
     c38:	80 e0       	ldi	r24, 0x00	; 0
     c3a:	60 e0       	ldi	r22, 0x00	; 0
     c3c:	0e 94 18 02 	call	0x430	; 0x430 <LCD_GoTo>
    LCD_WriteText("UPS :)");
     c40:	80 e6       	ldi	r24, 0x60	; 96
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_WriteText>
    LCD_GoTo(0, 1);
     c48:	80 e0       	ldi	r24, 0x00	; 0
     c4a:	61 e0       	ldi	r22, 0x01	; 1
     c4c:	0e 94 18 02 	call	0x430	; 0x430 <LCD_GoTo>
    LCD_WriteText("Countdown: RUN ! ! !");
     c50:	87 e6       	ldi	r24, 0x67	; 103
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_WriteText>
     c58:	80 e0       	ldi	r24, 0x00	; 0
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	a8 ec       	ldi	r26, 0xC8	; 200
     c5e:	b2 e4       	ldi	r27, 0x42	; 66
     c60:	8b 83       	std	Y+3, r24	; 0x03
     c62:	9c 83       	std	Y+4, r25	; 0x04
     c64:	ad 83       	std	Y+5, r26	; 0x05
     c66:	be 83       	std	Y+6, r27	; 0x06
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     c68:	6b 81       	ldd	r22, Y+3	; 0x03
     c6a:	7c 81       	ldd	r23, Y+4	; 0x04
     c6c:	8d 81       	ldd	r24, Y+5	; 0x05
     c6e:	9e 81       	ldd	r25, Y+6	; 0x06
     c70:	20 e0       	ldi	r18, 0x00	; 0
     c72:	30 e0       	ldi	r19, 0x00	; 0
     c74:	4a e7       	ldi	r20, 0x7A	; 122
     c76:	55 e4       	ldi	r21, 0x45	; 69
     c78:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     c7c:	dc 01       	movw	r26, r24
     c7e:	cb 01       	movw	r24, r22
     c80:	8f 83       	std	Y+7, r24	; 0x07
     c82:	98 87       	std	Y+8, r25	; 0x08
     c84:	a9 87       	std	Y+9, r26	; 0x09
     c86:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     c88:	11 e0       	ldi	r17, 0x01	; 1
     c8a:	6f 81       	ldd	r22, Y+7	; 0x07
     c8c:	78 85       	ldd	r23, Y+8	; 0x08
     c8e:	89 85       	ldd	r24, Y+9	; 0x09
     c90:	9a 85       	ldd	r25, Y+10	; 0x0a
     c92:	20 e0       	ldi	r18, 0x00	; 0
     c94:	30 e0       	ldi	r19, 0x00	; 0
     c96:	40 e8       	ldi	r20, 0x80	; 128
     c98:	5f e3       	ldi	r21, 0x3F	; 63
     c9a:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
     c9e:	88 23       	and	r24, r24
     ca0:	0c f0       	brlt	.+2      	; 0xca4 <main+0x9c>
     ca2:	10 e0       	ldi	r17, 0x00	; 0
     ca4:	11 23       	and	r17, r17
     ca6:	29 f0       	breq	.+10     	; 0xcb2 <main+0xaa>
		__ticks = 1;
     ca8:	81 e0       	ldi	r24, 0x01	; 1
     caa:	90 e0       	ldi	r25, 0x00	; 0
     cac:	9c 87       	std	Y+12, r25	; 0x0c
     cae:	8b 87       	std	Y+11, r24	; 0x0b
     cb0:	46 c0       	rjmp	.+140    	; 0xd3e <main+0x136>
	else if (__tmp > 65535)
     cb2:	11 e0       	ldi	r17, 0x01	; 1
     cb4:	6f 81       	ldd	r22, Y+7	; 0x07
     cb6:	78 85       	ldd	r23, Y+8	; 0x08
     cb8:	89 85       	ldd	r24, Y+9	; 0x09
     cba:	9a 85       	ldd	r25, Y+10	; 0x0a
     cbc:	20 e0       	ldi	r18, 0x00	; 0
     cbe:	3f ef       	ldi	r19, 0xFF	; 255
     cc0:	4f e7       	ldi	r20, 0x7F	; 127
     cc2:	57 e4       	ldi	r21, 0x47	; 71
     cc4:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
     cc8:	18 16       	cp	r1, r24
     cca:	0c f0       	brlt	.+2      	; 0xcce <main+0xc6>
     ccc:	10 e0       	ldi	r17, 0x00	; 0
     cce:	11 23       	and	r17, r17
     cd0:	61 f1       	breq	.+88     	; 0xd2a <main+0x122>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     cd2:	6b 81       	ldd	r22, Y+3	; 0x03
     cd4:	7c 81       	ldd	r23, Y+4	; 0x04
     cd6:	8d 81       	ldd	r24, Y+5	; 0x05
     cd8:	9e 81       	ldd	r25, Y+6	; 0x06
     cda:	20 e0       	ldi	r18, 0x00	; 0
     cdc:	30 e0       	ldi	r19, 0x00	; 0
     cde:	40 e2       	ldi	r20, 0x20	; 32
     ce0:	51 e4       	ldi	r21, 0x41	; 65
     ce2:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     ce6:	dc 01       	movw	r26, r24
     ce8:	cb 01       	movw	r24, r22
     cea:	bc 01       	movw	r22, r24
     cec:	cd 01       	movw	r24, r26
     cee:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     cf2:	dc 01       	movw	r26, r24
     cf4:	cb 01       	movw	r24, r22
     cf6:	9c 87       	std	Y+12, r25	; 0x0c
     cf8:	8b 87       	std	Y+11, r24	; 0x0b
     cfa:	12 c0       	rjmp	.+36     	; 0xd20 <main+0x118>
     cfc:	80 e9       	ldi	r24, 0x90	; 144
     cfe:	91 e0       	ldi	r25, 0x01	; 1
     d00:	9e 87       	std	Y+14, r25	; 0x0e
     d02:	8d 87       	std	Y+13, r24	; 0x0d
     d04:	8d 85       	ldd	r24, Y+13	; 0x0d
     d06:	9e 85       	ldd	r25, Y+14	; 0x0e
     d08:	8c 01       	movw	r16, r24
     d0a:	c8 01       	movw	r24, r16
     d0c:	01 97       	sbiw	r24, 0x01	; 1
     d0e:	f1 f7       	brne	.-4      	; 0xd0c <main+0x104>
     d10:	8c 01       	movw	r16, r24
     d12:	1e 87       	std	Y+14, r17	; 0x0e
     d14:	0d 87       	std	Y+13, r16	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d16:	8b 85       	ldd	r24, Y+11	; 0x0b
     d18:	9c 85       	ldd	r25, Y+12	; 0x0c
     d1a:	01 97       	sbiw	r24, 0x01	; 1
     d1c:	9c 87       	std	Y+12, r25	; 0x0c
     d1e:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d20:	8b 85       	ldd	r24, Y+11	; 0x0b
     d22:	9c 85       	ldd	r25, Y+12	; 0x0c
     d24:	00 97       	sbiw	r24, 0x00	; 0
     d26:	51 f7       	brne	.-44     	; 0xcfc <main+0xf4>
     d28:	17 c0       	rjmp	.+46     	; 0xd58 <main+0x150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d2a:	6f 81       	ldd	r22, Y+7	; 0x07
     d2c:	78 85       	ldd	r23, Y+8	; 0x08
     d2e:	89 85       	ldd	r24, Y+9	; 0x09
     d30:	9a 85       	ldd	r25, Y+10	; 0x0a
     d32:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     d36:	dc 01       	movw	r26, r24
     d38:	cb 01       	movw	r24, r22
     d3a:	9c 87       	std	Y+12, r25	; 0x0c
     d3c:	8b 87       	std	Y+11, r24	; 0x0b
     d3e:	8b 85       	ldd	r24, Y+11	; 0x0b
     d40:	9c 85       	ldd	r25, Y+12	; 0x0c
     d42:	98 8b       	std	Y+16, r25	; 0x10
     d44:	8f 87       	std	Y+15, r24	; 0x0f
     d46:	8f 85       	ldd	r24, Y+15	; 0x0f
     d48:	98 89       	ldd	r25, Y+16	; 0x10
     d4a:	8c 01       	movw	r16, r24
     d4c:	f8 01       	movw	r30, r16
     d4e:	31 97       	sbiw	r30, 0x01	; 1
     d50:	f1 f7       	brne	.-4      	; 0xd4e <main+0x146>
     d52:	8f 01       	movw	r16, r30
     d54:	18 8b       	std	Y+16, r17	; 0x10
     d56:	0f 87       	std	Y+15, r16	; 0x0f
    _delay_ms(100);

    int liczba = 10;
     d58:	8a e0       	ldi	r24, 0x0A	; 10
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	9a 83       	std	Y+2, r25	; 0x02
     d5e:	89 83       	std	Y+1, r24	; 0x01
     d60:	01 c0       	rjmp	.+2      	; 0xd64 <main+0x15c>


    }


    };
     d62:	00 00       	nop


    while(1)
    {

    LCD_Home();
     d64:	0e 94 c9 02 	call	0x592	; 0x592 <LCD_Home>
    LCD_Clear();
     d68:	0e 94 2f 02 	call	0x45e	; 0x45e <LCD_Clear>

    sprintf(tekst, "%i", liczba);
     d6c:	00 d0       	rcall	.+0      	; 0xd6e <main+0x166>
     d6e:	00 d0       	rcall	.+0      	; 0xd70 <main+0x168>
     d70:	00 d0       	rcall	.+0      	; 0xd72 <main+0x16a>
     d72:	8d b7       	in	r24, 0x3d	; 61
     d74:	9e b7       	in	r25, 0x3e	; 62
     d76:	01 96       	adiw	r24, 0x01	; 1
     d78:	9e 01       	movw	r18, r28
     d7a:	2f 57       	subi	r18, 0x7F	; 127
     d7c:	3f 4f       	sbci	r19, 0xFF	; 255
     d7e:	fc 01       	movw	r30, r24
     d80:	31 83       	std	Z+1, r19	; 0x01
     d82:	20 83       	st	Z, r18
     d84:	2c e7       	ldi	r18, 0x7C	; 124
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	fc 01       	movw	r30, r24
     d8a:	33 83       	std	Z+3, r19	; 0x03
     d8c:	22 83       	std	Z+2, r18	; 0x02
     d8e:	29 81       	ldd	r18, Y+1	; 0x01
     d90:	3a 81       	ldd	r19, Y+2	; 0x02
     d92:	fc 01       	movw	r30, r24
     d94:	35 83       	std	Z+5, r19	; 0x05
     d96:	24 83       	std	Z+4, r18	; 0x04
     d98:	0e 94 dc 12 	call	0x25b8	; 0x25b8 <sprintf>
     d9c:	8d b7       	in	r24, 0x3d	; 61
     d9e:	9e b7       	in	r25, 0x3e	; 62
     da0:	06 96       	adiw	r24, 0x06	; 6
     da2:	0f b6       	in	r0, 0x3f	; 63
     da4:	f8 94       	cli
     da6:	9e bf       	out	0x3e, r25	; 62
     da8:	0f be       	out	0x3f, r0	; 63
     daa:	8d bf       	out	0x3d, r24	; 61
    LCD_WriteText(tekst);
     dac:	ce 01       	movw	r24, r28
     dae:	8f 57       	subi	r24, 0x7F	; 127
     db0:	9f 4f       	sbci	r25, 0xFF	; 255
     db2:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_WriteText>
     db6:	80 e0       	ldi	r24, 0x00	; 0
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	a0 ef       	ldi	r26, 0xF0	; 240
     dbc:	b1 e4       	ldi	r27, 0x41	; 65
     dbe:	89 8b       	std	Y+17, r24	; 0x11
     dc0:	9a 8b       	std	Y+18, r25	; 0x12
     dc2:	ab 8b       	std	Y+19, r26	; 0x13
     dc4:	bc 8b       	std	Y+20, r27	; 0x14
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     dc6:	69 89       	ldd	r22, Y+17	; 0x11
     dc8:	7a 89       	ldd	r23, Y+18	; 0x12
     dca:	8b 89       	ldd	r24, Y+19	; 0x13
     dcc:	9c 89       	ldd	r25, Y+20	; 0x14
     dce:	20 e0       	ldi	r18, 0x00	; 0
     dd0:	30 e0       	ldi	r19, 0x00	; 0
     dd2:	4a e7       	ldi	r20, 0x7A	; 122
     dd4:	55 e4       	ldi	r21, 0x45	; 69
     dd6:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     dda:	dc 01       	movw	r26, r24
     ddc:	cb 01       	movw	r24, r22
     dde:	8d 8b       	std	Y+21, r24	; 0x15
     de0:	9e 8b       	std	Y+22, r25	; 0x16
     de2:	af 8b       	std	Y+23, r26	; 0x17
     de4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
     de6:	11 e0       	ldi	r17, 0x01	; 1
     de8:	6d 89       	ldd	r22, Y+21	; 0x15
     dea:	7e 89       	ldd	r23, Y+22	; 0x16
     dec:	8f 89       	ldd	r24, Y+23	; 0x17
     dee:	98 8d       	ldd	r25, Y+24	; 0x18
     df0:	20 e0       	ldi	r18, 0x00	; 0
     df2:	30 e0       	ldi	r19, 0x00	; 0
     df4:	40 e8       	ldi	r20, 0x80	; 128
     df6:	5f e3       	ldi	r21, 0x3F	; 63
     df8:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
     dfc:	88 23       	and	r24, r24
     dfe:	0c f0       	brlt	.+2      	; 0xe02 <main+0x1fa>
     e00:	10 e0       	ldi	r17, 0x00	; 0
     e02:	11 23       	and	r17, r17
     e04:	29 f0       	breq	.+10     	; 0xe10 <main+0x208>
		__ticks = 1;
     e06:	81 e0       	ldi	r24, 0x01	; 1
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	9a 8f       	std	Y+26, r25	; 0x1a
     e0c:	89 8f       	std	Y+25, r24	; 0x19
     e0e:	46 c0       	rjmp	.+140    	; 0xe9c <main+0x294>
	else if (__tmp > 65535)
     e10:	11 e0       	ldi	r17, 0x01	; 1
     e12:	6d 89       	ldd	r22, Y+21	; 0x15
     e14:	7e 89       	ldd	r23, Y+22	; 0x16
     e16:	8f 89       	ldd	r24, Y+23	; 0x17
     e18:	98 8d       	ldd	r25, Y+24	; 0x18
     e1a:	20 e0       	ldi	r18, 0x00	; 0
     e1c:	3f ef       	ldi	r19, 0xFF	; 255
     e1e:	4f e7       	ldi	r20, 0x7F	; 127
     e20:	57 e4       	ldi	r21, 0x47	; 71
     e22:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
     e26:	18 16       	cp	r1, r24
     e28:	0c f0       	brlt	.+2      	; 0xe2c <main+0x224>
     e2a:	10 e0       	ldi	r17, 0x00	; 0
     e2c:	11 23       	and	r17, r17
     e2e:	61 f1       	breq	.+88     	; 0xe88 <main+0x280>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e30:	69 89       	ldd	r22, Y+17	; 0x11
     e32:	7a 89       	ldd	r23, Y+18	; 0x12
     e34:	8b 89       	ldd	r24, Y+19	; 0x13
     e36:	9c 89       	ldd	r25, Y+20	; 0x14
     e38:	20 e0       	ldi	r18, 0x00	; 0
     e3a:	30 e0       	ldi	r19, 0x00	; 0
     e3c:	40 e2       	ldi	r20, 0x20	; 32
     e3e:	51 e4       	ldi	r21, 0x41	; 65
     e40:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     e44:	dc 01       	movw	r26, r24
     e46:	cb 01       	movw	r24, r22
     e48:	bc 01       	movw	r22, r24
     e4a:	cd 01       	movw	r24, r26
     e4c:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     e50:	dc 01       	movw	r26, r24
     e52:	cb 01       	movw	r24, r22
     e54:	9a 8f       	std	Y+26, r25	; 0x1a
     e56:	89 8f       	std	Y+25, r24	; 0x19
     e58:	12 c0       	rjmp	.+36     	; 0xe7e <main+0x276>
     e5a:	80 e9       	ldi	r24, 0x90	; 144
     e5c:	91 e0       	ldi	r25, 0x01	; 1
     e5e:	9c 8f       	std	Y+28, r25	; 0x1c
     e60:	8b 8f       	std	Y+27, r24	; 0x1b
     e62:	8b 8d       	ldd	r24, Y+27	; 0x1b
     e64:	9c 8d       	ldd	r25, Y+28	; 0x1c
     e66:	8c 01       	movw	r16, r24
     e68:	f8 01       	movw	r30, r16
     e6a:	31 97       	sbiw	r30, 0x01	; 1
     e6c:	f1 f7       	brne	.-4      	; 0xe6a <main+0x262>
     e6e:	8f 01       	movw	r16, r30
     e70:	1c 8f       	std	Y+28, r17	; 0x1c
     e72:	0b 8f       	std	Y+27, r16	; 0x1b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e74:	89 8d       	ldd	r24, Y+25	; 0x19
     e76:	9a 8d       	ldd	r25, Y+26	; 0x1a
     e78:	01 97       	sbiw	r24, 0x01	; 1
     e7a:	9a 8f       	std	Y+26, r25	; 0x1a
     e7c:	89 8f       	std	Y+25, r24	; 0x19
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e7e:	89 8d       	ldd	r24, Y+25	; 0x19
     e80:	9a 8d       	ldd	r25, Y+26	; 0x1a
     e82:	00 97       	sbiw	r24, 0x00	; 0
     e84:	51 f7       	brne	.-44     	; 0xe5a <main+0x252>
     e86:	17 c0       	rjmp	.+46     	; 0xeb6 <main+0x2ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e88:	6d 89       	ldd	r22, Y+21	; 0x15
     e8a:	7e 89       	ldd	r23, Y+22	; 0x16
     e8c:	8f 89       	ldd	r24, Y+23	; 0x17
     e8e:	98 8d       	ldd	r25, Y+24	; 0x18
     e90:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     e94:	dc 01       	movw	r26, r24
     e96:	cb 01       	movw	r24, r22
     e98:	9a 8f       	std	Y+26, r25	; 0x1a
     e9a:	89 8f       	std	Y+25, r24	; 0x19
     e9c:	89 8d       	ldd	r24, Y+25	; 0x19
     e9e:	9a 8d       	ldd	r25, Y+26	; 0x1a
     ea0:	9e 8f       	std	Y+30, r25	; 0x1e
     ea2:	8d 8f       	std	Y+29, r24	; 0x1d
     ea4:	8d 8d       	ldd	r24, Y+29	; 0x1d
     ea6:	9e 8d       	ldd	r25, Y+30	; 0x1e
     ea8:	8c 01       	movw	r16, r24
     eaa:	c8 01       	movw	r24, r16
     eac:	01 97       	sbiw	r24, 0x01	; 1
     eae:	f1 f7       	brne	.-4      	; 0xeac <main+0x2a4>
     eb0:	8c 01       	movw	r16, r24
     eb2:	1e 8f       	std	Y+30, r17	; 0x1e
     eb4:	0d 8f       	std	Y+29, r16	; 0x1d

    _delay_ms(30);

    liczba--;
     eb6:	89 81       	ldd	r24, Y+1	; 0x01
     eb8:	9a 81       	ldd	r25, Y+2	; 0x02
     eba:	01 97       	sbiw	r24, 0x01	; 1
     ebc:	9a 83       	std	Y+2, r25	; 0x02
     ebe:	89 83       	std	Y+1, r24	; 0x01


    if (liczba == 0)
     ec0:	89 81       	ldd	r24, Y+1	; 0x01
     ec2:	9a 81       	ldd	r25, Y+2	; 0x02
     ec4:	00 97       	sbiw	r24, 0x00	; 0
     ec6:	09 f0       	breq	.+2      	; 0xeca <main+0x2c2>
     ec8:	4c cf       	rjmp	.-360    	; 0xd62 <main+0x15a>
    }


    };

    LCD_Home();
     eca:	0e 94 c9 02 	call	0x592	; 0x592 <LCD_Home>
    LCD_Clear();
     ece:	0e 94 2f 02 	call	0x45e	; 0x45e <LCD_Clear>

    LCD_WriteText("       *    ");
     ed2:	8f e7       	ldi	r24, 0x7F	; 127
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_WriteText>
     eda:	80 e0       	ldi	r24, 0x00	; 0
     edc:	90 e0       	ldi	r25, 0x00	; 0
     ede:	a8 e4       	ldi	r26, 0x48	; 72
     ee0:	b2 e4       	ldi	r27, 0x42	; 66
     ee2:	8f 8f       	std	Y+31, r24	; 0x1f
     ee4:	98 a3       	std	Y+32, r25	; 0x20
     ee6:	a9 a3       	std	Y+33, r26	; 0x21
     ee8:	ba a3       	std	Y+34, r27	; 0x22
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     eea:	6f 8d       	ldd	r22, Y+31	; 0x1f
     eec:	78 a1       	ldd	r23, Y+32	; 0x20
     eee:	89 a1       	ldd	r24, Y+33	; 0x21
     ef0:	9a a1       	ldd	r25, Y+34	; 0x22
     ef2:	20 e0       	ldi	r18, 0x00	; 0
     ef4:	30 e0       	ldi	r19, 0x00	; 0
     ef6:	4a e7       	ldi	r20, 0x7A	; 122
     ef8:	55 e4       	ldi	r21, 0x45	; 69
     efa:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     efe:	dc 01       	movw	r26, r24
     f00:	cb 01       	movw	r24, r22
     f02:	8b a3       	std	Y+35, r24	; 0x23
     f04:	9c a3       	std	Y+36, r25	; 0x24
     f06:	ad a3       	std	Y+37, r26	; 0x25
     f08:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
     f0a:	11 e0       	ldi	r17, 0x01	; 1
     f0c:	6b a1       	ldd	r22, Y+35	; 0x23
     f0e:	7c a1       	ldd	r23, Y+36	; 0x24
     f10:	8d a1       	ldd	r24, Y+37	; 0x25
     f12:	9e a1       	ldd	r25, Y+38	; 0x26
     f14:	20 e0       	ldi	r18, 0x00	; 0
     f16:	30 e0       	ldi	r19, 0x00	; 0
     f18:	40 e8       	ldi	r20, 0x80	; 128
     f1a:	5f e3       	ldi	r21, 0x3F	; 63
     f1c:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
     f20:	88 23       	and	r24, r24
     f22:	0c f0       	brlt	.+2      	; 0xf26 <main+0x31e>
     f24:	10 e0       	ldi	r17, 0x00	; 0
     f26:	11 23       	and	r17, r17
     f28:	29 f0       	breq	.+10     	; 0xf34 <main+0x32c>
		__ticks = 1;
     f2a:	81 e0       	ldi	r24, 0x01	; 1
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	98 a7       	std	Y+40, r25	; 0x28
     f30:	8f a3       	std	Y+39, r24	; 0x27
     f32:	46 c0       	rjmp	.+140    	; 0xfc0 <main+0x3b8>
	else if (__tmp > 65535)
     f34:	11 e0       	ldi	r17, 0x01	; 1
     f36:	6b a1       	ldd	r22, Y+35	; 0x23
     f38:	7c a1       	ldd	r23, Y+36	; 0x24
     f3a:	8d a1       	ldd	r24, Y+37	; 0x25
     f3c:	9e a1       	ldd	r25, Y+38	; 0x26
     f3e:	20 e0       	ldi	r18, 0x00	; 0
     f40:	3f ef       	ldi	r19, 0xFF	; 255
     f42:	4f e7       	ldi	r20, 0x7F	; 127
     f44:	57 e4       	ldi	r21, 0x47	; 71
     f46:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
     f4a:	18 16       	cp	r1, r24
     f4c:	0c f0       	brlt	.+2      	; 0xf50 <main+0x348>
     f4e:	10 e0       	ldi	r17, 0x00	; 0
     f50:	11 23       	and	r17, r17
     f52:	61 f1       	breq	.+88     	; 0xfac <main+0x3a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     f54:	6f 8d       	ldd	r22, Y+31	; 0x1f
     f56:	78 a1       	ldd	r23, Y+32	; 0x20
     f58:	89 a1       	ldd	r24, Y+33	; 0x21
     f5a:	9a a1       	ldd	r25, Y+34	; 0x22
     f5c:	20 e0       	ldi	r18, 0x00	; 0
     f5e:	30 e0       	ldi	r19, 0x00	; 0
     f60:	40 e2       	ldi	r20, 0x20	; 32
     f62:	51 e4       	ldi	r21, 0x41	; 65
     f64:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
     f68:	dc 01       	movw	r26, r24
     f6a:	cb 01       	movw	r24, r22
     f6c:	bc 01       	movw	r22, r24
     f6e:	cd 01       	movw	r24, r26
     f70:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     f74:	dc 01       	movw	r26, r24
     f76:	cb 01       	movw	r24, r22
     f78:	98 a7       	std	Y+40, r25	; 0x28
     f7a:	8f a3       	std	Y+39, r24	; 0x27
     f7c:	12 c0       	rjmp	.+36     	; 0xfa2 <main+0x39a>
     f7e:	80 e9       	ldi	r24, 0x90	; 144
     f80:	91 e0       	ldi	r25, 0x01	; 1
     f82:	9a a7       	std	Y+42, r25	; 0x2a
     f84:	89 a7       	std	Y+41, r24	; 0x29
     f86:	89 a5       	ldd	r24, Y+41	; 0x29
     f88:	9a a5       	ldd	r25, Y+42	; 0x2a
     f8a:	8c 01       	movw	r16, r24
     f8c:	f8 01       	movw	r30, r16
     f8e:	31 97       	sbiw	r30, 0x01	; 1
     f90:	f1 f7       	brne	.-4      	; 0xf8e <main+0x386>
     f92:	8f 01       	movw	r16, r30
     f94:	1a a7       	std	Y+42, r17	; 0x2a
     f96:	09 a7       	std	Y+41, r16	; 0x29
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f98:	8f a1       	ldd	r24, Y+39	; 0x27
     f9a:	98 a5       	ldd	r25, Y+40	; 0x28
     f9c:	01 97       	sbiw	r24, 0x01	; 1
     f9e:	98 a7       	std	Y+40, r25	; 0x28
     fa0:	8f a3       	std	Y+39, r24	; 0x27
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     fa2:	8f a1       	ldd	r24, Y+39	; 0x27
     fa4:	98 a5       	ldd	r25, Y+40	; 0x28
     fa6:	00 97       	sbiw	r24, 0x00	; 0
     fa8:	51 f7       	brne	.-44     	; 0xf7e <main+0x376>
     faa:	17 c0       	rjmp	.+46     	; 0xfda <main+0x3d2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     fac:	6b a1       	ldd	r22, Y+35	; 0x23
     fae:	7c a1       	ldd	r23, Y+36	; 0x24
     fb0:	8d a1       	ldd	r24, Y+37	; 0x25
     fb2:	9e a1       	ldd	r25, Y+38	; 0x26
     fb4:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
     fb8:	dc 01       	movw	r26, r24
     fba:	cb 01       	movw	r24, r22
     fbc:	98 a7       	std	Y+40, r25	; 0x28
     fbe:	8f a3       	std	Y+39, r24	; 0x27
     fc0:	8f a1       	ldd	r24, Y+39	; 0x27
     fc2:	98 a5       	ldd	r25, Y+40	; 0x28
     fc4:	9c a7       	std	Y+44, r25	; 0x2c
     fc6:	8b a7       	std	Y+43, r24	; 0x2b
     fc8:	8b a5       	ldd	r24, Y+43	; 0x2b
     fca:	9c a5       	ldd	r25, Y+44	; 0x2c
     fcc:	8c 01       	movw	r16, r24
     fce:	c8 01       	movw	r24, r16
     fd0:	01 97       	sbiw	r24, 0x01	; 1
     fd2:	f1 f7       	brne	.-4      	; 0xfd0 <main+0x3c8>
     fd4:	8c 01       	movw	r16, r24
     fd6:	1c a7       	std	Y+44, r17	; 0x2c
     fd8:	0b a7       	std	Y+43, r16	; 0x2b

    _delay_ms(50);


    LCD_Home();
     fda:	0e 94 c9 02 	call	0x592	; 0x592 <LCD_Home>
    LCD_Clear();
     fde:	0e 94 2f 02 	call	0x45e	; 0x45e <LCD_Clear>

    LCD_WriteText("      (*)  ");
     fe2:	8c e8       	ldi	r24, 0x8C	; 140
     fe4:	90 e0       	ldi	r25, 0x00	; 0
     fe6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_WriteText>
     fea:	80 e0       	ldi	r24, 0x00	; 0
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	a8 e4       	ldi	r26, 0x48	; 72
     ff0:	b2 e4       	ldi	r27, 0x42	; 66
     ff2:	8d a7       	std	Y+45, r24	; 0x2d
     ff4:	9e a7       	std	Y+46, r25	; 0x2e
     ff6:	af a7       	std	Y+47, r26	; 0x2f
     ff8:	b8 ab       	std	Y+48, r27	; 0x30
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     ffa:	6d a5       	ldd	r22, Y+45	; 0x2d
     ffc:	7e a5       	ldd	r23, Y+46	; 0x2e
     ffe:	8f a5       	ldd	r24, Y+47	; 0x2f
    1000:	98 a9       	ldd	r25, Y+48	; 0x30
    1002:	20 e0       	ldi	r18, 0x00	; 0
    1004:	30 e0       	ldi	r19, 0x00	; 0
    1006:	4a e7       	ldi	r20, 0x7A	; 122
    1008:	55 e4       	ldi	r21, 0x45	; 69
    100a:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
    100e:	dc 01       	movw	r26, r24
    1010:	cb 01       	movw	r24, r22
    1012:	89 ab       	std	Y+49, r24	; 0x31
    1014:	9a ab       	std	Y+50, r25	; 0x32
    1016:	ab ab       	std	Y+51, r26	; 0x33
    1018:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    101a:	11 e0       	ldi	r17, 0x01	; 1
    101c:	69 a9       	ldd	r22, Y+49	; 0x31
    101e:	7a a9       	ldd	r23, Y+50	; 0x32
    1020:	8b a9       	ldd	r24, Y+51	; 0x33
    1022:	9c a9       	ldd	r25, Y+52	; 0x34
    1024:	20 e0       	ldi	r18, 0x00	; 0
    1026:	30 e0       	ldi	r19, 0x00	; 0
    1028:	40 e8       	ldi	r20, 0x80	; 128
    102a:	5f e3       	ldi	r21, 0x3F	; 63
    102c:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
    1030:	88 23       	and	r24, r24
    1032:	0c f0       	brlt	.+2      	; 0x1036 <main+0x42e>
    1034:	10 e0       	ldi	r17, 0x00	; 0
    1036:	11 23       	and	r17, r17
    1038:	29 f0       	breq	.+10     	; 0x1044 <main+0x43c>
		__ticks = 1;
    103a:	81 e0       	ldi	r24, 0x01	; 1
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	9e ab       	std	Y+54, r25	; 0x36
    1040:	8d ab       	std	Y+53, r24	; 0x35
    1042:	46 c0       	rjmp	.+140    	; 0x10d0 <main+0x4c8>
	else if (__tmp > 65535)
    1044:	11 e0       	ldi	r17, 0x01	; 1
    1046:	69 a9       	ldd	r22, Y+49	; 0x31
    1048:	7a a9       	ldd	r23, Y+50	; 0x32
    104a:	8b a9       	ldd	r24, Y+51	; 0x33
    104c:	9c a9       	ldd	r25, Y+52	; 0x34
    104e:	20 e0       	ldi	r18, 0x00	; 0
    1050:	3f ef       	ldi	r19, 0xFF	; 255
    1052:	4f e7       	ldi	r20, 0x7F	; 127
    1054:	57 e4       	ldi	r21, 0x47	; 71
    1056:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
    105a:	18 16       	cp	r1, r24
    105c:	0c f0       	brlt	.+2      	; 0x1060 <main+0x458>
    105e:	10 e0       	ldi	r17, 0x00	; 0
    1060:	11 23       	and	r17, r17
    1062:	61 f1       	breq	.+88     	; 0x10bc <main+0x4b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1064:	6d a5       	ldd	r22, Y+45	; 0x2d
    1066:	7e a5       	ldd	r23, Y+46	; 0x2e
    1068:	8f a5       	ldd	r24, Y+47	; 0x2f
    106a:	98 a9       	ldd	r25, Y+48	; 0x30
    106c:	20 e0       	ldi	r18, 0x00	; 0
    106e:	30 e0       	ldi	r19, 0x00	; 0
    1070:	40 e2       	ldi	r20, 0x20	; 32
    1072:	51 e4       	ldi	r21, 0x41	; 65
    1074:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
    1078:	dc 01       	movw	r26, r24
    107a:	cb 01       	movw	r24, r22
    107c:	bc 01       	movw	r22, r24
    107e:	cd 01       	movw	r24, r26
    1080:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
    1084:	dc 01       	movw	r26, r24
    1086:	cb 01       	movw	r24, r22
    1088:	9e ab       	std	Y+54, r25	; 0x36
    108a:	8d ab       	std	Y+53, r24	; 0x35
    108c:	12 c0       	rjmp	.+36     	; 0x10b2 <main+0x4aa>
    108e:	80 e9       	ldi	r24, 0x90	; 144
    1090:	91 e0       	ldi	r25, 0x01	; 1
    1092:	98 af       	std	Y+56, r25	; 0x38
    1094:	8f ab       	std	Y+55, r24	; 0x37
    1096:	8f a9       	ldd	r24, Y+55	; 0x37
    1098:	98 ad       	ldd	r25, Y+56	; 0x38
    109a:	8c 01       	movw	r16, r24
    109c:	f8 01       	movw	r30, r16
    109e:	31 97       	sbiw	r30, 0x01	; 1
    10a0:	f1 f7       	brne	.-4      	; 0x109e <main+0x496>
    10a2:	8f 01       	movw	r16, r30
    10a4:	18 af       	std	Y+56, r17	; 0x38
    10a6:	0f ab       	std	Y+55, r16	; 0x37
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10a8:	8d a9       	ldd	r24, Y+53	; 0x35
    10aa:	9e a9       	ldd	r25, Y+54	; 0x36
    10ac:	01 97       	sbiw	r24, 0x01	; 1
    10ae:	9e ab       	std	Y+54, r25	; 0x36
    10b0:	8d ab       	std	Y+53, r24	; 0x35
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10b2:	8d a9       	ldd	r24, Y+53	; 0x35
    10b4:	9e a9       	ldd	r25, Y+54	; 0x36
    10b6:	00 97       	sbiw	r24, 0x00	; 0
    10b8:	51 f7       	brne	.-44     	; 0x108e <main+0x486>
    10ba:	17 c0       	rjmp	.+46     	; 0x10ea <main+0x4e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10bc:	69 a9       	ldd	r22, Y+49	; 0x31
    10be:	7a a9       	ldd	r23, Y+50	; 0x32
    10c0:	8b a9       	ldd	r24, Y+51	; 0x33
    10c2:	9c a9       	ldd	r25, Y+52	; 0x34
    10c4:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
    10c8:	dc 01       	movw	r26, r24
    10ca:	cb 01       	movw	r24, r22
    10cc:	9e ab       	std	Y+54, r25	; 0x36
    10ce:	8d ab       	std	Y+53, r24	; 0x35
    10d0:	8d a9       	ldd	r24, Y+53	; 0x35
    10d2:	9e a9       	ldd	r25, Y+54	; 0x36
    10d4:	9a af       	std	Y+58, r25	; 0x3a
    10d6:	89 af       	std	Y+57, r24	; 0x39
    10d8:	89 ad       	ldd	r24, Y+57	; 0x39
    10da:	9a ad       	ldd	r25, Y+58	; 0x3a
    10dc:	8c 01       	movw	r16, r24
    10de:	c8 01       	movw	r24, r16
    10e0:	01 97       	sbiw	r24, 0x01	; 1
    10e2:	f1 f7       	brne	.-4      	; 0x10e0 <main+0x4d8>
    10e4:	8c 01       	movw	r16, r24
    10e6:	1a af       	std	Y+58, r17	; 0x3a
    10e8:	09 af       	std	Y+57, r16	; 0x39

    _delay_ms(50);

    LCD_Home();
    10ea:	0e 94 c9 02 	call	0x592	; 0x592 <LCD_Home>
    LCD_Clear();
    10ee:	0e 94 2f 02 	call	0x45e	; 0x45e <LCD_Clear>

    LCD_WriteText("     ((*)) ");
    10f2:	88 e9       	ldi	r24, 0x98	; 152
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_WriteText>
    10fa:	80 e0       	ldi	r24, 0x00	; 0
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	a8 e4       	ldi	r26, 0x48	; 72
    1100:	b2 e4       	ldi	r27, 0x42	; 66
    1102:	8b af       	std	Y+59, r24	; 0x3b
    1104:	9c af       	std	Y+60, r25	; 0x3c
    1106:	ad af       	std	Y+61, r26	; 0x3d
    1108:	be af       	std	Y+62, r27	; 0x3e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    110a:	8e 01       	movw	r16, r28
    110c:	01 5c       	subi	r16, 0xC1	; 193
    110e:	1f 4f       	sbci	r17, 0xFF	; 255
    1110:	6b ad       	ldd	r22, Y+59	; 0x3b
    1112:	7c ad       	ldd	r23, Y+60	; 0x3c
    1114:	8d ad       	ldd	r24, Y+61	; 0x3d
    1116:	9e ad       	ldd	r25, Y+62	; 0x3e
    1118:	20 e0       	ldi	r18, 0x00	; 0
    111a:	30 e0       	ldi	r19, 0x00	; 0
    111c:	4a e7       	ldi	r20, 0x7A	; 122
    111e:	55 e4       	ldi	r21, 0x45	; 69
    1120:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
    1124:	dc 01       	movw	r26, r24
    1126:	cb 01       	movw	r24, r22
    1128:	f8 01       	movw	r30, r16
    112a:	80 83       	st	Z, r24
    112c:	91 83       	std	Z+1, r25	; 0x01
    112e:	a2 83       	std	Z+2, r26	; 0x02
    1130:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1132:	ce 01       	movw	r24, r28
    1134:	cf 96       	adiw	r24, 0x3f	; 63
    1136:	11 e0       	ldi	r17, 0x01	; 1
    1138:	fc 01       	movw	r30, r24
    113a:	60 81       	ld	r22, Z
    113c:	71 81       	ldd	r23, Z+1	; 0x01
    113e:	82 81       	ldd	r24, Z+2	; 0x02
    1140:	93 81       	ldd	r25, Z+3	; 0x03
    1142:	20 e0       	ldi	r18, 0x00	; 0
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	40 e8       	ldi	r20, 0x80	; 128
    1148:	5f e3       	ldi	r21, 0x3F	; 63
    114a:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
    114e:	88 23       	and	r24, r24
    1150:	0c f0       	brlt	.+2      	; 0x1154 <main+0x54c>
    1152:	10 e0       	ldi	r17, 0x00	; 0
    1154:	11 23       	and	r17, r17
    1156:	49 f0       	breq	.+18     	; 0x116a <main+0x562>
		__ticks = 1;
    1158:	ce 01       	movw	r24, r28
    115a:	8d 5b       	subi	r24, 0xBD	; 189
    115c:	9f 4f       	sbci	r25, 0xFF	; 255
    115e:	21 e0       	ldi	r18, 0x01	; 1
    1160:	30 e0       	ldi	r19, 0x00	; 0
    1162:	fc 01       	movw	r30, r24
    1164:	31 83       	std	Z+1, r19	; 0x01
    1166:	20 83       	st	Z, r18
    1168:	6e c0       	rjmp	.+220    	; 0x1246 <main+0x63e>
	else if (__tmp > 65535)
    116a:	ce 01       	movw	r24, r28
    116c:	cf 96       	adiw	r24, 0x3f	; 63
    116e:	11 e0       	ldi	r17, 0x01	; 1
    1170:	fc 01       	movw	r30, r24
    1172:	60 81       	ld	r22, Z
    1174:	71 81       	ldd	r23, Z+1	; 0x01
    1176:	82 81       	ldd	r24, Z+2	; 0x02
    1178:	93 81       	ldd	r25, Z+3	; 0x03
    117a:	20 e0       	ldi	r18, 0x00	; 0
    117c:	3f ef       	ldi	r19, 0xFF	; 255
    117e:	4f e7       	ldi	r20, 0x7F	; 127
    1180:	57 e4       	ldi	r21, 0x47	; 71
    1182:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
    1186:	18 16       	cp	r1, r24
    1188:	0c f0       	brlt	.+2      	; 0x118c <main+0x584>
    118a:	10 e0       	ldi	r17, 0x00	; 0
    118c:	11 23       	and	r17, r17
    118e:	09 f4       	brne	.+2      	; 0x1192 <main+0x58a>
    1190:	49 c0       	rjmp	.+146    	; 0x1224 <main+0x61c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1192:	6b ad       	ldd	r22, Y+59	; 0x3b
    1194:	7c ad       	ldd	r23, Y+60	; 0x3c
    1196:	8d ad       	ldd	r24, Y+61	; 0x3d
    1198:	9e ad       	ldd	r25, Y+62	; 0x3e
    119a:	20 e0       	ldi	r18, 0x00	; 0
    119c:	30 e0       	ldi	r19, 0x00	; 0
    119e:	40 e2       	ldi	r20, 0x20	; 32
    11a0:	51 e4       	ldi	r21, 0x41	; 65
    11a2:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
    11a6:	dc 01       	movw	r26, r24
    11a8:	cb 01       	movw	r24, r22
    11aa:	8e 01       	movw	r16, r28
    11ac:	0d 5b       	subi	r16, 0xBD	; 189
    11ae:	1f 4f       	sbci	r17, 0xFF	; 255
    11b0:	bc 01       	movw	r22, r24
    11b2:	cd 01       	movw	r24, r26
    11b4:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
    11b8:	dc 01       	movw	r26, r24
    11ba:	cb 01       	movw	r24, r22
    11bc:	f8 01       	movw	r30, r16
    11be:	91 83       	std	Z+1, r25	; 0x01
    11c0:	80 83       	st	Z, r24
    11c2:	27 c0       	rjmp	.+78     	; 0x1212 <main+0x60a>
    11c4:	ce 01       	movw	r24, r28
    11c6:	8b 5b       	subi	r24, 0xBB	; 187
    11c8:	9f 4f       	sbci	r25, 0xFF	; 255
    11ca:	20 e9       	ldi	r18, 0x90	; 144
    11cc:	31 e0       	ldi	r19, 0x01	; 1
    11ce:	fc 01       	movw	r30, r24
    11d0:	31 83       	std	Z+1, r19	; 0x01
    11d2:	20 83       	st	Z, r18
    11d4:	ce 01       	movw	r24, r28
    11d6:	8b 5b       	subi	r24, 0xBB	; 187
    11d8:	9f 4f       	sbci	r25, 0xFF	; 255
    11da:	fc 01       	movw	r30, r24
    11dc:	80 81       	ld	r24, Z
    11de:	91 81       	ldd	r25, Z+1	; 0x01
    11e0:	8c 01       	movw	r16, r24
    11e2:	c8 01       	movw	r24, r16
    11e4:	01 97       	sbiw	r24, 0x01	; 1
    11e6:	f1 f7       	brne	.-4      	; 0x11e4 <main+0x5dc>
    11e8:	8c 01       	movw	r16, r24
    11ea:	ce 01       	movw	r24, r28
    11ec:	8b 5b       	subi	r24, 0xBB	; 187
    11ee:	9f 4f       	sbci	r25, 0xFF	; 255
    11f0:	fc 01       	movw	r30, r24
    11f2:	11 83       	std	Z+1, r17	; 0x01
    11f4:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11f6:	ce 01       	movw	r24, r28
    11f8:	8d 5b       	subi	r24, 0xBD	; 189
    11fa:	9f 4f       	sbci	r25, 0xFF	; 255
    11fc:	9e 01       	movw	r18, r28
    11fe:	2d 5b       	subi	r18, 0xBD	; 189
    1200:	3f 4f       	sbci	r19, 0xFF	; 255
    1202:	f9 01       	movw	r30, r18
    1204:	20 81       	ld	r18, Z
    1206:	31 81       	ldd	r19, Z+1	; 0x01
    1208:	21 50       	subi	r18, 0x01	; 1
    120a:	30 40       	sbci	r19, 0x00	; 0
    120c:	fc 01       	movw	r30, r24
    120e:	31 83       	std	Z+1, r19	; 0x01
    1210:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1212:	ce 01       	movw	r24, r28
    1214:	8d 5b       	subi	r24, 0xBD	; 189
    1216:	9f 4f       	sbci	r25, 0xFF	; 255
    1218:	fc 01       	movw	r30, r24
    121a:	80 81       	ld	r24, Z
    121c:	91 81       	ldd	r25, Z+1	; 0x01
    121e:	00 97       	sbiw	r24, 0x00	; 0
    1220:	89 f6       	brne	.-94     	; 0x11c4 <main+0x5bc>
    1222:	2e c0       	rjmp	.+92     	; 0x1280 <main+0x678>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1224:	8e 01       	movw	r16, r28
    1226:	0d 5b       	subi	r16, 0xBD	; 189
    1228:	1f 4f       	sbci	r17, 0xFF	; 255
    122a:	ce 01       	movw	r24, r28
    122c:	cf 96       	adiw	r24, 0x3f	; 63
    122e:	fc 01       	movw	r30, r24
    1230:	60 81       	ld	r22, Z
    1232:	71 81       	ldd	r23, Z+1	; 0x01
    1234:	82 81       	ldd	r24, Z+2	; 0x02
    1236:	93 81       	ldd	r25, Z+3	; 0x03
    1238:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
    123c:	dc 01       	movw	r26, r24
    123e:	cb 01       	movw	r24, r22
    1240:	f8 01       	movw	r30, r16
    1242:	91 83       	std	Z+1, r25	; 0x01
    1244:	80 83       	st	Z, r24
    1246:	ce 01       	movw	r24, r28
    1248:	89 5b       	subi	r24, 0xB9	; 185
    124a:	9f 4f       	sbci	r25, 0xFF	; 255
    124c:	9e 01       	movw	r18, r28
    124e:	2d 5b       	subi	r18, 0xBD	; 189
    1250:	3f 4f       	sbci	r19, 0xFF	; 255
    1252:	f9 01       	movw	r30, r18
    1254:	20 81       	ld	r18, Z
    1256:	31 81       	ldd	r19, Z+1	; 0x01
    1258:	fc 01       	movw	r30, r24
    125a:	31 83       	std	Z+1, r19	; 0x01
    125c:	20 83       	st	Z, r18
    125e:	ce 01       	movw	r24, r28
    1260:	89 5b       	subi	r24, 0xB9	; 185
    1262:	9f 4f       	sbci	r25, 0xFF	; 255
    1264:	fc 01       	movw	r30, r24
    1266:	80 81       	ld	r24, Z
    1268:	91 81       	ldd	r25, Z+1	; 0x01
    126a:	8c 01       	movw	r16, r24
    126c:	c8 01       	movw	r24, r16
    126e:	01 97       	sbiw	r24, 0x01	; 1
    1270:	f1 f7       	brne	.-4      	; 0x126e <main+0x666>
    1272:	8c 01       	movw	r16, r24
    1274:	ce 01       	movw	r24, r28
    1276:	89 5b       	subi	r24, 0xB9	; 185
    1278:	9f 4f       	sbci	r25, 0xFF	; 255
    127a:	fc 01       	movw	r30, r24
    127c:	11 83       	std	Z+1, r17	; 0x01
    127e:	00 83       	st	Z, r16

    _delay_ms(50);

    LCD_Home();
    1280:	0e 94 c9 02 	call	0x592	; 0x592 <LCD_Home>
    LCD_Clear();
    1284:	0e 94 2f 02 	call	0x45e	; 0x45e <LCD_Clear>

    LCD_WriteText("    ((   ))");
    1288:	84 ea       	ldi	r24, 0xA4	; 164
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_WriteText>
    1290:	9e 01       	movw	r18, r28
    1292:	27 5b       	subi	r18, 0xB7	; 183
    1294:	3f 4f       	sbci	r19, 0xFF	; 255
    1296:	80 e0       	ldi	r24, 0x00	; 0
    1298:	90 e0       	ldi	r25, 0x00	; 0
    129a:	a8 e4       	ldi	r26, 0x48	; 72
    129c:	b2 e4       	ldi	r27, 0x42	; 66
    129e:	f9 01       	movw	r30, r18
    12a0:	80 83       	st	Z, r24
    12a2:	91 83       	std	Z+1, r25	; 0x01
    12a4:	a2 83       	std	Z+2, r26	; 0x02
    12a6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    12a8:	8e 01       	movw	r16, r28
    12aa:	03 5b       	subi	r16, 0xB3	; 179
    12ac:	1f 4f       	sbci	r17, 0xFF	; 255
    12ae:	ce 01       	movw	r24, r28
    12b0:	87 5b       	subi	r24, 0xB7	; 183
    12b2:	9f 4f       	sbci	r25, 0xFF	; 255
    12b4:	fc 01       	movw	r30, r24
    12b6:	60 81       	ld	r22, Z
    12b8:	71 81       	ldd	r23, Z+1	; 0x01
    12ba:	82 81       	ldd	r24, Z+2	; 0x02
    12bc:	93 81       	ldd	r25, Z+3	; 0x03
    12be:	20 e0       	ldi	r18, 0x00	; 0
    12c0:	30 e0       	ldi	r19, 0x00	; 0
    12c2:	4a e7       	ldi	r20, 0x7A	; 122
    12c4:	55 e4       	ldi	r21, 0x45	; 69
    12c6:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
    12ca:	dc 01       	movw	r26, r24
    12cc:	cb 01       	movw	r24, r22
    12ce:	f8 01       	movw	r30, r16
    12d0:	80 83       	st	Z, r24
    12d2:	91 83       	std	Z+1, r25	; 0x01
    12d4:	a2 83       	std	Z+2, r26	; 0x02
    12d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    12d8:	ce 01       	movw	r24, r28
    12da:	83 5b       	subi	r24, 0xB3	; 179
    12dc:	9f 4f       	sbci	r25, 0xFF	; 255
    12de:	11 e0       	ldi	r17, 0x01	; 1
    12e0:	fc 01       	movw	r30, r24
    12e2:	60 81       	ld	r22, Z
    12e4:	71 81       	ldd	r23, Z+1	; 0x01
    12e6:	82 81       	ldd	r24, Z+2	; 0x02
    12e8:	93 81       	ldd	r25, Z+3	; 0x03
    12ea:	20 e0       	ldi	r18, 0x00	; 0
    12ec:	30 e0       	ldi	r19, 0x00	; 0
    12ee:	40 e8       	ldi	r20, 0x80	; 128
    12f0:	5f e3       	ldi	r21, 0x3F	; 63
    12f2:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
    12f6:	88 23       	and	r24, r24
    12f8:	0c f0       	brlt	.+2      	; 0x12fc <main+0x6f4>
    12fa:	10 e0       	ldi	r17, 0x00	; 0
    12fc:	11 23       	and	r17, r17
    12fe:	49 f0       	breq	.+18     	; 0x1312 <main+0x70a>
		__ticks = 1;
    1300:	ce 01       	movw	r24, r28
    1302:	8f 5a       	subi	r24, 0xAF	; 175
    1304:	9f 4f       	sbci	r25, 0xFF	; 255
    1306:	21 e0       	ldi	r18, 0x01	; 1
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	fc 01       	movw	r30, r24
    130c:	31 83       	std	Z+1, r19	; 0x01
    130e:	20 83       	st	Z, r18
    1310:	74 c0       	rjmp	.+232    	; 0x13fa <main+0x7f2>
	else if (__tmp > 65535)
    1312:	ce 01       	movw	r24, r28
    1314:	83 5b       	subi	r24, 0xB3	; 179
    1316:	9f 4f       	sbci	r25, 0xFF	; 255
    1318:	11 e0       	ldi	r17, 0x01	; 1
    131a:	fc 01       	movw	r30, r24
    131c:	60 81       	ld	r22, Z
    131e:	71 81       	ldd	r23, Z+1	; 0x01
    1320:	82 81       	ldd	r24, Z+2	; 0x02
    1322:	93 81       	ldd	r25, Z+3	; 0x03
    1324:	20 e0       	ldi	r18, 0x00	; 0
    1326:	3f ef       	ldi	r19, 0xFF	; 255
    1328:	4f e7       	ldi	r20, 0x7F	; 127
    132a:	57 e4       	ldi	r21, 0x47	; 71
    132c:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
    1330:	18 16       	cp	r1, r24
    1332:	0c f0       	brlt	.+2      	; 0x1336 <main+0x72e>
    1334:	10 e0       	ldi	r17, 0x00	; 0
    1336:	11 23       	and	r17, r17
    1338:	09 f4       	brne	.+2      	; 0x133c <main+0x734>
    133a:	4d c0       	rjmp	.+154    	; 0x13d6 <main+0x7ce>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    133c:	ce 01       	movw	r24, r28
    133e:	87 5b       	subi	r24, 0xB7	; 183
    1340:	9f 4f       	sbci	r25, 0xFF	; 255
    1342:	fc 01       	movw	r30, r24
    1344:	60 81       	ld	r22, Z
    1346:	71 81       	ldd	r23, Z+1	; 0x01
    1348:	82 81       	ldd	r24, Z+2	; 0x02
    134a:	93 81       	ldd	r25, Z+3	; 0x03
    134c:	20 e0       	ldi	r18, 0x00	; 0
    134e:	30 e0       	ldi	r19, 0x00	; 0
    1350:	40 e2       	ldi	r20, 0x20	; 32
    1352:	51 e4       	ldi	r21, 0x41	; 65
    1354:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
    1358:	dc 01       	movw	r26, r24
    135a:	cb 01       	movw	r24, r22
    135c:	8e 01       	movw	r16, r28
    135e:	0f 5a       	subi	r16, 0xAF	; 175
    1360:	1f 4f       	sbci	r17, 0xFF	; 255
    1362:	bc 01       	movw	r22, r24
    1364:	cd 01       	movw	r24, r26
    1366:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
    136a:	dc 01       	movw	r26, r24
    136c:	cb 01       	movw	r24, r22
    136e:	f8 01       	movw	r30, r16
    1370:	91 83       	std	Z+1, r25	; 0x01
    1372:	80 83       	st	Z, r24
    1374:	27 c0       	rjmp	.+78     	; 0x13c4 <main+0x7bc>
    1376:	ce 01       	movw	r24, r28
    1378:	8d 5a       	subi	r24, 0xAD	; 173
    137a:	9f 4f       	sbci	r25, 0xFF	; 255
    137c:	20 e9       	ldi	r18, 0x90	; 144
    137e:	31 e0       	ldi	r19, 0x01	; 1
    1380:	fc 01       	movw	r30, r24
    1382:	31 83       	std	Z+1, r19	; 0x01
    1384:	20 83       	st	Z, r18
    1386:	ce 01       	movw	r24, r28
    1388:	8d 5a       	subi	r24, 0xAD	; 173
    138a:	9f 4f       	sbci	r25, 0xFF	; 255
    138c:	fc 01       	movw	r30, r24
    138e:	80 81       	ld	r24, Z
    1390:	91 81       	ldd	r25, Z+1	; 0x01
    1392:	8c 01       	movw	r16, r24
    1394:	c8 01       	movw	r24, r16
    1396:	01 97       	sbiw	r24, 0x01	; 1
    1398:	f1 f7       	brne	.-4      	; 0x1396 <main+0x78e>
    139a:	8c 01       	movw	r16, r24
    139c:	ce 01       	movw	r24, r28
    139e:	8d 5a       	subi	r24, 0xAD	; 173
    13a0:	9f 4f       	sbci	r25, 0xFF	; 255
    13a2:	fc 01       	movw	r30, r24
    13a4:	11 83       	std	Z+1, r17	; 0x01
    13a6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13a8:	ce 01       	movw	r24, r28
    13aa:	8f 5a       	subi	r24, 0xAF	; 175
    13ac:	9f 4f       	sbci	r25, 0xFF	; 255
    13ae:	9e 01       	movw	r18, r28
    13b0:	2f 5a       	subi	r18, 0xAF	; 175
    13b2:	3f 4f       	sbci	r19, 0xFF	; 255
    13b4:	f9 01       	movw	r30, r18
    13b6:	20 81       	ld	r18, Z
    13b8:	31 81       	ldd	r19, Z+1	; 0x01
    13ba:	21 50       	subi	r18, 0x01	; 1
    13bc:	30 40       	sbci	r19, 0x00	; 0
    13be:	fc 01       	movw	r30, r24
    13c0:	31 83       	std	Z+1, r19	; 0x01
    13c2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    13c4:	ce 01       	movw	r24, r28
    13c6:	8f 5a       	subi	r24, 0xAF	; 175
    13c8:	9f 4f       	sbci	r25, 0xFF	; 255
    13ca:	fc 01       	movw	r30, r24
    13cc:	80 81       	ld	r24, Z
    13ce:	91 81       	ldd	r25, Z+1	; 0x01
    13d0:	00 97       	sbiw	r24, 0x00	; 0
    13d2:	89 f6       	brne	.-94     	; 0x1376 <main+0x76e>
    13d4:	2f c0       	rjmp	.+94     	; 0x1434 <main+0x82c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    13d6:	8e 01       	movw	r16, r28
    13d8:	0f 5a       	subi	r16, 0xAF	; 175
    13da:	1f 4f       	sbci	r17, 0xFF	; 255
    13dc:	ce 01       	movw	r24, r28
    13de:	83 5b       	subi	r24, 0xB3	; 179
    13e0:	9f 4f       	sbci	r25, 0xFF	; 255
    13e2:	fc 01       	movw	r30, r24
    13e4:	60 81       	ld	r22, Z
    13e6:	71 81       	ldd	r23, Z+1	; 0x01
    13e8:	82 81       	ldd	r24, Z+2	; 0x02
    13ea:	93 81       	ldd	r25, Z+3	; 0x03
    13ec:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
    13f0:	dc 01       	movw	r26, r24
    13f2:	cb 01       	movw	r24, r22
    13f4:	f8 01       	movw	r30, r16
    13f6:	91 83       	std	Z+1, r25	; 0x01
    13f8:	80 83       	st	Z, r24
    13fa:	ce 01       	movw	r24, r28
    13fc:	8b 5a       	subi	r24, 0xAB	; 171
    13fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1400:	9e 01       	movw	r18, r28
    1402:	2f 5a       	subi	r18, 0xAF	; 175
    1404:	3f 4f       	sbci	r19, 0xFF	; 255
    1406:	f9 01       	movw	r30, r18
    1408:	20 81       	ld	r18, Z
    140a:	31 81       	ldd	r19, Z+1	; 0x01
    140c:	fc 01       	movw	r30, r24
    140e:	31 83       	std	Z+1, r19	; 0x01
    1410:	20 83       	st	Z, r18
    1412:	ce 01       	movw	r24, r28
    1414:	8b 5a       	subi	r24, 0xAB	; 171
    1416:	9f 4f       	sbci	r25, 0xFF	; 255
    1418:	fc 01       	movw	r30, r24
    141a:	80 81       	ld	r24, Z
    141c:	91 81       	ldd	r25, Z+1	; 0x01
    141e:	8c 01       	movw	r16, r24
    1420:	c8 01       	movw	r24, r16
    1422:	01 97       	sbiw	r24, 0x01	; 1
    1424:	f1 f7       	brne	.-4      	; 0x1422 <main+0x81a>
    1426:	8c 01       	movw	r16, r24
    1428:	ce 01       	movw	r24, r28
    142a:	8b 5a       	subi	r24, 0xAB	; 171
    142c:	9f 4f       	sbci	r25, 0xFF	; 255
    142e:	fc 01       	movw	r30, r24
    1430:	11 83       	std	Z+1, r17	; 0x01
    1432:	00 83       	st	Z, r16

    _delay_ms(50);


    LCD_Home();
    1434:	0e 94 c9 02 	call	0x592	; 0x592 <LCD_Home>
    LCD_Clear();
    1438:	0e 94 2f 02 	call	0x45e	; 0x45e <LCD_Clear>

     LCD_WriteText("   (( BUM )) ");
    143c:	80 eb       	ldi	r24, 0xB0	; 176
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_WriteText>
    1444:	9e 01       	movw	r18, r28
    1446:	29 5a       	subi	r18, 0xA9	; 169
    1448:	3f 4f       	sbci	r19, 0xFF	; 255
    144a:	80 e0       	ldi	r24, 0x00	; 0
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	a8 e4       	ldi	r26, 0x48	; 72
    1450:	b2 e4       	ldi	r27, 0x42	; 66
    1452:	f9 01       	movw	r30, r18
    1454:	80 83       	st	Z, r24
    1456:	91 83       	std	Z+1, r25	; 0x01
    1458:	a2 83       	std	Z+2, r26	; 0x02
    145a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    145c:	8e 01       	movw	r16, r28
    145e:	05 5a       	subi	r16, 0xA5	; 165
    1460:	1f 4f       	sbci	r17, 0xFF	; 255
    1462:	ce 01       	movw	r24, r28
    1464:	89 5a       	subi	r24, 0xA9	; 169
    1466:	9f 4f       	sbci	r25, 0xFF	; 255
    1468:	fc 01       	movw	r30, r24
    146a:	60 81       	ld	r22, Z
    146c:	71 81       	ldd	r23, Z+1	; 0x01
    146e:	82 81       	ldd	r24, Z+2	; 0x02
    1470:	93 81       	ldd	r25, Z+3	; 0x03
    1472:	20 e0       	ldi	r18, 0x00	; 0
    1474:	30 e0       	ldi	r19, 0x00	; 0
    1476:	4a e7       	ldi	r20, 0x7A	; 122
    1478:	55 e4       	ldi	r21, 0x45	; 69
    147a:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
    147e:	dc 01       	movw	r26, r24
    1480:	cb 01       	movw	r24, r22
    1482:	f8 01       	movw	r30, r16
    1484:	80 83       	st	Z, r24
    1486:	91 83       	std	Z+1, r25	; 0x01
    1488:	a2 83       	std	Z+2, r26	; 0x02
    148a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    148c:	ce 01       	movw	r24, r28
    148e:	85 5a       	subi	r24, 0xA5	; 165
    1490:	9f 4f       	sbci	r25, 0xFF	; 255
    1492:	11 e0       	ldi	r17, 0x01	; 1
    1494:	fc 01       	movw	r30, r24
    1496:	60 81       	ld	r22, Z
    1498:	71 81       	ldd	r23, Z+1	; 0x01
    149a:	82 81       	ldd	r24, Z+2	; 0x02
    149c:	93 81       	ldd	r25, Z+3	; 0x03
    149e:	20 e0       	ldi	r18, 0x00	; 0
    14a0:	30 e0       	ldi	r19, 0x00	; 0
    14a2:	40 e8       	ldi	r20, 0x80	; 128
    14a4:	5f e3       	ldi	r21, 0x3F	; 63
    14a6:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
    14aa:	88 23       	and	r24, r24
    14ac:	0c f0       	brlt	.+2      	; 0x14b0 <main+0x8a8>
    14ae:	10 e0       	ldi	r17, 0x00	; 0
    14b0:	11 23       	and	r17, r17
    14b2:	49 f0       	breq	.+18     	; 0x14c6 <main+0x8be>
		__ticks = 1;
    14b4:	ce 01       	movw	r24, r28
    14b6:	81 5a       	subi	r24, 0xA1	; 161
    14b8:	9f 4f       	sbci	r25, 0xFF	; 255
    14ba:	21 e0       	ldi	r18, 0x01	; 1
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	fc 01       	movw	r30, r24
    14c0:	31 83       	std	Z+1, r19	; 0x01
    14c2:	20 83       	st	Z, r18
    14c4:	74 c0       	rjmp	.+232    	; 0x15ae <main+0x9a6>
	else if (__tmp > 65535)
    14c6:	ce 01       	movw	r24, r28
    14c8:	85 5a       	subi	r24, 0xA5	; 165
    14ca:	9f 4f       	sbci	r25, 0xFF	; 255
    14cc:	11 e0       	ldi	r17, 0x01	; 1
    14ce:	fc 01       	movw	r30, r24
    14d0:	60 81       	ld	r22, Z
    14d2:	71 81       	ldd	r23, Z+1	; 0x01
    14d4:	82 81       	ldd	r24, Z+2	; 0x02
    14d6:	93 81       	ldd	r25, Z+3	; 0x03
    14d8:	20 e0       	ldi	r18, 0x00	; 0
    14da:	3f ef       	ldi	r19, 0xFF	; 255
    14dc:	4f e7       	ldi	r20, 0x7F	; 127
    14de:	57 e4       	ldi	r21, 0x47	; 71
    14e0:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
    14e4:	18 16       	cp	r1, r24
    14e6:	0c f0       	brlt	.+2      	; 0x14ea <main+0x8e2>
    14e8:	10 e0       	ldi	r17, 0x00	; 0
    14ea:	11 23       	and	r17, r17
    14ec:	09 f4       	brne	.+2      	; 0x14f0 <main+0x8e8>
    14ee:	4d c0       	rjmp	.+154    	; 0x158a <main+0x982>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14f0:	ce 01       	movw	r24, r28
    14f2:	89 5a       	subi	r24, 0xA9	; 169
    14f4:	9f 4f       	sbci	r25, 0xFF	; 255
    14f6:	fc 01       	movw	r30, r24
    14f8:	60 81       	ld	r22, Z
    14fa:	71 81       	ldd	r23, Z+1	; 0x01
    14fc:	82 81       	ldd	r24, Z+2	; 0x02
    14fe:	93 81       	ldd	r25, Z+3	; 0x03
    1500:	20 e0       	ldi	r18, 0x00	; 0
    1502:	30 e0       	ldi	r19, 0x00	; 0
    1504:	40 e2       	ldi	r20, 0x20	; 32
    1506:	51 e4       	ldi	r21, 0x41	; 65
    1508:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
    150c:	dc 01       	movw	r26, r24
    150e:	cb 01       	movw	r24, r22
    1510:	8e 01       	movw	r16, r28
    1512:	01 5a       	subi	r16, 0xA1	; 161
    1514:	1f 4f       	sbci	r17, 0xFF	; 255
    1516:	bc 01       	movw	r22, r24
    1518:	cd 01       	movw	r24, r26
    151a:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
    151e:	dc 01       	movw	r26, r24
    1520:	cb 01       	movw	r24, r22
    1522:	f8 01       	movw	r30, r16
    1524:	91 83       	std	Z+1, r25	; 0x01
    1526:	80 83       	st	Z, r24
    1528:	27 c0       	rjmp	.+78     	; 0x1578 <main+0x970>
    152a:	ce 01       	movw	r24, r28
    152c:	8f 59       	subi	r24, 0x9F	; 159
    152e:	9f 4f       	sbci	r25, 0xFF	; 255
    1530:	20 e9       	ldi	r18, 0x90	; 144
    1532:	31 e0       	ldi	r19, 0x01	; 1
    1534:	fc 01       	movw	r30, r24
    1536:	31 83       	std	Z+1, r19	; 0x01
    1538:	20 83       	st	Z, r18
    153a:	ce 01       	movw	r24, r28
    153c:	8f 59       	subi	r24, 0x9F	; 159
    153e:	9f 4f       	sbci	r25, 0xFF	; 255
    1540:	fc 01       	movw	r30, r24
    1542:	80 81       	ld	r24, Z
    1544:	91 81       	ldd	r25, Z+1	; 0x01
    1546:	8c 01       	movw	r16, r24
    1548:	c8 01       	movw	r24, r16
    154a:	01 97       	sbiw	r24, 0x01	; 1
    154c:	f1 f7       	brne	.-4      	; 0x154a <main+0x942>
    154e:	8c 01       	movw	r16, r24
    1550:	ce 01       	movw	r24, r28
    1552:	8f 59       	subi	r24, 0x9F	; 159
    1554:	9f 4f       	sbci	r25, 0xFF	; 255
    1556:	fc 01       	movw	r30, r24
    1558:	11 83       	std	Z+1, r17	; 0x01
    155a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    155c:	ce 01       	movw	r24, r28
    155e:	81 5a       	subi	r24, 0xA1	; 161
    1560:	9f 4f       	sbci	r25, 0xFF	; 255
    1562:	9e 01       	movw	r18, r28
    1564:	21 5a       	subi	r18, 0xA1	; 161
    1566:	3f 4f       	sbci	r19, 0xFF	; 255
    1568:	f9 01       	movw	r30, r18
    156a:	20 81       	ld	r18, Z
    156c:	31 81       	ldd	r19, Z+1	; 0x01
    156e:	21 50       	subi	r18, 0x01	; 1
    1570:	30 40       	sbci	r19, 0x00	; 0
    1572:	fc 01       	movw	r30, r24
    1574:	31 83       	std	Z+1, r19	; 0x01
    1576:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1578:	ce 01       	movw	r24, r28
    157a:	81 5a       	subi	r24, 0xA1	; 161
    157c:	9f 4f       	sbci	r25, 0xFF	; 255
    157e:	fc 01       	movw	r30, r24
    1580:	80 81       	ld	r24, Z
    1582:	91 81       	ldd	r25, Z+1	; 0x01
    1584:	00 97       	sbiw	r24, 0x00	; 0
    1586:	89 f6       	brne	.-94     	; 0x152a <main+0x922>
    1588:	2f c0       	rjmp	.+94     	; 0x15e8 <main+0x9e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    158a:	8e 01       	movw	r16, r28
    158c:	01 5a       	subi	r16, 0xA1	; 161
    158e:	1f 4f       	sbci	r17, 0xFF	; 255
    1590:	ce 01       	movw	r24, r28
    1592:	85 5a       	subi	r24, 0xA5	; 165
    1594:	9f 4f       	sbci	r25, 0xFF	; 255
    1596:	fc 01       	movw	r30, r24
    1598:	60 81       	ld	r22, Z
    159a:	71 81       	ldd	r23, Z+1	; 0x01
    159c:	82 81       	ldd	r24, Z+2	; 0x02
    159e:	93 81       	ldd	r25, Z+3	; 0x03
    15a0:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
    15a4:	dc 01       	movw	r26, r24
    15a6:	cb 01       	movw	r24, r22
    15a8:	f8 01       	movw	r30, r16
    15aa:	91 83       	std	Z+1, r25	; 0x01
    15ac:	80 83       	st	Z, r24
    15ae:	ce 01       	movw	r24, r28
    15b0:	8d 59       	subi	r24, 0x9D	; 157
    15b2:	9f 4f       	sbci	r25, 0xFF	; 255
    15b4:	9e 01       	movw	r18, r28
    15b6:	21 5a       	subi	r18, 0xA1	; 161
    15b8:	3f 4f       	sbci	r19, 0xFF	; 255
    15ba:	f9 01       	movw	r30, r18
    15bc:	20 81       	ld	r18, Z
    15be:	31 81       	ldd	r19, Z+1	; 0x01
    15c0:	fc 01       	movw	r30, r24
    15c2:	31 83       	std	Z+1, r19	; 0x01
    15c4:	20 83       	st	Z, r18
    15c6:	ce 01       	movw	r24, r28
    15c8:	8d 59       	subi	r24, 0x9D	; 157
    15ca:	9f 4f       	sbci	r25, 0xFF	; 255
    15cc:	fc 01       	movw	r30, r24
    15ce:	80 81       	ld	r24, Z
    15d0:	91 81       	ldd	r25, Z+1	; 0x01
    15d2:	8c 01       	movw	r16, r24
    15d4:	c8 01       	movw	r24, r16
    15d6:	01 97       	sbiw	r24, 0x01	; 1
    15d8:	f1 f7       	brne	.-4      	; 0x15d6 <main+0x9ce>
    15da:	8c 01       	movw	r16, r24
    15dc:	ce 01       	movw	r24, r28
    15de:	8d 59       	subi	r24, 0x9D	; 157
    15e0:	9f 4f       	sbci	r25, 0xFF	; 255
    15e2:	fc 01       	movw	r30, r24
    15e4:	11 83       	std	Z+1, r17	; 0x01
    15e6:	00 83       	st	Z, r16

    while(1)
    {


     LCD_Clear();
    15e8:	0e 94 2f 02 	call	0x45e	; 0x45e <LCD_Clear>
     LCD_GoTo(0,0);
    15ec:	80 e0       	ldi	r24, 0x00	; 0
    15ee:	60 e0       	ldi	r22, 0x00	; 0
    15f0:	0e 94 18 02 	call	0x430	; 0x430 <LCD_GoTo>
     LCD_WriteText("  GAME OVER! ! !");
    15f4:	8e eb       	ldi	r24, 0xBE	; 190
    15f6:	90 e0       	ldi	r25, 0x00	; 0
    15f8:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_WriteText>

     PORTD= 0b01010101;
    15fc:	82 e3       	ldi	r24, 0x32	; 50
    15fe:	90 e0       	ldi	r25, 0x00	; 0
    1600:	25 e5       	ldi	r18, 0x55	; 85
    1602:	fc 01       	movw	r30, r24
    1604:	20 83       	st	Z, r18
    1606:	9e 01       	movw	r18, r28
    1608:	2b 59       	subi	r18, 0x9B	; 155
    160a:	3f 4f       	sbci	r19, 0xFF	; 255
    160c:	80 e0       	ldi	r24, 0x00	; 0
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	a8 e4       	ldi	r26, 0x48	; 72
    1612:	b2 e4       	ldi	r27, 0x42	; 66
    1614:	f9 01       	movw	r30, r18
    1616:	80 83       	st	Z, r24
    1618:	91 83       	std	Z+1, r25	; 0x01
    161a:	a2 83       	std	Z+2, r26	; 0x02
    161c:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    161e:	8e 01       	movw	r16, r28
    1620:	07 59       	subi	r16, 0x97	; 151
    1622:	1f 4f       	sbci	r17, 0xFF	; 255
    1624:	ce 01       	movw	r24, r28
    1626:	8b 59       	subi	r24, 0x9B	; 155
    1628:	9f 4f       	sbci	r25, 0xFF	; 255
    162a:	fc 01       	movw	r30, r24
    162c:	60 81       	ld	r22, Z
    162e:	71 81       	ldd	r23, Z+1	; 0x01
    1630:	82 81       	ldd	r24, Z+2	; 0x02
    1632:	93 81       	ldd	r25, Z+3	; 0x03
    1634:	20 e0       	ldi	r18, 0x00	; 0
    1636:	30 e0       	ldi	r19, 0x00	; 0
    1638:	4a e7       	ldi	r20, 0x7A	; 122
    163a:	55 e4       	ldi	r21, 0x45	; 69
    163c:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
    1640:	dc 01       	movw	r26, r24
    1642:	cb 01       	movw	r24, r22
    1644:	f8 01       	movw	r30, r16
    1646:	80 83       	st	Z, r24
    1648:	91 83       	std	Z+1, r25	; 0x01
    164a:	a2 83       	std	Z+2, r26	; 0x02
    164c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    164e:	ce 01       	movw	r24, r28
    1650:	87 59       	subi	r24, 0x97	; 151
    1652:	9f 4f       	sbci	r25, 0xFF	; 255
    1654:	11 e0       	ldi	r17, 0x01	; 1
    1656:	fc 01       	movw	r30, r24
    1658:	60 81       	ld	r22, Z
    165a:	71 81       	ldd	r23, Z+1	; 0x01
    165c:	82 81       	ldd	r24, Z+2	; 0x02
    165e:	93 81       	ldd	r25, Z+3	; 0x03
    1660:	20 e0       	ldi	r18, 0x00	; 0
    1662:	30 e0       	ldi	r19, 0x00	; 0
    1664:	40 e8       	ldi	r20, 0x80	; 128
    1666:	5f e3       	ldi	r21, 0x3F	; 63
    1668:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
    166c:	88 23       	and	r24, r24
    166e:	0c f0       	brlt	.+2      	; 0x1672 <main+0xa6a>
    1670:	10 e0       	ldi	r17, 0x00	; 0
    1672:	11 23       	and	r17, r17
    1674:	49 f0       	breq	.+18     	; 0x1688 <main+0xa80>
		__ticks = 1;
    1676:	ce 01       	movw	r24, r28
    1678:	83 59       	subi	r24, 0x93	; 147
    167a:	9f 4f       	sbci	r25, 0xFF	; 255
    167c:	21 e0       	ldi	r18, 0x01	; 1
    167e:	30 e0       	ldi	r19, 0x00	; 0
    1680:	fc 01       	movw	r30, r24
    1682:	31 83       	std	Z+1, r19	; 0x01
    1684:	20 83       	st	Z, r18
    1686:	74 c0       	rjmp	.+232    	; 0x1770 <main+0xb68>
	else if (__tmp > 65535)
    1688:	ce 01       	movw	r24, r28
    168a:	87 59       	subi	r24, 0x97	; 151
    168c:	9f 4f       	sbci	r25, 0xFF	; 255
    168e:	11 e0       	ldi	r17, 0x01	; 1
    1690:	fc 01       	movw	r30, r24
    1692:	60 81       	ld	r22, Z
    1694:	71 81       	ldd	r23, Z+1	; 0x01
    1696:	82 81       	ldd	r24, Z+2	; 0x02
    1698:	93 81       	ldd	r25, Z+3	; 0x03
    169a:	20 e0       	ldi	r18, 0x00	; 0
    169c:	3f ef       	ldi	r19, 0xFF	; 255
    169e:	4f e7       	ldi	r20, 0x7F	; 127
    16a0:	57 e4       	ldi	r21, 0x47	; 71
    16a2:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
    16a6:	18 16       	cp	r1, r24
    16a8:	0c f0       	brlt	.+2      	; 0x16ac <main+0xaa4>
    16aa:	10 e0       	ldi	r17, 0x00	; 0
    16ac:	11 23       	and	r17, r17
    16ae:	09 f4       	brne	.+2      	; 0x16b2 <main+0xaaa>
    16b0:	4d c0       	rjmp	.+154    	; 0x174c <main+0xb44>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16b2:	ce 01       	movw	r24, r28
    16b4:	8b 59       	subi	r24, 0x9B	; 155
    16b6:	9f 4f       	sbci	r25, 0xFF	; 255
    16b8:	fc 01       	movw	r30, r24
    16ba:	60 81       	ld	r22, Z
    16bc:	71 81       	ldd	r23, Z+1	; 0x01
    16be:	82 81       	ldd	r24, Z+2	; 0x02
    16c0:	93 81       	ldd	r25, Z+3	; 0x03
    16c2:	20 e0       	ldi	r18, 0x00	; 0
    16c4:	30 e0       	ldi	r19, 0x00	; 0
    16c6:	40 e2       	ldi	r20, 0x20	; 32
    16c8:	51 e4       	ldi	r21, 0x41	; 65
    16ca:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
    16ce:	dc 01       	movw	r26, r24
    16d0:	cb 01       	movw	r24, r22
    16d2:	8e 01       	movw	r16, r28
    16d4:	03 59       	subi	r16, 0x93	; 147
    16d6:	1f 4f       	sbci	r17, 0xFF	; 255
    16d8:	bc 01       	movw	r22, r24
    16da:	cd 01       	movw	r24, r26
    16dc:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
    16e0:	dc 01       	movw	r26, r24
    16e2:	cb 01       	movw	r24, r22
    16e4:	f8 01       	movw	r30, r16
    16e6:	91 83       	std	Z+1, r25	; 0x01
    16e8:	80 83       	st	Z, r24
    16ea:	27 c0       	rjmp	.+78     	; 0x173a <main+0xb32>
    16ec:	ce 01       	movw	r24, r28
    16ee:	81 59       	subi	r24, 0x91	; 145
    16f0:	9f 4f       	sbci	r25, 0xFF	; 255
    16f2:	20 e9       	ldi	r18, 0x90	; 144
    16f4:	31 e0       	ldi	r19, 0x01	; 1
    16f6:	fc 01       	movw	r30, r24
    16f8:	31 83       	std	Z+1, r19	; 0x01
    16fa:	20 83       	st	Z, r18
    16fc:	ce 01       	movw	r24, r28
    16fe:	81 59       	subi	r24, 0x91	; 145
    1700:	9f 4f       	sbci	r25, 0xFF	; 255
    1702:	fc 01       	movw	r30, r24
    1704:	80 81       	ld	r24, Z
    1706:	91 81       	ldd	r25, Z+1	; 0x01
    1708:	8c 01       	movw	r16, r24
    170a:	c8 01       	movw	r24, r16
    170c:	01 97       	sbiw	r24, 0x01	; 1
    170e:	f1 f7       	brne	.-4      	; 0x170c <main+0xb04>
    1710:	8c 01       	movw	r16, r24
    1712:	ce 01       	movw	r24, r28
    1714:	81 59       	subi	r24, 0x91	; 145
    1716:	9f 4f       	sbci	r25, 0xFF	; 255
    1718:	fc 01       	movw	r30, r24
    171a:	11 83       	std	Z+1, r17	; 0x01
    171c:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    171e:	ce 01       	movw	r24, r28
    1720:	83 59       	subi	r24, 0x93	; 147
    1722:	9f 4f       	sbci	r25, 0xFF	; 255
    1724:	9e 01       	movw	r18, r28
    1726:	23 59       	subi	r18, 0x93	; 147
    1728:	3f 4f       	sbci	r19, 0xFF	; 255
    172a:	f9 01       	movw	r30, r18
    172c:	20 81       	ld	r18, Z
    172e:	31 81       	ldd	r19, Z+1	; 0x01
    1730:	21 50       	subi	r18, 0x01	; 1
    1732:	30 40       	sbci	r19, 0x00	; 0
    1734:	fc 01       	movw	r30, r24
    1736:	31 83       	std	Z+1, r19	; 0x01
    1738:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    173a:	ce 01       	movw	r24, r28
    173c:	83 59       	subi	r24, 0x93	; 147
    173e:	9f 4f       	sbci	r25, 0xFF	; 255
    1740:	fc 01       	movw	r30, r24
    1742:	80 81       	ld	r24, Z
    1744:	91 81       	ldd	r25, Z+1	; 0x01
    1746:	00 97       	sbiw	r24, 0x00	; 0
    1748:	89 f6       	brne	.-94     	; 0x16ec <main+0xae4>
    174a:	2f c0       	rjmp	.+94     	; 0x17aa <main+0xba2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    174c:	8e 01       	movw	r16, r28
    174e:	03 59       	subi	r16, 0x93	; 147
    1750:	1f 4f       	sbci	r17, 0xFF	; 255
    1752:	ce 01       	movw	r24, r28
    1754:	87 59       	subi	r24, 0x97	; 151
    1756:	9f 4f       	sbci	r25, 0xFF	; 255
    1758:	fc 01       	movw	r30, r24
    175a:	60 81       	ld	r22, Z
    175c:	71 81       	ldd	r23, Z+1	; 0x01
    175e:	82 81       	ldd	r24, Z+2	; 0x02
    1760:	93 81       	ldd	r25, Z+3	; 0x03
    1762:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
    1766:	dc 01       	movw	r26, r24
    1768:	cb 01       	movw	r24, r22
    176a:	f8 01       	movw	r30, r16
    176c:	91 83       	std	Z+1, r25	; 0x01
    176e:	80 83       	st	Z, r24
    1770:	ce 01       	movw	r24, r28
    1772:	8f 58       	subi	r24, 0x8F	; 143
    1774:	9f 4f       	sbci	r25, 0xFF	; 255
    1776:	9e 01       	movw	r18, r28
    1778:	23 59       	subi	r18, 0x93	; 147
    177a:	3f 4f       	sbci	r19, 0xFF	; 255
    177c:	f9 01       	movw	r30, r18
    177e:	20 81       	ld	r18, Z
    1780:	31 81       	ldd	r19, Z+1	; 0x01
    1782:	fc 01       	movw	r30, r24
    1784:	31 83       	std	Z+1, r19	; 0x01
    1786:	20 83       	st	Z, r18
    1788:	ce 01       	movw	r24, r28
    178a:	8f 58       	subi	r24, 0x8F	; 143
    178c:	9f 4f       	sbci	r25, 0xFF	; 255
    178e:	fc 01       	movw	r30, r24
    1790:	80 81       	ld	r24, Z
    1792:	91 81       	ldd	r25, Z+1	; 0x01
    1794:	8c 01       	movw	r16, r24
    1796:	c8 01       	movw	r24, r16
    1798:	01 97       	sbiw	r24, 0x01	; 1
    179a:	f1 f7       	brne	.-4      	; 0x1798 <main+0xb90>
    179c:	8c 01       	movw	r16, r24
    179e:	ce 01       	movw	r24, r28
    17a0:	8f 58       	subi	r24, 0x8F	; 143
    17a2:	9f 4f       	sbci	r25, 0xFF	; 255
    17a4:	fc 01       	movw	r30, r24
    17a6:	11 83       	std	Z+1, r17	; 0x01
    17a8:	00 83       	st	Z, r16

     _delay_ms(50);
     LCD_Clear();
    17aa:	0e 94 2f 02 	call	0x45e	; 0x45e <LCD_Clear>
     LCD_GoTo(0,1);
    17ae:	80 e0       	ldi	r24, 0x00	; 0
    17b0:	61 e0       	ldi	r22, 0x01	; 1
    17b2:	0e 94 18 02 	call	0x430	; 0x430 <LCD_GoTo>
     LCD_WriteText("  GAME OVER! ! !");
    17b6:	8e eb       	ldi	r24, 0xBE	; 190
    17b8:	90 e0       	ldi	r25, 0x00	; 0
    17ba:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <LCD_WriteText>

     PORTD = 0b10101010;
    17be:	82 e3       	ldi	r24, 0x32	; 50
    17c0:	90 e0       	ldi	r25, 0x00	; 0
    17c2:	2a ea       	ldi	r18, 0xAA	; 170
    17c4:	fc 01       	movw	r30, r24
    17c6:	20 83       	st	Z, r18
    17c8:	9e 01       	movw	r18, r28
    17ca:	2d 58       	subi	r18, 0x8D	; 141
    17cc:	3f 4f       	sbci	r19, 0xFF	; 255
    17ce:	80 e0       	ldi	r24, 0x00	; 0
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	a8 e4       	ldi	r26, 0x48	; 72
    17d4:	b2 e4       	ldi	r27, 0x42	; 66
    17d6:	f9 01       	movw	r30, r18
    17d8:	80 83       	st	Z, r24
    17da:	91 83       	std	Z+1, r25	; 0x01
    17dc:	a2 83       	std	Z+2, r26	; 0x02
    17de:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
    17e0:	8e 01       	movw	r16, r28
    17e2:	09 58       	subi	r16, 0x89	; 137
    17e4:	1f 4f       	sbci	r17, 0xFF	; 255
    17e6:	ce 01       	movw	r24, r28
    17e8:	8d 58       	subi	r24, 0x8D	; 141
    17ea:	9f 4f       	sbci	r25, 0xFF	; 255
    17ec:	fc 01       	movw	r30, r24
    17ee:	60 81       	ld	r22, Z
    17f0:	71 81       	ldd	r23, Z+1	; 0x01
    17f2:	82 81       	ldd	r24, Z+2	; 0x02
    17f4:	93 81       	ldd	r25, Z+3	; 0x03
    17f6:	20 e0       	ldi	r18, 0x00	; 0
    17f8:	30 e0       	ldi	r19, 0x00	; 0
    17fa:	4a e7       	ldi	r20, 0x7A	; 122
    17fc:	55 e4       	ldi	r21, 0x45	; 69
    17fe:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
    1802:	dc 01       	movw	r26, r24
    1804:	cb 01       	movw	r24, r22
    1806:	f8 01       	movw	r30, r16
    1808:	80 83       	st	Z, r24
    180a:	91 83       	std	Z+1, r25	; 0x01
    180c:	a2 83       	std	Z+2, r26	; 0x02
    180e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1810:	ce 01       	movw	r24, r28
    1812:	89 58       	subi	r24, 0x89	; 137
    1814:	9f 4f       	sbci	r25, 0xFF	; 255
    1816:	11 e0       	ldi	r17, 0x01	; 1
    1818:	fc 01       	movw	r30, r24
    181a:	60 81       	ld	r22, Z
    181c:	71 81       	ldd	r23, Z+1	; 0x01
    181e:	82 81       	ldd	r24, Z+2	; 0x02
    1820:	93 81       	ldd	r25, Z+3	; 0x03
    1822:	20 e0       	ldi	r18, 0x00	; 0
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	40 e8       	ldi	r20, 0x80	; 128
    1828:	5f e3       	ldi	r21, 0x3F	; 63
    182a:	0e 94 93 10 	call	0x2126	; 0x2126 <__ltsf2>
    182e:	88 23       	and	r24, r24
    1830:	0c f0       	brlt	.+2      	; 0x1834 <main+0xc2c>
    1832:	10 e0       	ldi	r17, 0x00	; 0
    1834:	11 23       	and	r17, r17
    1836:	49 f0       	breq	.+18     	; 0x184a <main+0xc42>
		__ticks = 1;
    1838:	ce 01       	movw	r24, r28
    183a:	85 58       	subi	r24, 0x85	; 133
    183c:	9f 4f       	sbci	r25, 0xFF	; 255
    183e:	21 e0       	ldi	r18, 0x01	; 1
    1840:	30 e0       	ldi	r19, 0x00	; 0
    1842:	fc 01       	movw	r30, r24
    1844:	31 83       	std	Z+1, r19	; 0x01
    1846:	20 83       	st	Z, r18
    1848:	74 c0       	rjmp	.+232    	; 0x1932 <main+0xd2a>
	else if (__tmp > 65535)
    184a:	ce 01       	movw	r24, r28
    184c:	89 58       	subi	r24, 0x89	; 137
    184e:	9f 4f       	sbci	r25, 0xFF	; 255
    1850:	11 e0       	ldi	r17, 0x01	; 1
    1852:	fc 01       	movw	r30, r24
    1854:	60 81       	ld	r22, Z
    1856:	71 81       	ldd	r23, Z+1	; 0x01
    1858:	82 81       	ldd	r24, Z+2	; 0x02
    185a:	93 81       	ldd	r25, Z+3	; 0x03
    185c:	20 e0       	ldi	r18, 0x00	; 0
    185e:	3f ef       	ldi	r19, 0xFF	; 255
    1860:	4f e7       	ldi	r20, 0x7F	; 127
    1862:	57 e4       	ldi	r21, 0x47	; 71
    1864:	0e 94 33 10 	call	0x2066	; 0x2066 <__gtsf2>
    1868:	18 16       	cp	r1, r24
    186a:	0c f0       	brlt	.+2      	; 0x186e <main+0xc66>
    186c:	10 e0       	ldi	r17, 0x00	; 0
    186e:	11 23       	and	r17, r17
    1870:	09 f4       	brne	.+2      	; 0x1874 <main+0xc6c>
    1872:	4d c0       	rjmp	.+154    	; 0x190e <main+0xd06>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1874:	ce 01       	movw	r24, r28
    1876:	8d 58       	subi	r24, 0x8D	; 141
    1878:	9f 4f       	sbci	r25, 0xFF	; 255
    187a:	fc 01       	movw	r30, r24
    187c:	60 81       	ld	r22, Z
    187e:	71 81       	ldd	r23, Z+1	; 0x01
    1880:	82 81       	ldd	r24, Z+2	; 0x02
    1882:	93 81       	ldd	r25, Z+3	; 0x03
    1884:	20 e0       	ldi	r18, 0x00	; 0
    1886:	30 e0       	ldi	r19, 0x00	; 0
    1888:	40 e2       	ldi	r20, 0x20	; 32
    188a:	51 e4       	ldi	r21, 0x41	; 65
    188c:	0e 94 8b 0e 	call	0x1d16	; 0x1d16 <__mulsf3>
    1890:	dc 01       	movw	r26, r24
    1892:	cb 01       	movw	r24, r22
    1894:	8e 01       	movw	r16, r28
    1896:	05 58       	subi	r16, 0x85	; 133
    1898:	1f 4f       	sbci	r17, 0xFF	; 255
    189a:	bc 01       	movw	r22, r24
    189c:	cd 01       	movw	r24, r26
    189e:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
    18a2:	dc 01       	movw	r26, r24
    18a4:	cb 01       	movw	r24, r22
    18a6:	f8 01       	movw	r30, r16
    18a8:	91 83       	std	Z+1, r25	; 0x01
    18aa:	80 83       	st	Z, r24
    18ac:	27 c0       	rjmp	.+78     	; 0x18fc <main+0xcf4>
    18ae:	ce 01       	movw	r24, r28
    18b0:	83 58       	subi	r24, 0x83	; 131
    18b2:	9f 4f       	sbci	r25, 0xFF	; 255
    18b4:	20 e9       	ldi	r18, 0x90	; 144
    18b6:	31 e0       	ldi	r19, 0x01	; 1
    18b8:	fc 01       	movw	r30, r24
    18ba:	31 83       	std	Z+1, r19	; 0x01
    18bc:	20 83       	st	Z, r18
    18be:	ce 01       	movw	r24, r28
    18c0:	83 58       	subi	r24, 0x83	; 131
    18c2:	9f 4f       	sbci	r25, 0xFF	; 255
    18c4:	fc 01       	movw	r30, r24
    18c6:	80 81       	ld	r24, Z
    18c8:	91 81       	ldd	r25, Z+1	; 0x01
    18ca:	8c 01       	movw	r16, r24
    18cc:	c8 01       	movw	r24, r16
    18ce:	01 97       	sbiw	r24, 0x01	; 1
    18d0:	f1 f7       	brne	.-4      	; 0x18ce <main+0xcc6>
    18d2:	8c 01       	movw	r16, r24
    18d4:	ce 01       	movw	r24, r28
    18d6:	83 58       	subi	r24, 0x83	; 131
    18d8:	9f 4f       	sbci	r25, 0xFF	; 255
    18da:	fc 01       	movw	r30, r24
    18dc:	11 83       	std	Z+1, r17	; 0x01
    18de:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18e0:	ce 01       	movw	r24, r28
    18e2:	85 58       	subi	r24, 0x85	; 133
    18e4:	9f 4f       	sbci	r25, 0xFF	; 255
    18e6:	9e 01       	movw	r18, r28
    18e8:	25 58       	subi	r18, 0x85	; 133
    18ea:	3f 4f       	sbci	r19, 0xFF	; 255
    18ec:	f9 01       	movw	r30, r18
    18ee:	20 81       	ld	r18, Z
    18f0:	31 81       	ldd	r19, Z+1	; 0x01
    18f2:	21 50       	subi	r18, 0x01	; 1
    18f4:	30 40       	sbci	r19, 0x00	; 0
    18f6:	fc 01       	movw	r30, r24
    18f8:	31 83       	std	Z+1, r19	; 0x01
    18fa:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18fc:	ce 01       	movw	r24, r28
    18fe:	85 58       	subi	r24, 0x85	; 133
    1900:	9f 4f       	sbci	r25, 0xFF	; 255
    1902:	fc 01       	movw	r30, r24
    1904:	80 81       	ld	r24, Z
    1906:	91 81       	ldd	r25, Z+1	; 0x01
    1908:	00 97       	sbiw	r24, 0x00	; 0
    190a:	89 f6       	brne	.-94     	; 0x18ae <main+0xca6>
     _delay_ms(50);

    };
    190c:	6d ce       	rjmp	.-806    	; 0x15e8 <main+0x9e0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    190e:	8e 01       	movw	r16, r28
    1910:	05 58       	subi	r16, 0x85	; 133
    1912:	1f 4f       	sbci	r17, 0xFF	; 255
    1914:	ce 01       	movw	r24, r28
    1916:	89 58       	subi	r24, 0x89	; 137
    1918:	9f 4f       	sbci	r25, 0xFF	; 255
    191a:	fc 01       	movw	r30, r24
    191c:	60 81       	ld	r22, Z
    191e:	71 81       	ldd	r23, Z+1	; 0x01
    1920:	82 81       	ldd	r24, Z+2	; 0x02
    1922:	93 81       	ldd	r25, Z+3	; 0x03
    1924:	0e 94 b7 0c 	call	0x196e	; 0x196e <__fixunssfsi>
    1928:	dc 01       	movw	r26, r24
    192a:	cb 01       	movw	r24, r22
    192c:	f8 01       	movw	r30, r16
    192e:	91 83       	std	Z+1, r25	; 0x01
    1930:	80 83       	st	Z, r24
    1932:	ce 01       	movw	r24, r28
    1934:	81 58       	subi	r24, 0x81	; 129
    1936:	9f 4f       	sbci	r25, 0xFF	; 255
    1938:	9e 01       	movw	r18, r28
    193a:	25 58       	subi	r18, 0x85	; 133
    193c:	3f 4f       	sbci	r19, 0xFF	; 255
    193e:	f9 01       	movw	r30, r18
    1940:	20 81       	ld	r18, Z
    1942:	31 81       	ldd	r19, Z+1	; 0x01
    1944:	fc 01       	movw	r30, r24
    1946:	31 83       	std	Z+1, r19	; 0x01
    1948:	20 83       	st	Z, r18
    194a:	ce 01       	movw	r24, r28
    194c:	81 58       	subi	r24, 0x81	; 129
    194e:	9f 4f       	sbci	r25, 0xFF	; 255
    1950:	fc 01       	movw	r30, r24
    1952:	80 81       	ld	r24, Z
    1954:	91 81       	ldd	r25, Z+1	; 0x01
    1956:	8c 01       	movw	r16, r24
    1958:	c8 01       	movw	r24, r16
    195a:	01 97       	sbiw	r24, 0x01	; 1
    195c:	f1 f7       	brne	.-4      	; 0x195a <main+0xd52>
    195e:	8c 01       	movw	r16, r24
    1960:	ce 01       	movw	r24, r28
    1962:	81 58       	subi	r24, 0x81	; 129
    1964:	9f 4f       	sbci	r25, 0xFF	; 255
    1966:	fc 01       	movw	r30, r24
    1968:	11 83       	std	Z+1, r17	; 0x01
    196a:	00 83       	st	Z, r16
    196c:	3d ce       	rjmp	.-902    	; 0x15e8 <main+0x9e0>

0000196e <__fixunssfsi>:
    196e:	ef 92       	push	r14
    1970:	ff 92       	push	r15
    1972:	0f 93       	push	r16
    1974:	1f 93       	push	r17
    1976:	7b 01       	movw	r14, r22
    1978:	8c 01       	movw	r16, r24
    197a:	20 e0       	ldi	r18, 0x00	; 0
    197c:	30 e0       	ldi	r19, 0x00	; 0
    197e:	40 e0       	ldi	r20, 0x00	; 0
    1980:	5f e4       	ldi	r21, 0x4F	; 79
    1982:	0e 94 63 10 	call	0x20c6	; 0x20c6 <__gesf2>
    1986:	87 fd       	sbrc	r24, 7
    1988:	11 c0       	rjmp	.+34     	; 0x19ac <__fixunssfsi+0x3e>
    198a:	c8 01       	movw	r24, r16
    198c:	b7 01       	movw	r22, r14
    198e:	20 e0       	ldi	r18, 0x00	; 0
    1990:	30 e0       	ldi	r19, 0x00	; 0
    1992:	40 e0       	ldi	r20, 0x00	; 0
    1994:	5f e4       	ldi	r21, 0x4F	; 79
    1996:	0e 94 5a 0e 	call	0x1cb4	; 0x1cb4 <__subsf3>
    199a:	0e 94 c3 10 	call	0x2186	; 0x2186 <__fixsfsi>
    199e:	9b 01       	movw	r18, r22
    19a0:	ac 01       	movw	r20, r24
    19a2:	20 50       	subi	r18, 0x00	; 0
    19a4:	30 40       	sbci	r19, 0x00	; 0
    19a6:	40 40       	sbci	r20, 0x00	; 0
    19a8:	50 48       	sbci	r21, 0x80	; 128
    19aa:	06 c0       	rjmp	.+12     	; 0x19b8 <__fixunssfsi+0x4a>
    19ac:	c8 01       	movw	r24, r16
    19ae:	b7 01       	movw	r22, r14
    19b0:	0e 94 c3 10 	call	0x2186	; 0x2186 <__fixsfsi>
    19b4:	9b 01       	movw	r18, r22
    19b6:	ac 01       	movw	r20, r24
    19b8:	b9 01       	movw	r22, r18
    19ba:	ca 01       	movw	r24, r20
    19bc:	1f 91       	pop	r17
    19be:	0f 91       	pop	r16
    19c0:	ff 90       	pop	r15
    19c2:	ef 90       	pop	r14
    19c4:	08 95       	ret

000019c6 <_fpadd_parts>:
    19c6:	a0 e0       	ldi	r26, 0x00	; 0
    19c8:	b0 e0       	ldi	r27, 0x00	; 0
    19ca:	e9 ee       	ldi	r30, 0xE9	; 233
    19cc:	fc e0       	ldi	r31, 0x0C	; 12
    19ce:	0c 94 a9 12 	jmp	0x2552	; 0x2552 <__prologue_saves__+0x8>
    19d2:	fc 01       	movw	r30, r24
    19d4:	ea 01       	movw	r28, r20
    19d6:	80 81       	ld	r24, Z
    19d8:	82 30       	cpi	r24, 0x02	; 2
    19da:	08 f4       	brcc	.+2      	; 0x19de <_fpadd_parts+0x18>
    19dc:	38 c1       	rjmp	.+624    	; 0x1c4e <_fpadd_parts+0x288>
    19de:	db 01       	movw	r26, r22
    19e0:	9c 91       	ld	r25, X
    19e2:	92 30       	cpi	r25, 0x02	; 2
    19e4:	08 f4       	brcc	.+2      	; 0x19e8 <_fpadd_parts+0x22>
    19e6:	30 c1       	rjmp	.+608    	; 0x1c48 <_fpadd_parts+0x282>
    19e8:	84 30       	cpi	r24, 0x04	; 4
    19ea:	59 f4       	brne	.+22     	; 0x1a02 <_fpadd_parts+0x3c>
    19ec:	94 30       	cpi	r25, 0x04	; 4
    19ee:	09 f0       	breq	.+2      	; 0x19f2 <_fpadd_parts+0x2c>
    19f0:	2e c1       	rjmp	.+604    	; 0x1c4e <_fpadd_parts+0x288>
    19f2:	91 81       	ldd	r25, Z+1	; 0x01
    19f4:	11 96       	adiw	r26, 0x01	; 1
    19f6:	8c 91       	ld	r24, X
    19f8:	11 97       	sbiw	r26, 0x01	; 1
    19fa:	98 17       	cp	r25, r24
    19fc:	09 f0       	breq	.+2      	; 0x1a00 <_fpadd_parts+0x3a>
    19fe:	21 c1       	rjmp	.+578    	; 0x1c42 <_fpadd_parts+0x27c>
    1a00:	26 c1       	rjmp	.+588    	; 0x1c4e <_fpadd_parts+0x288>
    1a02:	94 30       	cpi	r25, 0x04	; 4
    1a04:	09 f4       	brne	.+2      	; 0x1a08 <_fpadd_parts+0x42>
    1a06:	20 c1       	rjmp	.+576    	; 0x1c48 <_fpadd_parts+0x282>
    1a08:	92 30       	cpi	r25, 0x02	; 2
    1a0a:	b1 f4       	brne	.+44     	; 0x1a38 <_fpadd_parts+0x72>
    1a0c:	82 30       	cpi	r24, 0x02	; 2
    1a0e:	09 f0       	breq	.+2      	; 0x1a12 <_fpadd_parts+0x4c>
    1a10:	1e c1       	rjmp	.+572    	; 0x1c4e <_fpadd_parts+0x288>
    1a12:	ca 01       	movw	r24, r20
    1a14:	af 01       	movw	r20, r30
    1a16:	28 e0       	ldi	r18, 0x08	; 8
    1a18:	da 01       	movw	r26, r20
    1a1a:	0d 90       	ld	r0, X+
    1a1c:	ad 01       	movw	r20, r26
    1a1e:	dc 01       	movw	r26, r24
    1a20:	0d 92       	st	X+, r0
    1a22:	cd 01       	movw	r24, r26
    1a24:	21 50       	subi	r18, 0x01	; 1
    1a26:	c1 f7       	brne	.-16     	; 0x1a18 <_fpadd_parts+0x52>
    1a28:	db 01       	movw	r26, r22
    1a2a:	11 96       	adiw	r26, 0x01	; 1
    1a2c:	8c 91       	ld	r24, X
    1a2e:	11 97       	sbiw	r26, 0x01	; 1
    1a30:	91 81       	ldd	r25, Z+1	; 0x01
    1a32:	89 23       	and	r24, r25
    1a34:	89 83       	std	Y+1, r24	; 0x01
    1a36:	0a c1       	rjmp	.+532    	; 0x1c4c <_fpadd_parts+0x286>
    1a38:	82 30       	cpi	r24, 0x02	; 2
    1a3a:	09 f4       	brne	.+2      	; 0x1a3e <_fpadd_parts+0x78>
    1a3c:	05 c1       	rjmp	.+522    	; 0x1c48 <_fpadd_parts+0x282>
    1a3e:	c2 80       	ldd	r12, Z+2	; 0x02
    1a40:	d3 80       	ldd	r13, Z+3	; 0x03
    1a42:	db 01       	movw	r26, r22
    1a44:	12 96       	adiw	r26, 0x02	; 2
    1a46:	6d 90       	ld	r6, X+
    1a48:	7c 90       	ld	r7, X
    1a4a:	13 97       	sbiw	r26, 0x03	; 3
    1a4c:	24 81       	ldd	r18, Z+4	; 0x04
    1a4e:	35 81       	ldd	r19, Z+5	; 0x05
    1a50:	46 81       	ldd	r20, Z+6	; 0x06
    1a52:	57 81       	ldd	r21, Z+7	; 0x07
    1a54:	14 96       	adiw	r26, 0x04	; 4
    1a56:	ed 90       	ld	r14, X+
    1a58:	fd 90       	ld	r15, X+
    1a5a:	0d 91       	ld	r16, X+
    1a5c:	1c 91       	ld	r17, X
    1a5e:	17 97       	sbiw	r26, 0x07	; 7
    1a60:	c6 01       	movw	r24, r12
    1a62:	86 19       	sub	r24, r6
    1a64:	97 09       	sbc	r25, r7
    1a66:	5c 01       	movw	r10, r24
    1a68:	97 ff       	sbrs	r25, 7
    1a6a:	04 c0       	rjmp	.+8      	; 0x1a74 <_fpadd_parts+0xae>
    1a6c:	aa 24       	eor	r10, r10
    1a6e:	bb 24       	eor	r11, r11
    1a70:	a8 1a       	sub	r10, r24
    1a72:	b9 0a       	sbc	r11, r25
    1a74:	b0 e2       	ldi	r27, 0x20	; 32
    1a76:	ab 16       	cp	r10, r27
    1a78:	b1 04       	cpc	r11, r1
    1a7a:	0c f0       	brlt	.+2      	; 0x1a7e <_fpadd_parts+0xb8>
    1a7c:	61 c0       	rjmp	.+194    	; 0x1b40 <_fpadd_parts+0x17a>
    1a7e:	18 16       	cp	r1, r24
    1a80:	19 06       	cpc	r1, r25
    1a82:	6c f5       	brge	.+90     	; 0x1ade <_fpadd_parts+0x118>
    1a84:	37 01       	movw	r6, r14
    1a86:	48 01       	movw	r8, r16
    1a88:	0a 2c       	mov	r0, r10
    1a8a:	04 c0       	rjmp	.+8      	; 0x1a94 <_fpadd_parts+0xce>
    1a8c:	96 94       	lsr	r9
    1a8e:	87 94       	ror	r8
    1a90:	77 94       	ror	r7
    1a92:	67 94       	ror	r6
    1a94:	0a 94       	dec	r0
    1a96:	d2 f7       	brpl	.-12     	; 0x1a8c <_fpadd_parts+0xc6>
    1a98:	81 e0       	ldi	r24, 0x01	; 1
    1a9a:	90 e0       	ldi	r25, 0x00	; 0
    1a9c:	a0 e0       	ldi	r26, 0x00	; 0
    1a9e:	b0 e0       	ldi	r27, 0x00	; 0
    1aa0:	0a 2c       	mov	r0, r10
    1aa2:	04 c0       	rjmp	.+8      	; 0x1aac <_fpadd_parts+0xe6>
    1aa4:	88 0f       	add	r24, r24
    1aa6:	99 1f       	adc	r25, r25
    1aa8:	aa 1f       	adc	r26, r26
    1aaa:	bb 1f       	adc	r27, r27
    1aac:	0a 94       	dec	r0
    1aae:	d2 f7       	brpl	.-12     	; 0x1aa4 <_fpadd_parts+0xde>
    1ab0:	01 97       	sbiw	r24, 0x01	; 1
    1ab2:	a1 09       	sbc	r26, r1
    1ab4:	b1 09       	sbc	r27, r1
    1ab6:	8e 21       	and	r24, r14
    1ab8:	9f 21       	and	r25, r15
    1aba:	a0 23       	and	r26, r16
    1abc:	b1 23       	and	r27, r17
    1abe:	ee 24       	eor	r14, r14
    1ac0:	ff 24       	eor	r15, r15
    1ac2:	87 01       	movw	r16, r14
    1ac4:	e3 94       	inc	r14
    1ac6:	00 97       	sbiw	r24, 0x00	; 0
    1ac8:	a1 05       	cpc	r26, r1
    1aca:	b1 05       	cpc	r27, r1
    1acc:	19 f4       	brne	.+6      	; 0x1ad4 <_fpadd_parts+0x10e>
    1ace:	ee 24       	eor	r14, r14
    1ad0:	ff 24       	eor	r15, r15
    1ad2:	87 01       	movw	r16, r14
    1ad4:	e6 28       	or	r14, r6
    1ad6:	f7 28       	or	r15, r7
    1ad8:	08 29       	or	r16, r8
    1ada:	19 29       	or	r17, r9
    1adc:	3c c0       	rjmp	.+120    	; 0x1b56 <_fpadd_parts+0x190>
    1ade:	00 97       	sbiw	r24, 0x00	; 0
    1ae0:	d1 f1       	breq	.+116    	; 0x1b56 <_fpadd_parts+0x190>
    1ae2:	ca 0c       	add	r12, r10
    1ae4:	db 1c       	adc	r13, r11
    1ae6:	39 01       	movw	r6, r18
    1ae8:	4a 01       	movw	r8, r20
    1aea:	0a 2c       	mov	r0, r10
    1aec:	04 c0       	rjmp	.+8      	; 0x1af6 <_fpadd_parts+0x130>
    1aee:	96 94       	lsr	r9
    1af0:	87 94       	ror	r8
    1af2:	77 94       	ror	r7
    1af4:	67 94       	ror	r6
    1af6:	0a 94       	dec	r0
    1af8:	d2 f7       	brpl	.-12     	; 0x1aee <_fpadd_parts+0x128>
    1afa:	81 e0       	ldi	r24, 0x01	; 1
    1afc:	90 e0       	ldi	r25, 0x00	; 0
    1afe:	a0 e0       	ldi	r26, 0x00	; 0
    1b00:	b0 e0       	ldi	r27, 0x00	; 0
    1b02:	0a 2c       	mov	r0, r10
    1b04:	04 c0       	rjmp	.+8      	; 0x1b0e <_fpadd_parts+0x148>
    1b06:	88 0f       	add	r24, r24
    1b08:	99 1f       	adc	r25, r25
    1b0a:	aa 1f       	adc	r26, r26
    1b0c:	bb 1f       	adc	r27, r27
    1b0e:	0a 94       	dec	r0
    1b10:	d2 f7       	brpl	.-12     	; 0x1b06 <_fpadd_parts+0x140>
    1b12:	01 97       	sbiw	r24, 0x01	; 1
    1b14:	a1 09       	sbc	r26, r1
    1b16:	b1 09       	sbc	r27, r1
    1b18:	82 23       	and	r24, r18
    1b1a:	93 23       	and	r25, r19
    1b1c:	a4 23       	and	r26, r20
    1b1e:	b5 23       	and	r27, r21
    1b20:	21 e0       	ldi	r18, 0x01	; 1
    1b22:	30 e0       	ldi	r19, 0x00	; 0
    1b24:	40 e0       	ldi	r20, 0x00	; 0
    1b26:	50 e0       	ldi	r21, 0x00	; 0
    1b28:	00 97       	sbiw	r24, 0x00	; 0
    1b2a:	a1 05       	cpc	r26, r1
    1b2c:	b1 05       	cpc	r27, r1
    1b2e:	19 f4       	brne	.+6      	; 0x1b36 <_fpadd_parts+0x170>
    1b30:	20 e0       	ldi	r18, 0x00	; 0
    1b32:	30 e0       	ldi	r19, 0x00	; 0
    1b34:	a9 01       	movw	r20, r18
    1b36:	26 29       	or	r18, r6
    1b38:	37 29       	or	r19, r7
    1b3a:	48 29       	or	r20, r8
    1b3c:	59 29       	or	r21, r9
    1b3e:	0b c0       	rjmp	.+22     	; 0x1b56 <_fpadd_parts+0x190>
    1b40:	6c 14       	cp	r6, r12
    1b42:	7d 04       	cpc	r7, r13
    1b44:	24 f4       	brge	.+8      	; 0x1b4e <_fpadd_parts+0x188>
    1b46:	ee 24       	eor	r14, r14
    1b48:	ff 24       	eor	r15, r15
    1b4a:	87 01       	movw	r16, r14
    1b4c:	04 c0       	rjmp	.+8      	; 0x1b56 <_fpadd_parts+0x190>
    1b4e:	63 01       	movw	r12, r6
    1b50:	20 e0       	ldi	r18, 0x00	; 0
    1b52:	30 e0       	ldi	r19, 0x00	; 0
    1b54:	a9 01       	movw	r20, r18
    1b56:	81 81       	ldd	r24, Z+1	; 0x01
    1b58:	fb 01       	movw	r30, r22
    1b5a:	91 81       	ldd	r25, Z+1	; 0x01
    1b5c:	89 17       	cp	r24, r25
    1b5e:	09 f4       	brne	.+2      	; 0x1b62 <_fpadd_parts+0x19c>
    1b60:	45 c0       	rjmp	.+138    	; 0x1bec <_fpadd_parts+0x226>
    1b62:	88 23       	and	r24, r24
    1b64:	49 f0       	breq	.+18     	; 0x1b78 <_fpadd_parts+0x1b2>
    1b66:	d8 01       	movw	r26, r16
    1b68:	c7 01       	movw	r24, r14
    1b6a:	82 1b       	sub	r24, r18
    1b6c:	93 0b       	sbc	r25, r19
    1b6e:	a4 0b       	sbc	r26, r20
    1b70:	b5 0b       	sbc	r27, r21
    1b72:	9c 01       	movw	r18, r24
    1b74:	ad 01       	movw	r20, r26
    1b76:	04 c0       	rjmp	.+8      	; 0x1b80 <_fpadd_parts+0x1ba>
    1b78:	2e 19       	sub	r18, r14
    1b7a:	3f 09       	sbc	r19, r15
    1b7c:	40 0b       	sbc	r20, r16
    1b7e:	51 0b       	sbc	r21, r17
    1b80:	57 fd       	sbrc	r21, 7
    1b82:	04 c0       	rjmp	.+8      	; 0x1b8c <_fpadd_parts+0x1c6>
    1b84:	19 82       	std	Y+1, r1	; 0x01
    1b86:	db 82       	std	Y+3, r13	; 0x03
    1b88:	ca 82       	std	Y+2, r12	; 0x02
    1b8a:	0b c0       	rjmp	.+22     	; 0x1ba2 <_fpadd_parts+0x1dc>
    1b8c:	81 e0       	ldi	r24, 0x01	; 1
    1b8e:	89 83       	std	Y+1, r24	; 0x01
    1b90:	db 82       	std	Y+3, r13	; 0x03
    1b92:	ca 82       	std	Y+2, r12	; 0x02
    1b94:	50 95       	com	r21
    1b96:	40 95       	com	r20
    1b98:	30 95       	com	r19
    1b9a:	21 95       	neg	r18
    1b9c:	3f 4f       	sbci	r19, 0xFF	; 255
    1b9e:	4f 4f       	sbci	r20, 0xFF	; 255
    1ba0:	5f 4f       	sbci	r21, 0xFF	; 255
    1ba2:	2c 83       	std	Y+4, r18	; 0x04
    1ba4:	3d 83       	std	Y+5, r19	; 0x05
    1ba6:	4e 83       	std	Y+6, r20	; 0x06
    1ba8:	5f 83       	std	Y+7, r21	; 0x07
    1baa:	0d c0       	rjmp	.+26     	; 0x1bc6 <_fpadd_parts+0x200>
    1bac:	88 0f       	add	r24, r24
    1bae:	99 1f       	adc	r25, r25
    1bb0:	aa 1f       	adc	r26, r26
    1bb2:	bb 1f       	adc	r27, r27
    1bb4:	8c 83       	std	Y+4, r24	; 0x04
    1bb6:	9d 83       	std	Y+5, r25	; 0x05
    1bb8:	ae 83       	std	Y+6, r26	; 0x06
    1bba:	bf 83       	std	Y+7, r27	; 0x07
    1bbc:	8a 81       	ldd	r24, Y+2	; 0x02
    1bbe:	9b 81       	ldd	r25, Y+3	; 0x03
    1bc0:	01 97       	sbiw	r24, 0x01	; 1
    1bc2:	9b 83       	std	Y+3, r25	; 0x03
    1bc4:	8a 83       	std	Y+2, r24	; 0x02
    1bc6:	8c 81       	ldd	r24, Y+4	; 0x04
    1bc8:	9d 81       	ldd	r25, Y+5	; 0x05
    1bca:	ae 81       	ldd	r26, Y+6	; 0x06
    1bcc:	bf 81       	ldd	r27, Y+7	; 0x07
    1bce:	9c 01       	movw	r18, r24
    1bd0:	ad 01       	movw	r20, r26
    1bd2:	21 50       	subi	r18, 0x01	; 1
    1bd4:	30 40       	sbci	r19, 0x00	; 0
    1bd6:	40 40       	sbci	r20, 0x00	; 0
    1bd8:	50 40       	sbci	r21, 0x00	; 0
    1bda:	2f 3f       	cpi	r18, 0xFF	; 255
    1bdc:	ef ef       	ldi	r30, 0xFF	; 255
    1bde:	3e 07       	cpc	r19, r30
    1be0:	ef ef       	ldi	r30, 0xFF	; 255
    1be2:	4e 07       	cpc	r20, r30
    1be4:	ef e3       	ldi	r30, 0x3F	; 63
    1be6:	5e 07       	cpc	r21, r30
    1be8:	08 f3       	brcs	.-62     	; 0x1bac <_fpadd_parts+0x1e6>
    1bea:	0b c0       	rjmp	.+22     	; 0x1c02 <_fpadd_parts+0x23c>
    1bec:	89 83       	std	Y+1, r24	; 0x01
    1bee:	db 82       	std	Y+3, r13	; 0x03
    1bf0:	ca 82       	std	Y+2, r12	; 0x02
    1bf2:	2e 0d       	add	r18, r14
    1bf4:	3f 1d       	adc	r19, r15
    1bf6:	40 1f       	adc	r20, r16
    1bf8:	51 1f       	adc	r21, r17
    1bfa:	2c 83       	std	Y+4, r18	; 0x04
    1bfc:	3d 83       	std	Y+5, r19	; 0x05
    1bfe:	4e 83       	std	Y+6, r20	; 0x06
    1c00:	5f 83       	std	Y+7, r21	; 0x07
    1c02:	83 e0       	ldi	r24, 0x03	; 3
    1c04:	88 83       	st	Y, r24
    1c06:	2c 81       	ldd	r18, Y+4	; 0x04
    1c08:	3d 81       	ldd	r19, Y+5	; 0x05
    1c0a:	4e 81       	ldd	r20, Y+6	; 0x06
    1c0c:	5f 81       	ldd	r21, Y+7	; 0x07
    1c0e:	57 ff       	sbrs	r21, 7
    1c10:	1d c0       	rjmp	.+58     	; 0x1c4c <_fpadd_parts+0x286>
    1c12:	da 01       	movw	r26, r20
    1c14:	c9 01       	movw	r24, r18
    1c16:	81 70       	andi	r24, 0x01	; 1
    1c18:	90 70       	andi	r25, 0x00	; 0
    1c1a:	a0 70       	andi	r26, 0x00	; 0
    1c1c:	b0 70       	andi	r27, 0x00	; 0
    1c1e:	56 95       	lsr	r21
    1c20:	47 95       	ror	r20
    1c22:	37 95       	ror	r19
    1c24:	27 95       	ror	r18
    1c26:	82 2b       	or	r24, r18
    1c28:	93 2b       	or	r25, r19
    1c2a:	a4 2b       	or	r26, r20
    1c2c:	b5 2b       	or	r27, r21
    1c2e:	8c 83       	std	Y+4, r24	; 0x04
    1c30:	9d 83       	std	Y+5, r25	; 0x05
    1c32:	ae 83       	std	Y+6, r26	; 0x06
    1c34:	bf 83       	std	Y+7, r27	; 0x07
    1c36:	8a 81       	ldd	r24, Y+2	; 0x02
    1c38:	9b 81       	ldd	r25, Y+3	; 0x03
    1c3a:	01 96       	adiw	r24, 0x01	; 1
    1c3c:	9b 83       	std	Y+3, r25	; 0x03
    1c3e:	8a 83       	std	Y+2, r24	; 0x02
    1c40:	05 c0       	rjmp	.+10     	; 0x1c4c <_fpadd_parts+0x286>
    1c42:	ef ec       	ldi	r30, 0xCF	; 207
    1c44:	f0 e0       	ldi	r31, 0x00	; 0
    1c46:	03 c0       	rjmp	.+6      	; 0x1c4e <_fpadd_parts+0x288>
    1c48:	fb 01       	movw	r30, r22
    1c4a:	01 c0       	rjmp	.+2      	; 0x1c4e <_fpadd_parts+0x288>
    1c4c:	fe 01       	movw	r30, r28
    1c4e:	cf 01       	movw	r24, r30
    1c50:	cd b7       	in	r28, 0x3d	; 61
    1c52:	de b7       	in	r29, 0x3e	; 62
    1c54:	ee e0       	ldi	r30, 0x0E	; 14
    1c56:	0c 94 c5 12 	jmp	0x258a	; 0x258a <__epilogue_restores__+0x8>

00001c5a <__addsf3>:
    1c5a:	a0 e2       	ldi	r26, 0x20	; 32
    1c5c:	b0 e0       	ldi	r27, 0x00	; 0
    1c5e:	e3 e3       	ldi	r30, 0x33	; 51
    1c60:	fe e0       	ldi	r31, 0x0E	; 14
    1c62:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__prologue_saves__+0x18>
    1c66:	69 83       	std	Y+1, r22	; 0x01
    1c68:	7a 83       	std	Y+2, r23	; 0x02
    1c6a:	8b 83       	std	Y+3, r24	; 0x03
    1c6c:	9c 83       	std	Y+4, r25	; 0x04
    1c6e:	2d 83       	std	Y+5, r18	; 0x05
    1c70:	3e 83       	std	Y+6, r19	; 0x06
    1c72:	4f 83       	std	Y+7, r20	; 0x07
    1c74:	58 87       	std	Y+8, r21	; 0x08
    1c76:	89 e0       	ldi	r24, 0x09	; 9
    1c78:	e8 2e       	mov	r14, r24
    1c7a:	f1 2c       	mov	r15, r1
    1c7c:	ec 0e       	add	r14, r28
    1c7e:	fd 1e       	adc	r15, r29
    1c80:	ce 01       	movw	r24, r28
    1c82:	01 96       	adiw	r24, 0x01	; 1
    1c84:	b7 01       	movw	r22, r14
    1c86:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    1c8a:	8e 01       	movw	r16, r28
    1c8c:	0f 5e       	subi	r16, 0xEF	; 239
    1c8e:	1f 4f       	sbci	r17, 0xFF	; 255
    1c90:	ce 01       	movw	r24, r28
    1c92:	05 96       	adiw	r24, 0x05	; 5
    1c94:	b8 01       	movw	r22, r16
    1c96:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    1c9a:	c7 01       	movw	r24, r14
    1c9c:	b8 01       	movw	r22, r16
    1c9e:	ae 01       	movw	r20, r28
    1ca0:	47 5e       	subi	r20, 0xE7	; 231
    1ca2:	5f 4f       	sbci	r21, 0xFF	; 255
    1ca4:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <_fpadd_parts>
    1ca8:	0e 94 15 11 	call	0x222a	; 0x222a <__pack_f>
    1cac:	a0 96       	adiw	r28, 0x20	; 32
    1cae:	e6 e0       	ldi	r30, 0x06	; 6
    1cb0:	0c 94 cd 12 	jmp	0x259a	; 0x259a <__epilogue_restores__+0x18>

00001cb4 <__subsf3>:
    1cb4:	a0 e2       	ldi	r26, 0x20	; 32
    1cb6:	b0 e0       	ldi	r27, 0x00	; 0
    1cb8:	e0 e6       	ldi	r30, 0x60	; 96
    1cba:	fe e0       	ldi	r31, 0x0E	; 14
    1cbc:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__prologue_saves__+0x18>
    1cc0:	69 83       	std	Y+1, r22	; 0x01
    1cc2:	7a 83       	std	Y+2, r23	; 0x02
    1cc4:	8b 83       	std	Y+3, r24	; 0x03
    1cc6:	9c 83       	std	Y+4, r25	; 0x04
    1cc8:	2d 83       	std	Y+5, r18	; 0x05
    1cca:	3e 83       	std	Y+6, r19	; 0x06
    1ccc:	4f 83       	std	Y+7, r20	; 0x07
    1cce:	58 87       	std	Y+8, r21	; 0x08
    1cd0:	8e 01       	movw	r16, r28
    1cd2:	07 5f       	subi	r16, 0xF7	; 247
    1cd4:	1f 4f       	sbci	r17, 0xFF	; 255
    1cd6:	ce 01       	movw	r24, r28
    1cd8:	01 96       	adiw	r24, 0x01	; 1
    1cda:	b8 01       	movw	r22, r16
    1cdc:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    1ce0:	91 e1       	ldi	r25, 0x11	; 17
    1ce2:	e9 2e       	mov	r14, r25
    1ce4:	f1 2c       	mov	r15, r1
    1ce6:	ec 0e       	add	r14, r28
    1ce8:	fd 1e       	adc	r15, r29
    1cea:	ce 01       	movw	r24, r28
    1cec:	05 96       	adiw	r24, 0x05	; 5
    1cee:	b7 01       	movw	r22, r14
    1cf0:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    1cf4:	8a 89       	ldd	r24, Y+18	; 0x12
    1cf6:	91 e0       	ldi	r25, 0x01	; 1
    1cf8:	89 27       	eor	r24, r25
    1cfa:	8a 8b       	std	Y+18, r24	; 0x12
    1cfc:	c8 01       	movw	r24, r16
    1cfe:	b7 01       	movw	r22, r14
    1d00:	ae 01       	movw	r20, r28
    1d02:	47 5e       	subi	r20, 0xE7	; 231
    1d04:	5f 4f       	sbci	r21, 0xFF	; 255
    1d06:	0e 94 e3 0c 	call	0x19c6	; 0x19c6 <_fpadd_parts>
    1d0a:	0e 94 15 11 	call	0x222a	; 0x222a <__pack_f>
    1d0e:	a0 96       	adiw	r28, 0x20	; 32
    1d10:	e6 e0       	ldi	r30, 0x06	; 6
    1d12:	0c 94 cd 12 	jmp	0x259a	; 0x259a <__epilogue_restores__+0x18>

00001d16 <__mulsf3>:
    1d16:	a0 e2       	ldi	r26, 0x20	; 32
    1d18:	b0 e0       	ldi	r27, 0x00	; 0
    1d1a:	e1 e9       	ldi	r30, 0x91	; 145
    1d1c:	fe e0       	ldi	r31, 0x0E	; 14
    1d1e:	0c 94 a5 12 	jmp	0x254a	; 0x254a <__prologue_saves__>
    1d22:	69 83       	std	Y+1, r22	; 0x01
    1d24:	7a 83       	std	Y+2, r23	; 0x02
    1d26:	8b 83       	std	Y+3, r24	; 0x03
    1d28:	9c 83       	std	Y+4, r25	; 0x04
    1d2a:	2d 83       	std	Y+5, r18	; 0x05
    1d2c:	3e 83       	std	Y+6, r19	; 0x06
    1d2e:	4f 83       	std	Y+7, r20	; 0x07
    1d30:	58 87       	std	Y+8, r21	; 0x08
    1d32:	ce 01       	movw	r24, r28
    1d34:	01 96       	adiw	r24, 0x01	; 1
    1d36:	be 01       	movw	r22, r28
    1d38:	67 5f       	subi	r22, 0xF7	; 247
    1d3a:	7f 4f       	sbci	r23, 0xFF	; 255
    1d3c:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    1d40:	ce 01       	movw	r24, r28
    1d42:	05 96       	adiw	r24, 0x05	; 5
    1d44:	be 01       	movw	r22, r28
    1d46:	6f 5e       	subi	r22, 0xEF	; 239
    1d48:	7f 4f       	sbci	r23, 0xFF	; 255
    1d4a:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    1d4e:	99 85       	ldd	r25, Y+9	; 0x09
    1d50:	92 30       	cpi	r25, 0x02	; 2
    1d52:	78 f0       	brcs	.+30     	; 0x1d72 <__mulsf3+0x5c>
    1d54:	89 89       	ldd	r24, Y+17	; 0x11
    1d56:	82 30       	cpi	r24, 0x02	; 2
    1d58:	c0 f0       	brcs	.+48     	; 0x1d8a <__mulsf3+0x74>
    1d5a:	94 30       	cpi	r25, 0x04	; 4
    1d5c:	19 f4       	brne	.+6      	; 0x1d64 <__mulsf3+0x4e>
    1d5e:	82 30       	cpi	r24, 0x02	; 2
    1d60:	41 f4       	brne	.+16     	; 0x1d72 <__mulsf3+0x5c>
    1d62:	cb c0       	rjmp	.+406    	; 0x1efa <__mulsf3+0x1e4>
    1d64:	84 30       	cpi	r24, 0x04	; 4
    1d66:	19 f4       	brne	.+6      	; 0x1d6e <__mulsf3+0x58>
    1d68:	92 30       	cpi	r25, 0x02	; 2
    1d6a:	79 f4       	brne	.+30     	; 0x1d8a <__mulsf3+0x74>
    1d6c:	c6 c0       	rjmp	.+396    	; 0x1efa <__mulsf3+0x1e4>
    1d6e:	92 30       	cpi	r25, 0x02	; 2
    1d70:	51 f4       	brne	.+20     	; 0x1d86 <__mulsf3+0x70>
    1d72:	81 e0       	ldi	r24, 0x01	; 1
    1d74:	2a 85       	ldd	r18, Y+10	; 0x0a
    1d76:	9a 89       	ldd	r25, Y+18	; 0x12
    1d78:	29 17       	cp	r18, r25
    1d7a:	09 f4       	brne	.+2      	; 0x1d7e <__mulsf3+0x68>
    1d7c:	80 e0       	ldi	r24, 0x00	; 0
    1d7e:	8a 87       	std	Y+10, r24	; 0x0a
    1d80:	ce 01       	movw	r24, r28
    1d82:	09 96       	adiw	r24, 0x09	; 9
    1d84:	bc c0       	rjmp	.+376    	; 0x1efe <__mulsf3+0x1e8>
    1d86:	82 30       	cpi	r24, 0x02	; 2
    1d88:	51 f4       	brne	.+20     	; 0x1d9e <__mulsf3+0x88>
    1d8a:	81 e0       	ldi	r24, 0x01	; 1
    1d8c:	2a 85       	ldd	r18, Y+10	; 0x0a
    1d8e:	9a 89       	ldd	r25, Y+18	; 0x12
    1d90:	29 17       	cp	r18, r25
    1d92:	09 f4       	brne	.+2      	; 0x1d96 <__mulsf3+0x80>
    1d94:	80 e0       	ldi	r24, 0x00	; 0
    1d96:	8a 8b       	std	Y+18, r24	; 0x12
    1d98:	ce 01       	movw	r24, r28
    1d9a:	41 96       	adiw	r24, 0x11	; 17
    1d9c:	b0 c0       	rjmp	.+352    	; 0x1efe <__mulsf3+0x1e8>
    1d9e:	6d 84       	ldd	r6, Y+13	; 0x0d
    1da0:	7e 84       	ldd	r7, Y+14	; 0x0e
    1da2:	8f 84       	ldd	r8, Y+15	; 0x0f
    1da4:	98 88       	ldd	r9, Y+16	; 0x10
    1da6:	ed 88       	ldd	r14, Y+21	; 0x15
    1da8:	fe 88       	ldd	r15, Y+22	; 0x16
    1daa:	0f 89       	ldd	r16, Y+23	; 0x17
    1dac:	18 8d       	ldd	r17, Y+24	; 0x18
    1dae:	e0 e2       	ldi	r30, 0x20	; 32
    1db0:	f0 e0       	ldi	r31, 0x00	; 0
    1db2:	80 e0       	ldi	r24, 0x00	; 0
    1db4:	90 e0       	ldi	r25, 0x00	; 0
    1db6:	dc 01       	movw	r26, r24
    1db8:	aa 24       	eor	r10, r10
    1dba:	bb 24       	eor	r11, r11
    1dbc:	65 01       	movw	r12, r10
    1dbe:	20 e0       	ldi	r18, 0x00	; 0
    1dc0:	30 e0       	ldi	r19, 0x00	; 0
    1dc2:	a9 01       	movw	r20, r18
    1dc4:	b3 01       	movw	r22, r6
    1dc6:	61 70       	andi	r22, 0x01	; 1
    1dc8:	70 70       	andi	r23, 0x00	; 0
    1dca:	61 15       	cp	r22, r1
    1dcc:	71 05       	cpc	r23, r1
    1dce:	d1 f0       	breq	.+52     	; 0x1e04 <__mulsf3+0xee>
    1dd0:	2e 0d       	add	r18, r14
    1dd2:	3f 1d       	adc	r19, r15
    1dd4:	40 1f       	adc	r20, r16
    1dd6:	51 1f       	adc	r21, r17
    1dd8:	15 01       	movw	r2, r10
    1dda:	26 01       	movw	r4, r12
    1ddc:	28 0e       	add	r2, r24
    1dde:	39 1e       	adc	r3, r25
    1de0:	4a 1e       	adc	r4, r26
    1de2:	5b 1e       	adc	r5, r27
    1de4:	81 e0       	ldi	r24, 0x01	; 1
    1de6:	90 e0       	ldi	r25, 0x00	; 0
    1de8:	a0 e0       	ldi	r26, 0x00	; 0
    1dea:	b0 e0       	ldi	r27, 0x00	; 0
    1dec:	2e 15       	cp	r18, r14
    1dee:	3f 05       	cpc	r19, r15
    1df0:	40 07       	cpc	r20, r16
    1df2:	51 07       	cpc	r21, r17
    1df4:	18 f0       	brcs	.+6      	; 0x1dfc <__mulsf3+0xe6>
    1df6:	80 e0       	ldi	r24, 0x00	; 0
    1df8:	90 e0       	ldi	r25, 0x00	; 0
    1dfa:	dc 01       	movw	r26, r24
    1dfc:	82 0d       	add	r24, r2
    1dfe:	93 1d       	adc	r25, r3
    1e00:	a4 1d       	adc	r26, r4
    1e02:	b5 1d       	adc	r27, r5
    1e04:	aa 0c       	add	r10, r10
    1e06:	bb 1c       	adc	r11, r11
    1e08:	cc 1c       	adc	r12, r12
    1e0a:	dd 1c       	adc	r13, r13
    1e0c:	17 ff       	sbrs	r17, 7
    1e0e:	09 c0       	rjmp	.+18     	; 0x1e22 <__mulsf3+0x10c>
    1e10:	61 e0       	ldi	r22, 0x01	; 1
    1e12:	26 2e       	mov	r2, r22
    1e14:	31 2c       	mov	r3, r1
    1e16:	41 2c       	mov	r4, r1
    1e18:	51 2c       	mov	r5, r1
    1e1a:	a2 28       	or	r10, r2
    1e1c:	b3 28       	or	r11, r3
    1e1e:	c4 28       	or	r12, r4
    1e20:	d5 28       	or	r13, r5
    1e22:	31 97       	sbiw	r30, 0x01	; 1
    1e24:	49 f0       	breq	.+18     	; 0x1e38 <__mulsf3+0x122>
    1e26:	ee 0c       	add	r14, r14
    1e28:	ff 1c       	adc	r15, r15
    1e2a:	00 1f       	adc	r16, r16
    1e2c:	11 1f       	adc	r17, r17
    1e2e:	96 94       	lsr	r9
    1e30:	87 94       	ror	r8
    1e32:	77 94       	ror	r7
    1e34:	67 94       	ror	r6
    1e36:	c6 cf       	rjmp	.-116    	; 0x1dc4 <__mulsf3+0xae>
    1e38:	6b 89       	ldd	r22, Y+19	; 0x13
    1e3a:	7c 89       	ldd	r23, Y+20	; 0x14
    1e3c:	eb 85       	ldd	r30, Y+11	; 0x0b
    1e3e:	fc 85       	ldd	r31, Y+12	; 0x0c
    1e40:	6e 0f       	add	r22, r30
    1e42:	7f 1f       	adc	r23, r31
    1e44:	6e 5f       	subi	r22, 0xFE	; 254
    1e46:	7f 4f       	sbci	r23, 0xFF	; 255
    1e48:	7c 8f       	std	Y+28, r23	; 0x1c
    1e4a:	6b 8f       	std	Y+27, r22	; 0x1b
    1e4c:	61 e0       	ldi	r22, 0x01	; 1
    1e4e:	ea 85       	ldd	r30, Y+10	; 0x0a
    1e50:	7a 89       	ldd	r23, Y+18	; 0x12
    1e52:	e7 17       	cp	r30, r23
    1e54:	09 f4       	brne	.+2      	; 0x1e58 <__mulsf3+0x142>
    1e56:	60 e0       	ldi	r22, 0x00	; 0
    1e58:	6a 8f       	std	Y+26, r22	; 0x1a
    1e5a:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1e5c:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1e5e:	10 c0       	rjmp	.+32     	; 0x1e80 <__mulsf3+0x16a>
    1e60:	fc 01       	movw	r30, r24
    1e62:	e1 70       	andi	r30, 0x01	; 1
    1e64:	f0 70       	andi	r31, 0x00	; 0
    1e66:	30 97       	sbiw	r30, 0x00	; 0
    1e68:	29 f0       	breq	.+10     	; 0x1e74 <__mulsf3+0x15e>
    1e6a:	56 95       	lsr	r21
    1e6c:	47 95       	ror	r20
    1e6e:	37 95       	ror	r19
    1e70:	27 95       	ror	r18
    1e72:	50 68       	ori	r21, 0x80	; 128
    1e74:	b6 95       	lsr	r27
    1e76:	a7 95       	ror	r26
    1e78:	97 95       	ror	r25
    1e7a:	87 95       	ror	r24
    1e7c:	6f 5f       	subi	r22, 0xFF	; 255
    1e7e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e80:	b7 fd       	sbrc	r27, 7
    1e82:	ee cf       	rjmp	.-36     	; 0x1e60 <__mulsf3+0x14a>
    1e84:	0c c0       	rjmp	.+24     	; 0x1e9e <__mulsf3+0x188>
    1e86:	88 0f       	add	r24, r24
    1e88:	99 1f       	adc	r25, r25
    1e8a:	aa 1f       	adc	r26, r26
    1e8c:	bb 1f       	adc	r27, r27
    1e8e:	57 fd       	sbrc	r21, 7
    1e90:	81 60       	ori	r24, 0x01	; 1
    1e92:	22 0f       	add	r18, r18
    1e94:	33 1f       	adc	r19, r19
    1e96:	44 1f       	adc	r20, r20
    1e98:	55 1f       	adc	r21, r21
    1e9a:	61 50       	subi	r22, 0x01	; 1
    1e9c:	70 40       	sbci	r23, 0x00	; 0
    1e9e:	80 30       	cpi	r24, 0x00	; 0
    1ea0:	e0 e0       	ldi	r30, 0x00	; 0
    1ea2:	9e 07       	cpc	r25, r30
    1ea4:	e0 e0       	ldi	r30, 0x00	; 0
    1ea6:	ae 07       	cpc	r26, r30
    1ea8:	e0 e4       	ldi	r30, 0x40	; 64
    1eaa:	be 07       	cpc	r27, r30
    1eac:	60 f3       	brcs	.-40     	; 0x1e86 <__mulsf3+0x170>
    1eae:	6b 8f       	std	Y+27, r22	; 0x1b
    1eb0:	7c 8f       	std	Y+28, r23	; 0x1c
    1eb2:	6f e7       	ldi	r22, 0x7F	; 127
    1eb4:	e6 2e       	mov	r14, r22
    1eb6:	f1 2c       	mov	r15, r1
    1eb8:	01 2d       	mov	r16, r1
    1eba:	11 2d       	mov	r17, r1
    1ebc:	e8 22       	and	r14, r24
    1ebe:	f9 22       	and	r15, r25
    1ec0:	0a 23       	and	r16, r26
    1ec2:	1b 23       	and	r17, r27
    1ec4:	60 e4       	ldi	r22, 0x40	; 64
    1ec6:	e6 16       	cp	r14, r22
    1ec8:	f1 04       	cpc	r15, r1
    1eca:	01 05       	cpc	r16, r1
    1ecc:	11 05       	cpc	r17, r1
    1ece:	61 f4       	brne	.+24     	; 0x1ee8 <__mulsf3+0x1d2>
    1ed0:	87 fd       	sbrc	r24, 7
    1ed2:	0a c0       	rjmp	.+20     	; 0x1ee8 <__mulsf3+0x1d2>
    1ed4:	21 15       	cp	r18, r1
    1ed6:	31 05       	cpc	r19, r1
    1ed8:	41 05       	cpc	r20, r1
    1eda:	51 05       	cpc	r21, r1
    1edc:	29 f0       	breq	.+10     	; 0x1ee8 <__mulsf3+0x1d2>
    1ede:	80 5c       	subi	r24, 0xC0	; 192
    1ee0:	9f 4f       	sbci	r25, 0xFF	; 255
    1ee2:	af 4f       	sbci	r26, 0xFF	; 255
    1ee4:	bf 4f       	sbci	r27, 0xFF	; 255
    1ee6:	80 78       	andi	r24, 0x80	; 128
    1ee8:	8d 8f       	std	Y+29, r24	; 0x1d
    1eea:	9e 8f       	std	Y+30, r25	; 0x1e
    1eec:	af 8f       	std	Y+31, r26	; 0x1f
    1eee:	b8 a3       	std	Y+32, r27	; 0x20
    1ef0:	83 e0       	ldi	r24, 0x03	; 3
    1ef2:	89 8f       	std	Y+25, r24	; 0x19
    1ef4:	ce 01       	movw	r24, r28
    1ef6:	49 96       	adiw	r24, 0x19	; 25
    1ef8:	02 c0       	rjmp	.+4      	; 0x1efe <__mulsf3+0x1e8>
    1efa:	8f ec       	ldi	r24, 0xCF	; 207
    1efc:	90 e0       	ldi	r25, 0x00	; 0
    1efe:	0e 94 15 11 	call	0x222a	; 0x222a <__pack_f>
    1f02:	a0 96       	adiw	r28, 0x20	; 32
    1f04:	e2 e1       	ldi	r30, 0x12	; 18
    1f06:	0c 94 c1 12 	jmp	0x2582	; 0x2582 <__epilogue_restores__>

00001f0a <__divsf3>:
    1f0a:	a8 e1       	ldi	r26, 0x18	; 24
    1f0c:	b0 e0       	ldi	r27, 0x00	; 0
    1f0e:	eb e8       	ldi	r30, 0x8B	; 139
    1f10:	ff e0       	ldi	r31, 0x0F	; 15
    1f12:	0c 94 ad 12 	jmp	0x255a	; 0x255a <__prologue_saves__+0x10>
    1f16:	69 83       	std	Y+1, r22	; 0x01
    1f18:	7a 83       	std	Y+2, r23	; 0x02
    1f1a:	8b 83       	std	Y+3, r24	; 0x03
    1f1c:	9c 83       	std	Y+4, r25	; 0x04
    1f1e:	2d 83       	std	Y+5, r18	; 0x05
    1f20:	3e 83       	std	Y+6, r19	; 0x06
    1f22:	4f 83       	std	Y+7, r20	; 0x07
    1f24:	58 87       	std	Y+8, r21	; 0x08
    1f26:	8e 01       	movw	r16, r28
    1f28:	07 5f       	subi	r16, 0xF7	; 247
    1f2a:	1f 4f       	sbci	r17, 0xFF	; 255
    1f2c:	ce 01       	movw	r24, r28
    1f2e:	01 96       	adiw	r24, 0x01	; 1
    1f30:	b8 01       	movw	r22, r16
    1f32:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    1f36:	81 e1       	ldi	r24, 0x11	; 17
    1f38:	e8 2e       	mov	r14, r24
    1f3a:	f1 2c       	mov	r15, r1
    1f3c:	ec 0e       	add	r14, r28
    1f3e:	fd 1e       	adc	r15, r29
    1f40:	ce 01       	movw	r24, r28
    1f42:	05 96       	adiw	r24, 0x05	; 5
    1f44:	b7 01       	movw	r22, r14
    1f46:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    1f4a:	99 85       	ldd	r25, Y+9	; 0x09
    1f4c:	92 30       	cpi	r25, 0x02	; 2
    1f4e:	08 f4       	brcc	.+2      	; 0x1f52 <__divsf3+0x48>
    1f50:	83 c0       	rjmp	.+262    	; 0x2058 <__divsf3+0x14e>
    1f52:	89 89       	ldd	r24, Y+17	; 0x11
    1f54:	82 30       	cpi	r24, 0x02	; 2
    1f56:	08 f4       	brcc	.+2      	; 0x1f5a <__divsf3+0x50>
    1f58:	7b c0       	rjmp	.+246    	; 0x2050 <__divsf3+0x146>
    1f5a:	2a 85       	ldd	r18, Y+10	; 0x0a
    1f5c:	3a 89       	ldd	r19, Y+18	; 0x12
    1f5e:	23 27       	eor	r18, r19
    1f60:	2a 87       	std	Y+10, r18	; 0x0a
    1f62:	94 30       	cpi	r25, 0x04	; 4
    1f64:	11 f0       	breq	.+4      	; 0x1f6a <__divsf3+0x60>
    1f66:	92 30       	cpi	r25, 0x02	; 2
    1f68:	21 f4       	brne	.+8      	; 0x1f72 <__divsf3+0x68>
    1f6a:	98 17       	cp	r25, r24
    1f6c:	09 f0       	breq	.+2      	; 0x1f70 <__divsf3+0x66>
    1f6e:	6c c0       	rjmp	.+216    	; 0x2048 <__divsf3+0x13e>
    1f70:	71 c0       	rjmp	.+226    	; 0x2054 <__divsf3+0x14a>
    1f72:	84 30       	cpi	r24, 0x04	; 4
    1f74:	39 f4       	brne	.+14     	; 0x1f84 <__divsf3+0x7a>
    1f76:	1d 86       	std	Y+13, r1	; 0x0d
    1f78:	1e 86       	std	Y+14, r1	; 0x0e
    1f7a:	1f 86       	std	Y+15, r1	; 0x0f
    1f7c:	18 8a       	std	Y+16, r1	; 0x10
    1f7e:	1c 86       	std	Y+12, r1	; 0x0c
    1f80:	1b 86       	std	Y+11, r1	; 0x0b
    1f82:	6a c0       	rjmp	.+212    	; 0x2058 <__divsf3+0x14e>
    1f84:	82 30       	cpi	r24, 0x02	; 2
    1f86:	19 f4       	brne	.+6      	; 0x1f8e <__divsf3+0x84>
    1f88:	84 e0       	ldi	r24, 0x04	; 4
    1f8a:	89 87       	std	Y+9, r24	; 0x09
    1f8c:	65 c0       	rjmp	.+202    	; 0x2058 <__divsf3+0x14e>
    1f8e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1f90:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f92:	2b 89       	ldd	r18, Y+19	; 0x13
    1f94:	3c 89       	ldd	r19, Y+20	; 0x14
    1f96:	82 1b       	sub	r24, r18
    1f98:	93 0b       	sbc	r25, r19
    1f9a:	9c 87       	std	Y+12, r25	; 0x0c
    1f9c:	8b 87       	std	Y+11, r24	; 0x0b
    1f9e:	2d 85       	ldd	r18, Y+13	; 0x0d
    1fa0:	3e 85       	ldd	r19, Y+14	; 0x0e
    1fa2:	4f 85       	ldd	r20, Y+15	; 0x0f
    1fa4:	58 89       	ldd	r21, Y+16	; 0x10
    1fa6:	ed 88       	ldd	r14, Y+21	; 0x15
    1fa8:	fe 88       	ldd	r15, Y+22	; 0x16
    1faa:	0f 89       	ldd	r16, Y+23	; 0x17
    1fac:	18 8d       	ldd	r17, Y+24	; 0x18
    1fae:	2e 15       	cp	r18, r14
    1fb0:	3f 05       	cpc	r19, r15
    1fb2:	40 07       	cpc	r20, r16
    1fb4:	51 07       	cpc	r21, r17
    1fb6:	38 f4       	brcc	.+14     	; 0x1fc6 <__divsf3+0xbc>
    1fb8:	22 0f       	add	r18, r18
    1fba:	33 1f       	adc	r19, r19
    1fbc:	44 1f       	adc	r20, r20
    1fbe:	55 1f       	adc	r21, r21
    1fc0:	01 97       	sbiw	r24, 0x01	; 1
    1fc2:	9c 87       	std	Y+12, r25	; 0x0c
    1fc4:	8b 87       	std	Y+11, r24	; 0x0b
    1fc6:	6f e1       	ldi	r22, 0x1F	; 31
    1fc8:	70 e0       	ldi	r23, 0x00	; 0
    1fca:	a1 2c       	mov	r10, r1
    1fcc:	b1 2c       	mov	r11, r1
    1fce:	c1 2c       	mov	r12, r1
    1fd0:	a0 e4       	ldi	r26, 0x40	; 64
    1fd2:	da 2e       	mov	r13, r26
    1fd4:	80 e0       	ldi	r24, 0x00	; 0
    1fd6:	90 e0       	ldi	r25, 0x00	; 0
    1fd8:	dc 01       	movw	r26, r24
    1fda:	2e 15       	cp	r18, r14
    1fdc:	3f 05       	cpc	r19, r15
    1fde:	40 07       	cpc	r20, r16
    1fe0:	51 07       	cpc	r21, r17
    1fe2:	40 f0       	brcs	.+16     	; 0x1ff4 <__divsf3+0xea>
    1fe4:	8a 29       	or	r24, r10
    1fe6:	9b 29       	or	r25, r11
    1fe8:	ac 29       	or	r26, r12
    1fea:	bd 29       	or	r27, r13
    1fec:	2e 19       	sub	r18, r14
    1fee:	3f 09       	sbc	r19, r15
    1ff0:	40 0b       	sbc	r20, r16
    1ff2:	51 0b       	sbc	r21, r17
    1ff4:	d6 94       	lsr	r13
    1ff6:	c7 94       	ror	r12
    1ff8:	b7 94       	ror	r11
    1ffa:	a7 94       	ror	r10
    1ffc:	22 0f       	add	r18, r18
    1ffe:	33 1f       	adc	r19, r19
    2000:	44 1f       	adc	r20, r20
    2002:	55 1f       	adc	r21, r21
    2004:	61 50       	subi	r22, 0x01	; 1
    2006:	70 40       	sbci	r23, 0x00	; 0
    2008:	41 f7       	brne	.-48     	; 0x1fda <__divsf3+0xd0>
    200a:	6f e7       	ldi	r22, 0x7F	; 127
    200c:	e6 2e       	mov	r14, r22
    200e:	f1 2c       	mov	r15, r1
    2010:	01 2d       	mov	r16, r1
    2012:	11 2d       	mov	r17, r1
    2014:	e8 22       	and	r14, r24
    2016:	f9 22       	and	r15, r25
    2018:	0a 23       	and	r16, r26
    201a:	1b 23       	and	r17, r27
    201c:	60 e4       	ldi	r22, 0x40	; 64
    201e:	e6 16       	cp	r14, r22
    2020:	f1 04       	cpc	r15, r1
    2022:	01 05       	cpc	r16, r1
    2024:	11 05       	cpc	r17, r1
    2026:	61 f4       	brne	.+24     	; 0x2040 <__divsf3+0x136>
    2028:	87 fd       	sbrc	r24, 7
    202a:	0a c0       	rjmp	.+20     	; 0x2040 <__divsf3+0x136>
    202c:	21 15       	cp	r18, r1
    202e:	31 05       	cpc	r19, r1
    2030:	41 05       	cpc	r20, r1
    2032:	51 05       	cpc	r21, r1
    2034:	29 f0       	breq	.+10     	; 0x2040 <__divsf3+0x136>
    2036:	80 5c       	subi	r24, 0xC0	; 192
    2038:	9f 4f       	sbci	r25, 0xFF	; 255
    203a:	af 4f       	sbci	r26, 0xFF	; 255
    203c:	bf 4f       	sbci	r27, 0xFF	; 255
    203e:	80 78       	andi	r24, 0x80	; 128
    2040:	8d 87       	std	Y+13, r24	; 0x0d
    2042:	9e 87       	std	Y+14, r25	; 0x0e
    2044:	af 87       	std	Y+15, r26	; 0x0f
    2046:	b8 8b       	std	Y+16, r27	; 0x10
    2048:	8e 01       	movw	r16, r28
    204a:	07 5f       	subi	r16, 0xF7	; 247
    204c:	1f 4f       	sbci	r17, 0xFF	; 255
    204e:	04 c0       	rjmp	.+8      	; 0x2058 <__divsf3+0x14e>
    2050:	87 01       	movw	r16, r14
    2052:	02 c0       	rjmp	.+4      	; 0x2058 <__divsf3+0x14e>
    2054:	0f ec       	ldi	r16, 0xCF	; 207
    2056:	10 e0       	ldi	r17, 0x00	; 0
    2058:	c8 01       	movw	r24, r16
    205a:	0e 94 15 11 	call	0x222a	; 0x222a <__pack_f>
    205e:	68 96       	adiw	r28, 0x18	; 24
    2060:	ea e0       	ldi	r30, 0x0A	; 10
    2062:	0c 94 c9 12 	jmp	0x2592	; 0x2592 <__epilogue_restores__+0x10>

00002066 <__gtsf2>:
    2066:	a8 e1       	ldi	r26, 0x18	; 24
    2068:	b0 e0       	ldi	r27, 0x00	; 0
    206a:	e9 e3       	ldi	r30, 0x39	; 57
    206c:	f0 e1       	ldi	r31, 0x10	; 16
    206e:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__prologue_saves__+0x18>
    2072:	69 83       	std	Y+1, r22	; 0x01
    2074:	7a 83       	std	Y+2, r23	; 0x02
    2076:	8b 83       	std	Y+3, r24	; 0x03
    2078:	9c 83       	std	Y+4, r25	; 0x04
    207a:	2d 83       	std	Y+5, r18	; 0x05
    207c:	3e 83       	std	Y+6, r19	; 0x06
    207e:	4f 83       	std	Y+7, r20	; 0x07
    2080:	58 87       	std	Y+8, r21	; 0x08
    2082:	8e 01       	movw	r16, r28
    2084:	07 5f       	subi	r16, 0xF7	; 247
    2086:	1f 4f       	sbci	r17, 0xFF	; 255
    2088:	ce 01       	movw	r24, r28
    208a:	01 96       	adiw	r24, 0x01	; 1
    208c:	b8 01       	movw	r22, r16
    208e:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    2092:	81 e1       	ldi	r24, 0x11	; 17
    2094:	e8 2e       	mov	r14, r24
    2096:	f1 2c       	mov	r15, r1
    2098:	ec 0e       	add	r14, r28
    209a:	fd 1e       	adc	r15, r29
    209c:	ce 01       	movw	r24, r28
    209e:	05 96       	adiw	r24, 0x05	; 5
    20a0:	b7 01       	movw	r22, r14
    20a2:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    20a6:	89 85       	ldd	r24, Y+9	; 0x09
    20a8:	82 30       	cpi	r24, 0x02	; 2
    20aa:	40 f0       	brcs	.+16     	; 0x20bc <__gtsf2+0x56>
    20ac:	89 89       	ldd	r24, Y+17	; 0x11
    20ae:	82 30       	cpi	r24, 0x02	; 2
    20b0:	28 f0       	brcs	.+10     	; 0x20bc <__gtsf2+0x56>
    20b2:	c8 01       	movw	r24, r16
    20b4:	b7 01       	movw	r22, r14
    20b6:	0e 94 4c 12 	call	0x2498	; 0x2498 <__fpcmp_parts_f>
    20ba:	01 c0       	rjmp	.+2      	; 0x20be <__gtsf2+0x58>
    20bc:	8f ef       	ldi	r24, 0xFF	; 255
    20be:	68 96       	adiw	r28, 0x18	; 24
    20c0:	e6 e0       	ldi	r30, 0x06	; 6
    20c2:	0c 94 cd 12 	jmp	0x259a	; 0x259a <__epilogue_restores__+0x18>

000020c6 <__gesf2>:
    20c6:	a8 e1       	ldi	r26, 0x18	; 24
    20c8:	b0 e0       	ldi	r27, 0x00	; 0
    20ca:	e9 e6       	ldi	r30, 0x69	; 105
    20cc:	f0 e1       	ldi	r31, 0x10	; 16
    20ce:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__prologue_saves__+0x18>
    20d2:	69 83       	std	Y+1, r22	; 0x01
    20d4:	7a 83       	std	Y+2, r23	; 0x02
    20d6:	8b 83       	std	Y+3, r24	; 0x03
    20d8:	9c 83       	std	Y+4, r25	; 0x04
    20da:	2d 83       	std	Y+5, r18	; 0x05
    20dc:	3e 83       	std	Y+6, r19	; 0x06
    20de:	4f 83       	std	Y+7, r20	; 0x07
    20e0:	58 87       	std	Y+8, r21	; 0x08
    20e2:	8e 01       	movw	r16, r28
    20e4:	07 5f       	subi	r16, 0xF7	; 247
    20e6:	1f 4f       	sbci	r17, 0xFF	; 255
    20e8:	ce 01       	movw	r24, r28
    20ea:	01 96       	adiw	r24, 0x01	; 1
    20ec:	b8 01       	movw	r22, r16
    20ee:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    20f2:	81 e1       	ldi	r24, 0x11	; 17
    20f4:	e8 2e       	mov	r14, r24
    20f6:	f1 2c       	mov	r15, r1
    20f8:	ec 0e       	add	r14, r28
    20fa:	fd 1e       	adc	r15, r29
    20fc:	ce 01       	movw	r24, r28
    20fe:	05 96       	adiw	r24, 0x05	; 5
    2100:	b7 01       	movw	r22, r14
    2102:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    2106:	89 85       	ldd	r24, Y+9	; 0x09
    2108:	82 30       	cpi	r24, 0x02	; 2
    210a:	40 f0       	brcs	.+16     	; 0x211c <__gesf2+0x56>
    210c:	89 89       	ldd	r24, Y+17	; 0x11
    210e:	82 30       	cpi	r24, 0x02	; 2
    2110:	28 f0       	brcs	.+10     	; 0x211c <__gesf2+0x56>
    2112:	c8 01       	movw	r24, r16
    2114:	b7 01       	movw	r22, r14
    2116:	0e 94 4c 12 	call	0x2498	; 0x2498 <__fpcmp_parts_f>
    211a:	01 c0       	rjmp	.+2      	; 0x211e <__gesf2+0x58>
    211c:	8f ef       	ldi	r24, 0xFF	; 255
    211e:	68 96       	adiw	r28, 0x18	; 24
    2120:	e6 e0       	ldi	r30, 0x06	; 6
    2122:	0c 94 cd 12 	jmp	0x259a	; 0x259a <__epilogue_restores__+0x18>

00002126 <__ltsf2>:
    2126:	a8 e1       	ldi	r26, 0x18	; 24
    2128:	b0 e0       	ldi	r27, 0x00	; 0
    212a:	e9 e9       	ldi	r30, 0x99	; 153
    212c:	f0 e1       	ldi	r31, 0x10	; 16
    212e:	0c 94 b1 12 	jmp	0x2562	; 0x2562 <__prologue_saves__+0x18>
    2132:	69 83       	std	Y+1, r22	; 0x01
    2134:	7a 83       	std	Y+2, r23	; 0x02
    2136:	8b 83       	std	Y+3, r24	; 0x03
    2138:	9c 83       	std	Y+4, r25	; 0x04
    213a:	2d 83       	std	Y+5, r18	; 0x05
    213c:	3e 83       	std	Y+6, r19	; 0x06
    213e:	4f 83       	std	Y+7, r20	; 0x07
    2140:	58 87       	std	Y+8, r21	; 0x08
    2142:	8e 01       	movw	r16, r28
    2144:	07 5f       	subi	r16, 0xF7	; 247
    2146:	1f 4f       	sbci	r17, 0xFF	; 255
    2148:	ce 01       	movw	r24, r28
    214a:	01 96       	adiw	r24, 0x01	; 1
    214c:	b8 01       	movw	r22, r16
    214e:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    2152:	81 e1       	ldi	r24, 0x11	; 17
    2154:	e8 2e       	mov	r14, r24
    2156:	f1 2c       	mov	r15, r1
    2158:	ec 0e       	add	r14, r28
    215a:	fd 1e       	adc	r15, r29
    215c:	ce 01       	movw	r24, r28
    215e:	05 96       	adiw	r24, 0x05	; 5
    2160:	b7 01       	movw	r22, r14
    2162:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    2166:	89 85       	ldd	r24, Y+9	; 0x09
    2168:	82 30       	cpi	r24, 0x02	; 2
    216a:	40 f0       	brcs	.+16     	; 0x217c <__ltsf2+0x56>
    216c:	89 89       	ldd	r24, Y+17	; 0x11
    216e:	82 30       	cpi	r24, 0x02	; 2
    2170:	28 f0       	brcs	.+10     	; 0x217c <__ltsf2+0x56>
    2172:	c8 01       	movw	r24, r16
    2174:	b7 01       	movw	r22, r14
    2176:	0e 94 4c 12 	call	0x2498	; 0x2498 <__fpcmp_parts_f>
    217a:	01 c0       	rjmp	.+2      	; 0x217e <__ltsf2+0x58>
    217c:	81 e0       	ldi	r24, 0x01	; 1
    217e:	68 96       	adiw	r28, 0x18	; 24
    2180:	e6 e0       	ldi	r30, 0x06	; 6
    2182:	0c 94 cd 12 	jmp	0x259a	; 0x259a <__epilogue_restores__+0x18>

00002186 <__fixsfsi>:
    2186:	ac e0       	ldi	r26, 0x0C	; 12
    2188:	b0 e0       	ldi	r27, 0x00	; 0
    218a:	e9 ec       	ldi	r30, 0xC9	; 201
    218c:	f0 e1       	ldi	r31, 0x10	; 16
    218e:	0c 94 b5 12 	jmp	0x256a	; 0x256a <__prologue_saves__+0x20>
    2192:	69 83       	std	Y+1, r22	; 0x01
    2194:	7a 83       	std	Y+2, r23	; 0x02
    2196:	8b 83       	std	Y+3, r24	; 0x03
    2198:	9c 83       	std	Y+4, r25	; 0x04
    219a:	ce 01       	movw	r24, r28
    219c:	01 96       	adiw	r24, 0x01	; 1
    219e:	be 01       	movw	r22, r28
    21a0:	6b 5f       	subi	r22, 0xFB	; 251
    21a2:	7f 4f       	sbci	r23, 0xFF	; 255
    21a4:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <__unpack_f>
    21a8:	8d 81       	ldd	r24, Y+5	; 0x05
    21aa:	82 30       	cpi	r24, 0x02	; 2
    21ac:	81 f1       	breq	.+96     	; 0x220e <__fixsfsi+0x88>
    21ae:	82 30       	cpi	r24, 0x02	; 2
    21b0:	70 f1       	brcs	.+92     	; 0x220e <__fixsfsi+0x88>
    21b2:	84 30       	cpi	r24, 0x04	; 4
    21b4:	21 f4       	brne	.+8      	; 0x21be <__fixsfsi+0x38>
    21b6:	8e 81       	ldd	r24, Y+6	; 0x06
    21b8:	88 23       	and	r24, r24
    21ba:	69 f1       	breq	.+90     	; 0x2216 <__fixsfsi+0x90>
    21bc:	0a c0       	rjmp	.+20     	; 0x21d2 <__fixsfsi+0x4c>
    21be:	2f 81       	ldd	r18, Y+7	; 0x07
    21c0:	38 85       	ldd	r19, Y+8	; 0x08
    21c2:	37 fd       	sbrc	r19, 7
    21c4:	24 c0       	rjmp	.+72     	; 0x220e <__fixsfsi+0x88>
    21c6:	6e 81       	ldd	r22, Y+6	; 0x06
    21c8:	2f 31       	cpi	r18, 0x1F	; 31
    21ca:	31 05       	cpc	r19, r1
    21cc:	3c f0       	brlt	.+14     	; 0x21dc <__fixsfsi+0x56>
    21ce:	66 23       	and	r22, r22
    21d0:	11 f1       	breq	.+68     	; 0x2216 <__fixsfsi+0x90>
    21d2:	20 e0       	ldi	r18, 0x00	; 0
    21d4:	30 e0       	ldi	r19, 0x00	; 0
    21d6:	40 e0       	ldi	r20, 0x00	; 0
    21d8:	50 e8       	ldi	r21, 0x80	; 128
    21da:	21 c0       	rjmp	.+66     	; 0x221e <__fixsfsi+0x98>
    21dc:	8e e1       	ldi	r24, 0x1E	; 30
    21de:	90 e0       	ldi	r25, 0x00	; 0
    21e0:	82 1b       	sub	r24, r18
    21e2:	93 0b       	sbc	r25, r19
    21e4:	29 85       	ldd	r18, Y+9	; 0x09
    21e6:	3a 85       	ldd	r19, Y+10	; 0x0a
    21e8:	4b 85       	ldd	r20, Y+11	; 0x0b
    21ea:	5c 85       	ldd	r21, Y+12	; 0x0c
    21ec:	04 c0       	rjmp	.+8      	; 0x21f6 <__fixsfsi+0x70>
    21ee:	56 95       	lsr	r21
    21f0:	47 95       	ror	r20
    21f2:	37 95       	ror	r19
    21f4:	27 95       	ror	r18
    21f6:	8a 95       	dec	r24
    21f8:	d2 f7       	brpl	.-12     	; 0x21ee <__fixsfsi+0x68>
    21fa:	66 23       	and	r22, r22
    21fc:	81 f0       	breq	.+32     	; 0x221e <__fixsfsi+0x98>
    21fe:	50 95       	com	r21
    2200:	40 95       	com	r20
    2202:	30 95       	com	r19
    2204:	21 95       	neg	r18
    2206:	3f 4f       	sbci	r19, 0xFF	; 255
    2208:	4f 4f       	sbci	r20, 0xFF	; 255
    220a:	5f 4f       	sbci	r21, 0xFF	; 255
    220c:	08 c0       	rjmp	.+16     	; 0x221e <__fixsfsi+0x98>
    220e:	20 e0       	ldi	r18, 0x00	; 0
    2210:	30 e0       	ldi	r19, 0x00	; 0
    2212:	a9 01       	movw	r20, r18
    2214:	04 c0       	rjmp	.+8      	; 0x221e <__fixsfsi+0x98>
    2216:	2f ef       	ldi	r18, 0xFF	; 255
    2218:	3f ef       	ldi	r19, 0xFF	; 255
    221a:	4f ef       	ldi	r20, 0xFF	; 255
    221c:	5f e7       	ldi	r21, 0x7F	; 127
    221e:	b9 01       	movw	r22, r18
    2220:	ca 01       	movw	r24, r20
    2222:	2c 96       	adiw	r28, 0x0c	; 12
    2224:	e2 e0       	ldi	r30, 0x02	; 2
    2226:	0c 94 d1 12 	jmp	0x25a2	; 0x25a2 <__epilogue_restores__+0x20>

0000222a <__pack_f>:
    222a:	ef 92       	push	r14
    222c:	ff 92       	push	r15
    222e:	0f 93       	push	r16
    2230:	1f 93       	push	r17
    2232:	cf 93       	push	r28
    2234:	df 93       	push	r29
    2236:	fc 01       	movw	r30, r24
    2238:	24 81       	ldd	r18, Z+4	; 0x04
    223a:	35 81       	ldd	r19, Z+5	; 0x05
    223c:	46 81       	ldd	r20, Z+6	; 0x06
    223e:	57 81       	ldd	r21, Z+7	; 0x07
    2240:	61 81       	ldd	r22, Z+1	; 0x01
    2242:	80 81       	ld	r24, Z
    2244:	82 30       	cpi	r24, 0x02	; 2
    2246:	20 f4       	brcc	.+8      	; 0x2250 <__pack_f+0x26>
    2248:	40 61       	ori	r20, 0x10	; 16
    224a:	ef ef       	ldi	r30, 0xFF	; 255
    224c:	f0 e0       	ldi	r31, 0x00	; 0
    224e:	a3 c0       	rjmp	.+326    	; 0x2396 <__pack_f+0x16c>
    2250:	84 30       	cpi	r24, 0x04	; 4
    2252:	09 f4       	brne	.+2      	; 0x2256 <__pack_f+0x2c>
    2254:	9b c0       	rjmp	.+310    	; 0x238c <__pack_f+0x162>
    2256:	82 30       	cpi	r24, 0x02	; 2
    2258:	09 f4       	brne	.+2      	; 0x225c <__pack_f+0x32>
    225a:	92 c0       	rjmp	.+292    	; 0x2380 <__pack_f+0x156>
    225c:	21 15       	cp	r18, r1
    225e:	31 05       	cpc	r19, r1
    2260:	41 05       	cpc	r20, r1
    2262:	51 05       	cpc	r21, r1
    2264:	09 f4       	brne	.+2      	; 0x2268 <__pack_f+0x3e>
    2266:	8f c0       	rjmp	.+286    	; 0x2386 <__pack_f+0x15c>
    2268:	02 80       	ldd	r0, Z+2	; 0x02
    226a:	f3 81       	ldd	r31, Z+3	; 0x03
    226c:	e0 2d       	mov	r30, r0
    226e:	8f ef       	ldi	r24, 0xFF	; 255
    2270:	e2 38       	cpi	r30, 0x82	; 130
    2272:	f8 07       	cpc	r31, r24
    2274:	0c f0       	brlt	.+2      	; 0x2278 <__pack_f+0x4e>
    2276:	5a c0       	rjmp	.+180    	; 0x232c <__pack_f+0x102>
    2278:	c2 e8       	ldi	r28, 0x82	; 130
    227a:	df ef       	ldi	r29, 0xFF	; 255
    227c:	ce 1b       	sub	r28, r30
    227e:	df 0b       	sbc	r29, r31
    2280:	ca 31       	cpi	r28, 0x1A	; 26
    2282:	d1 05       	cpc	r29, r1
    2284:	6c f5       	brge	.+90     	; 0x22e0 <__pack_f+0xb6>
    2286:	79 01       	movw	r14, r18
    2288:	8a 01       	movw	r16, r20
    228a:	0c 2e       	mov	r0, r28
    228c:	04 c0       	rjmp	.+8      	; 0x2296 <__pack_f+0x6c>
    228e:	16 95       	lsr	r17
    2290:	07 95       	ror	r16
    2292:	f7 94       	ror	r15
    2294:	e7 94       	ror	r14
    2296:	0a 94       	dec	r0
    2298:	d2 f7       	brpl	.-12     	; 0x228e <__pack_f+0x64>
    229a:	81 e0       	ldi	r24, 0x01	; 1
    229c:	90 e0       	ldi	r25, 0x00	; 0
    229e:	a0 e0       	ldi	r26, 0x00	; 0
    22a0:	b0 e0       	ldi	r27, 0x00	; 0
    22a2:	0c 2e       	mov	r0, r28
    22a4:	04 c0       	rjmp	.+8      	; 0x22ae <__pack_f+0x84>
    22a6:	88 0f       	add	r24, r24
    22a8:	99 1f       	adc	r25, r25
    22aa:	aa 1f       	adc	r26, r26
    22ac:	bb 1f       	adc	r27, r27
    22ae:	0a 94       	dec	r0
    22b0:	d2 f7       	brpl	.-12     	; 0x22a6 <__pack_f+0x7c>
    22b2:	01 97       	sbiw	r24, 0x01	; 1
    22b4:	a1 09       	sbc	r26, r1
    22b6:	b1 09       	sbc	r27, r1
    22b8:	82 23       	and	r24, r18
    22ba:	93 23       	and	r25, r19
    22bc:	a4 23       	and	r26, r20
    22be:	b5 23       	and	r27, r21
    22c0:	21 e0       	ldi	r18, 0x01	; 1
    22c2:	30 e0       	ldi	r19, 0x00	; 0
    22c4:	40 e0       	ldi	r20, 0x00	; 0
    22c6:	50 e0       	ldi	r21, 0x00	; 0
    22c8:	00 97       	sbiw	r24, 0x00	; 0
    22ca:	a1 05       	cpc	r26, r1
    22cc:	b1 05       	cpc	r27, r1
    22ce:	19 f4       	brne	.+6      	; 0x22d6 <__pack_f+0xac>
    22d0:	20 e0       	ldi	r18, 0x00	; 0
    22d2:	30 e0       	ldi	r19, 0x00	; 0
    22d4:	a9 01       	movw	r20, r18
    22d6:	2e 29       	or	r18, r14
    22d8:	3f 29       	or	r19, r15
    22da:	40 2b       	or	r20, r16
    22dc:	51 2b       	or	r21, r17
    22de:	03 c0       	rjmp	.+6      	; 0x22e6 <__pack_f+0xbc>
    22e0:	20 e0       	ldi	r18, 0x00	; 0
    22e2:	30 e0       	ldi	r19, 0x00	; 0
    22e4:	a9 01       	movw	r20, r18
    22e6:	da 01       	movw	r26, r20
    22e8:	c9 01       	movw	r24, r18
    22ea:	8f 77       	andi	r24, 0x7F	; 127
    22ec:	90 70       	andi	r25, 0x00	; 0
    22ee:	a0 70       	andi	r26, 0x00	; 0
    22f0:	b0 70       	andi	r27, 0x00	; 0
    22f2:	80 34       	cpi	r24, 0x40	; 64
    22f4:	91 05       	cpc	r25, r1
    22f6:	a1 05       	cpc	r26, r1
    22f8:	b1 05       	cpc	r27, r1
    22fa:	39 f4       	brne	.+14     	; 0x230a <__pack_f+0xe0>
    22fc:	27 ff       	sbrs	r18, 7
    22fe:	09 c0       	rjmp	.+18     	; 0x2312 <__pack_f+0xe8>
    2300:	20 5c       	subi	r18, 0xC0	; 192
    2302:	3f 4f       	sbci	r19, 0xFF	; 255
    2304:	4f 4f       	sbci	r20, 0xFF	; 255
    2306:	5f 4f       	sbci	r21, 0xFF	; 255
    2308:	04 c0       	rjmp	.+8      	; 0x2312 <__pack_f+0xe8>
    230a:	21 5c       	subi	r18, 0xC1	; 193
    230c:	3f 4f       	sbci	r19, 0xFF	; 255
    230e:	4f 4f       	sbci	r20, 0xFF	; 255
    2310:	5f 4f       	sbci	r21, 0xFF	; 255
    2312:	e1 e0       	ldi	r30, 0x01	; 1
    2314:	f0 e0       	ldi	r31, 0x00	; 0
    2316:	20 30       	cpi	r18, 0x00	; 0
    2318:	80 e0       	ldi	r24, 0x00	; 0
    231a:	38 07       	cpc	r19, r24
    231c:	80 e0       	ldi	r24, 0x00	; 0
    231e:	48 07       	cpc	r20, r24
    2320:	80 e4       	ldi	r24, 0x40	; 64
    2322:	58 07       	cpc	r21, r24
    2324:	28 f5       	brcc	.+74     	; 0x2370 <__pack_f+0x146>
    2326:	e0 e0       	ldi	r30, 0x00	; 0
    2328:	f0 e0       	ldi	r31, 0x00	; 0
    232a:	22 c0       	rjmp	.+68     	; 0x2370 <__pack_f+0x146>
    232c:	e0 38       	cpi	r30, 0x80	; 128
    232e:	f1 05       	cpc	r31, r1
    2330:	6c f5       	brge	.+90     	; 0x238c <__pack_f+0x162>
    2332:	e1 58       	subi	r30, 0x81	; 129
    2334:	ff 4f       	sbci	r31, 0xFF	; 255
    2336:	da 01       	movw	r26, r20
    2338:	c9 01       	movw	r24, r18
    233a:	8f 77       	andi	r24, 0x7F	; 127
    233c:	90 70       	andi	r25, 0x00	; 0
    233e:	a0 70       	andi	r26, 0x00	; 0
    2340:	b0 70       	andi	r27, 0x00	; 0
    2342:	80 34       	cpi	r24, 0x40	; 64
    2344:	91 05       	cpc	r25, r1
    2346:	a1 05       	cpc	r26, r1
    2348:	b1 05       	cpc	r27, r1
    234a:	39 f4       	brne	.+14     	; 0x235a <__pack_f+0x130>
    234c:	27 ff       	sbrs	r18, 7
    234e:	09 c0       	rjmp	.+18     	; 0x2362 <__pack_f+0x138>
    2350:	20 5c       	subi	r18, 0xC0	; 192
    2352:	3f 4f       	sbci	r19, 0xFF	; 255
    2354:	4f 4f       	sbci	r20, 0xFF	; 255
    2356:	5f 4f       	sbci	r21, 0xFF	; 255
    2358:	04 c0       	rjmp	.+8      	; 0x2362 <__pack_f+0x138>
    235a:	21 5c       	subi	r18, 0xC1	; 193
    235c:	3f 4f       	sbci	r19, 0xFF	; 255
    235e:	4f 4f       	sbci	r20, 0xFF	; 255
    2360:	5f 4f       	sbci	r21, 0xFF	; 255
    2362:	57 ff       	sbrs	r21, 7
    2364:	05 c0       	rjmp	.+10     	; 0x2370 <__pack_f+0x146>
    2366:	56 95       	lsr	r21
    2368:	47 95       	ror	r20
    236a:	37 95       	ror	r19
    236c:	27 95       	ror	r18
    236e:	31 96       	adiw	r30, 0x01	; 1
    2370:	87 e0       	ldi	r24, 0x07	; 7
    2372:	56 95       	lsr	r21
    2374:	47 95       	ror	r20
    2376:	37 95       	ror	r19
    2378:	27 95       	ror	r18
    237a:	8a 95       	dec	r24
    237c:	d1 f7       	brne	.-12     	; 0x2372 <__pack_f+0x148>
    237e:	0b c0       	rjmp	.+22     	; 0x2396 <__pack_f+0x16c>
    2380:	e0 e0       	ldi	r30, 0x00	; 0
    2382:	f0 e0       	ldi	r31, 0x00	; 0
    2384:	05 c0       	rjmp	.+10     	; 0x2390 <__pack_f+0x166>
    2386:	e0 e0       	ldi	r30, 0x00	; 0
    2388:	f0 e0       	ldi	r31, 0x00	; 0
    238a:	05 c0       	rjmp	.+10     	; 0x2396 <__pack_f+0x16c>
    238c:	ef ef       	ldi	r30, 0xFF	; 255
    238e:	f0 e0       	ldi	r31, 0x00	; 0
    2390:	20 e0       	ldi	r18, 0x00	; 0
    2392:	30 e0       	ldi	r19, 0x00	; 0
    2394:	a9 01       	movw	r20, r18
    2396:	8e 2f       	mov	r24, r30
    2398:	87 95       	ror	r24
    239a:	88 27       	eor	r24, r24
    239c:	87 95       	ror	r24
    239e:	94 2f       	mov	r25, r20
    23a0:	9f 77       	andi	r25, 0x7F	; 127
    23a2:	67 95       	ror	r22
    23a4:	66 27       	eor	r22, r22
    23a6:	67 95       	ror	r22
    23a8:	e6 95       	lsr	r30
    23aa:	e2 2e       	mov	r14, r18
    23ac:	a9 2f       	mov	r26, r25
    23ae:	a8 2b       	or	r26, r24
    23b0:	fe 2f       	mov	r31, r30
    23b2:	f6 2b       	or	r31, r22
    23b4:	62 2f       	mov	r22, r18
    23b6:	73 2f       	mov	r23, r19
    23b8:	8a 2f       	mov	r24, r26
    23ba:	9f 2f       	mov	r25, r31
    23bc:	cd b7       	in	r28, 0x3d	; 61
    23be:	de b7       	in	r29, 0x3e	; 62
    23c0:	e6 e0       	ldi	r30, 0x06	; 6
    23c2:	0c 94 cd 12 	jmp	0x259a	; 0x259a <__epilogue_restores__+0x18>

000023c6 <__unpack_f>:
    23c6:	dc 01       	movw	r26, r24
    23c8:	fb 01       	movw	r30, r22
    23ca:	2c 91       	ld	r18, X
    23cc:	11 96       	adiw	r26, 0x01	; 1
    23ce:	3c 91       	ld	r19, X
    23d0:	11 97       	sbiw	r26, 0x01	; 1
    23d2:	12 96       	adiw	r26, 0x02	; 2
    23d4:	8c 91       	ld	r24, X
    23d6:	12 97       	sbiw	r26, 0x02	; 2
    23d8:	48 2f       	mov	r20, r24
    23da:	4f 77       	andi	r20, 0x7F	; 127
    23dc:	50 e0       	ldi	r21, 0x00	; 0
    23de:	98 2f       	mov	r25, r24
    23e0:	99 1f       	adc	r25, r25
    23e2:	99 27       	eor	r25, r25
    23e4:	99 1f       	adc	r25, r25
    23e6:	13 96       	adiw	r26, 0x03	; 3
    23e8:	6c 91       	ld	r22, X
    23ea:	13 97       	sbiw	r26, 0x03	; 3
    23ec:	86 2f       	mov	r24, r22
    23ee:	88 0f       	add	r24, r24
    23f0:	89 2b       	or	r24, r25
    23f2:	90 e0       	ldi	r25, 0x00	; 0
    23f4:	66 1f       	adc	r22, r22
    23f6:	66 27       	eor	r22, r22
    23f8:	66 1f       	adc	r22, r22
    23fa:	61 83       	std	Z+1, r22	; 0x01
    23fc:	00 97       	sbiw	r24, 0x00	; 0
    23fe:	39 f5       	brne	.+78     	; 0x244e <__unpack_f+0x88>
    2400:	21 15       	cp	r18, r1
    2402:	31 05       	cpc	r19, r1
    2404:	41 05       	cpc	r20, r1
    2406:	51 05       	cpc	r21, r1
    2408:	11 f4       	brne	.+4      	; 0x240e <__unpack_f+0x48>
    240a:	82 e0       	ldi	r24, 0x02	; 2
    240c:	29 c0       	rjmp	.+82     	; 0x2460 <__unpack_f+0x9a>
    240e:	82 e8       	ldi	r24, 0x82	; 130
    2410:	9f ef       	ldi	r25, 0xFF	; 255
    2412:	93 83       	std	Z+3, r25	; 0x03
    2414:	82 83       	std	Z+2, r24	; 0x02
    2416:	67 e0       	ldi	r22, 0x07	; 7
    2418:	22 0f       	add	r18, r18
    241a:	33 1f       	adc	r19, r19
    241c:	44 1f       	adc	r20, r20
    241e:	55 1f       	adc	r21, r21
    2420:	6a 95       	dec	r22
    2422:	d1 f7       	brne	.-12     	; 0x2418 <__unpack_f+0x52>
    2424:	83 e0       	ldi	r24, 0x03	; 3
    2426:	80 83       	st	Z, r24
    2428:	09 c0       	rjmp	.+18     	; 0x243c <__unpack_f+0x76>
    242a:	22 0f       	add	r18, r18
    242c:	33 1f       	adc	r19, r19
    242e:	44 1f       	adc	r20, r20
    2430:	55 1f       	adc	r21, r21
    2432:	82 81       	ldd	r24, Z+2	; 0x02
    2434:	93 81       	ldd	r25, Z+3	; 0x03
    2436:	01 97       	sbiw	r24, 0x01	; 1
    2438:	93 83       	std	Z+3, r25	; 0x03
    243a:	82 83       	std	Z+2, r24	; 0x02
    243c:	20 30       	cpi	r18, 0x00	; 0
    243e:	80 e0       	ldi	r24, 0x00	; 0
    2440:	38 07       	cpc	r19, r24
    2442:	80 e0       	ldi	r24, 0x00	; 0
    2444:	48 07       	cpc	r20, r24
    2446:	80 e4       	ldi	r24, 0x40	; 64
    2448:	58 07       	cpc	r21, r24
    244a:	78 f3       	brcs	.-34     	; 0x242a <__unpack_f+0x64>
    244c:	20 c0       	rjmp	.+64     	; 0x248e <__unpack_f+0xc8>
    244e:	8f 3f       	cpi	r24, 0xFF	; 255
    2450:	91 05       	cpc	r25, r1
    2452:	79 f4       	brne	.+30     	; 0x2472 <__unpack_f+0xac>
    2454:	21 15       	cp	r18, r1
    2456:	31 05       	cpc	r19, r1
    2458:	41 05       	cpc	r20, r1
    245a:	51 05       	cpc	r21, r1
    245c:	19 f4       	brne	.+6      	; 0x2464 <__unpack_f+0x9e>
    245e:	84 e0       	ldi	r24, 0x04	; 4
    2460:	80 83       	st	Z, r24
    2462:	08 95       	ret
    2464:	44 ff       	sbrs	r20, 4
    2466:	03 c0       	rjmp	.+6      	; 0x246e <__unpack_f+0xa8>
    2468:	81 e0       	ldi	r24, 0x01	; 1
    246a:	80 83       	st	Z, r24
    246c:	10 c0       	rjmp	.+32     	; 0x248e <__unpack_f+0xc8>
    246e:	10 82       	st	Z, r1
    2470:	0e c0       	rjmp	.+28     	; 0x248e <__unpack_f+0xc8>
    2472:	8f 57       	subi	r24, 0x7F	; 127
    2474:	90 40       	sbci	r25, 0x00	; 0
    2476:	93 83       	std	Z+3, r25	; 0x03
    2478:	82 83       	std	Z+2, r24	; 0x02
    247a:	83 e0       	ldi	r24, 0x03	; 3
    247c:	80 83       	st	Z, r24
    247e:	87 e0       	ldi	r24, 0x07	; 7
    2480:	22 0f       	add	r18, r18
    2482:	33 1f       	adc	r19, r19
    2484:	44 1f       	adc	r20, r20
    2486:	55 1f       	adc	r21, r21
    2488:	8a 95       	dec	r24
    248a:	d1 f7       	brne	.-12     	; 0x2480 <__unpack_f+0xba>
    248c:	50 64       	ori	r21, 0x40	; 64
    248e:	24 83       	std	Z+4, r18	; 0x04
    2490:	35 83       	std	Z+5, r19	; 0x05
    2492:	46 83       	std	Z+6, r20	; 0x06
    2494:	57 83       	std	Z+7, r21	; 0x07
    2496:	08 95       	ret

00002498 <__fpcmp_parts_f>:
    2498:	fc 01       	movw	r30, r24
    249a:	db 01       	movw	r26, r22
    249c:	90 81       	ld	r25, Z
    249e:	92 30       	cpi	r25, 0x02	; 2
    24a0:	08 f4       	brcc	.+2      	; 0x24a4 <__fpcmp_parts_f+0xc>
    24a2:	49 c0       	rjmp	.+146    	; 0x2536 <__fpcmp_parts_f+0x9e>
    24a4:	8c 91       	ld	r24, X
    24a6:	82 30       	cpi	r24, 0x02	; 2
    24a8:	08 f4       	brcc	.+2      	; 0x24ac <__fpcmp_parts_f+0x14>
    24aa:	45 c0       	rjmp	.+138    	; 0x2536 <__fpcmp_parts_f+0x9e>
    24ac:	94 30       	cpi	r25, 0x04	; 4
    24ae:	51 f4       	brne	.+20     	; 0x24c4 <__fpcmp_parts_f+0x2c>
    24b0:	61 81       	ldd	r22, Z+1	; 0x01
    24b2:	84 30       	cpi	r24, 0x04	; 4
    24b4:	b1 f5       	brne	.+108    	; 0x2522 <__fpcmp_parts_f+0x8a>
    24b6:	11 96       	adiw	r26, 0x01	; 1
    24b8:	2c 91       	ld	r18, X
    24ba:	11 97       	sbiw	r26, 0x01	; 1
    24bc:	30 e0       	ldi	r19, 0x00	; 0
    24be:	26 1b       	sub	r18, r22
    24c0:	31 09       	sbc	r19, r1
    24c2:	41 c0       	rjmp	.+130    	; 0x2546 <__fpcmp_parts_f+0xae>
    24c4:	84 30       	cpi	r24, 0x04	; 4
    24c6:	21 f0       	breq	.+8      	; 0x24d0 <__fpcmp_parts_f+0x38>
    24c8:	92 30       	cpi	r25, 0x02	; 2
    24ca:	41 f4       	brne	.+16     	; 0x24dc <__fpcmp_parts_f+0x44>
    24cc:	82 30       	cpi	r24, 0x02	; 2
    24ce:	b1 f1       	breq	.+108    	; 0x253c <__fpcmp_parts_f+0xa4>
    24d0:	11 96       	adiw	r26, 0x01	; 1
    24d2:	8c 91       	ld	r24, X
    24d4:	11 97       	sbiw	r26, 0x01	; 1
    24d6:	88 23       	and	r24, r24
    24d8:	a1 f1       	breq	.+104    	; 0x2542 <__fpcmp_parts_f+0xaa>
    24da:	2d c0       	rjmp	.+90     	; 0x2536 <__fpcmp_parts_f+0x9e>
    24dc:	61 81       	ldd	r22, Z+1	; 0x01
    24de:	82 30       	cpi	r24, 0x02	; 2
    24e0:	01 f1       	breq	.+64     	; 0x2522 <__fpcmp_parts_f+0x8a>
    24e2:	11 96       	adiw	r26, 0x01	; 1
    24e4:	8c 91       	ld	r24, X
    24e6:	11 97       	sbiw	r26, 0x01	; 1
    24e8:	68 17       	cp	r22, r24
    24ea:	d9 f4       	brne	.+54     	; 0x2522 <__fpcmp_parts_f+0x8a>
    24ec:	22 81       	ldd	r18, Z+2	; 0x02
    24ee:	33 81       	ldd	r19, Z+3	; 0x03
    24f0:	12 96       	adiw	r26, 0x02	; 2
    24f2:	8d 91       	ld	r24, X+
    24f4:	9c 91       	ld	r25, X
    24f6:	13 97       	sbiw	r26, 0x03	; 3
    24f8:	82 17       	cp	r24, r18
    24fa:	93 07       	cpc	r25, r19
    24fc:	94 f0       	brlt	.+36     	; 0x2522 <__fpcmp_parts_f+0x8a>
    24fe:	28 17       	cp	r18, r24
    2500:	39 07       	cpc	r19, r25
    2502:	bc f0       	brlt	.+46     	; 0x2532 <__fpcmp_parts_f+0x9a>
    2504:	24 81       	ldd	r18, Z+4	; 0x04
    2506:	35 81       	ldd	r19, Z+5	; 0x05
    2508:	46 81       	ldd	r20, Z+6	; 0x06
    250a:	57 81       	ldd	r21, Z+7	; 0x07
    250c:	14 96       	adiw	r26, 0x04	; 4
    250e:	8d 91       	ld	r24, X+
    2510:	9d 91       	ld	r25, X+
    2512:	0d 90       	ld	r0, X+
    2514:	bc 91       	ld	r27, X
    2516:	a0 2d       	mov	r26, r0
    2518:	82 17       	cp	r24, r18
    251a:	93 07       	cpc	r25, r19
    251c:	a4 07       	cpc	r26, r20
    251e:	b5 07       	cpc	r27, r21
    2520:	18 f4       	brcc	.+6      	; 0x2528 <__fpcmp_parts_f+0x90>
    2522:	66 23       	and	r22, r22
    2524:	41 f0       	breq	.+16     	; 0x2536 <__fpcmp_parts_f+0x9e>
    2526:	0d c0       	rjmp	.+26     	; 0x2542 <__fpcmp_parts_f+0xaa>
    2528:	28 17       	cp	r18, r24
    252a:	39 07       	cpc	r19, r25
    252c:	4a 07       	cpc	r20, r26
    252e:	5b 07       	cpc	r21, r27
    2530:	28 f4       	brcc	.+10     	; 0x253c <__fpcmp_parts_f+0xa4>
    2532:	66 23       	and	r22, r22
    2534:	31 f0       	breq	.+12     	; 0x2542 <__fpcmp_parts_f+0xaa>
    2536:	21 e0       	ldi	r18, 0x01	; 1
    2538:	30 e0       	ldi	r19, 0x00	; 0
    253a:	05 c0       	rjmp	.+10     	; 0x2546 <__fpcmp_parts_f+0xae>
    253c:	20 e0       	ldi	r18, 0x00	; 0
    253e:	30 e0       	ldi	r19, 0x00	; 0
    2540:	02 c0       	rjmp	.+4      	; 0x2546 <__fpcmp_parts_f+0xae>
    2542:	2f ef       	ldi	r18, 0xFF	; 255
    2544:	3f ef       	ldi	r19, 0xFF	; 255
    2546:	c9 01       	movw	r24, r18
    2548:	08 95       	ret

0000254a <__prologue_saves__>:
    254a:	2f 92       	push	r2
    254c:	3f 92       	push	r3
    254e:	4f 92       	push	r4
    2550:	5f 92       	push	r5
    2552:	6f 92       	push	r6
    2554:	7f 92       	push	r7
    2556:	8f 92       	push	r8
    2558:	9f 92       	push	r9
    255a:	af 92       	push	r10
    255c:	bf 92       	push	r11
    255e:	cf 92       	push	r12
    2560:	df 92       	push	r13
    2562:	ef 92       	push	r14
    2564:	ff 92       	push	r15
    2566:	0f 93       	push	r16
    2568:	1f 93       	push	r17
    256a:	cf 93       	push	r28
    256c:	df 93       	push	r29
    256e:	cd b7       	in	r28, 0x3d	; 61
    2570:	de b7       	in	r29, 0x3e	; 62
    2572:	ca 1b       	sub	r28, r26
    2574:	db 0b       	sbc	r29, r27
    2576:	0f b6       	in	r0, 0x3f	; 63
    2578:	f8 94       	cli
    257a:	de bf       	out	0x3e, r29	; 62
    257c:	0f be       	out	0x3f, r0	; 63
    257e:	cd bf       	out	0x3d, r28	; 61
    2580:	09 94       	ijmp

00002582 <__epilogue_restores__>:
    2582:	2a 88       	ldd	r2, Y+18	; 0x12
    2584:	39 88       	ldd	r3, Y+17	; 0x11
    2586:	48 88       	ldd	r4, Y+16	; 0x10
    2588:	5f 84       	ldd	r5, Y+15	; 0x0f
    258a:	6e 84       	ldd	r6, Y+14	; 0x0e
    258c:	7d 84       	ldd	r7, Y+13	; 0x0d
    258e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2590:	9b 84       	ldd	r9, Y+11	; 0x0b
    2592:	aa 84       	ldd	r10, Y+10	; 0x0a
    2594:	b9 84       	ldd	r11, Y+9	; 0x09
    2596:	c8 84       	ldd	r12, Y+8	; 0x08
    2598:	df 80       	ldd	r13, Y+7	; 0x07
    259a:	ee 80       	ldd	r14, Y+6	; 0x06
    259c:	fd 80       	ldd	r15, Y+5	; 0x05
    259e:	0c 81       	ldd	r16, Y+4	; 0x04
    25a0:	1b 81       	ldd	r17, Y+3	; 0x03
    25a2:	aa 81       	ldd	r26, Y+2	; 0x02
    25a4:	b9 81       	ldd	r27, Y+1	; 0x01
    25a6:	ce 0f       	add	r28, r30
    25a8:	d1 1d       	adc	r29, r1
    25aa:	0f b6       	in	r0, 0x3f	; 63
    25ac:	f8 94       	cli
    25ae:	de bf       	out	0x3e, r29	; 62
    25b0:	0f be       	out	0x3f, r0	; 63
    25b2:	cd bf       	out	0x3d, r28	; 61
    25b4:	ed 01       	movw	r28, r26
    25b6:	08 95       	ret

000025b8 <sprintf>:
    25b8:	ae e0       	ldi	r26, 0x0E	; 14
    25ba:	b0 e0       	ldi	r27, 0x00	; 0
    25bc:	e2 ee       	ldi	r30, 0xE2	; 226
    25be:	f2 e1       	ldi	r31, 0x12	; 18
    25c0:	0c 94 b3 12 	jmp	0x2566	; 0x2566 <__prologue_saves__+0x1c>
    25c4:	0d 89       	ldd	r16, Y+21	; 0x15
    25c6:	1e 89       	ldd	r17, Y+22	; 0x16
    25c8:	86 e0       	ldi	r24, 0x06	; 6
    25ca:	8c 83       	std	Y+4, r24	; 0x04
    25cc:	1a 83       	std	Y+2, r17	; 0x02
    25ce:	09 83       	std	Y+1, r16	; 0x01
    25d0:	8f ef       	ldi	r24, 0xFF	; 255
    25d2:	9f e7       	ldi	r25, 0x7F	; 127
    25d4:	9e 83       	std	Y+6, r25	; 0x06
    25d6:	8d 83       	std	Y+5, r24	; 0x05
    25d8:	9e 01       	movw	r18, r28
    25da:	27 5e       	subi	r18, 0xE7	; 231
    25dc:	3f 4f       	sbci	r19, 0xFF	; 255
    25de:	ce 01       	movw	r24, r28
    25e0:	01 96       	adiw	r24, 0x01	; 1
    25e2:	6f 89       	ldd	r22, Y+23	; 0x17
    25e4:	78 8d       	ldd	r23, Y+24	; 0x18
    25e6:	a9 01       	movw	r20, r18
    25e8:	0e 94 ff 12 	call	0x25fe	; 0x25fe <vfprintf>
    25ec:	ef 81       	ldd	r30, Y+7	; 0x07
    25ee:	f8 85       	ldd	r31, Y+8	; 0x08
    25f0:	e0 0f       	add	r30, r16
    25f2:	f1 1f       	adc	r31, r17
    25f4:	10 82       	st	Z, r1
    25f6:	2e 96       	adiw	r28, 0x0e	; 14
    25f8:	e4 e0       	ldi	r30, 0x04	; 4
    25fa:	0c 94 cf 12 	jmp	0x259e	; 0x259e <__epilogue_restores__+0x1c>

000025fe <vfprintf>:
    25fe:	ac e0       	ldi	r26, 0x0C	; 12
    2600:	b0 e0       	ldi	r27, 0x00	; 0
    2602:	e5 e0       	ldi	r30, 0x05	; 5
    2604:	f3 e1       	ldi	r31, 0x13	; 19
    2606:	0c 94 a5 12 	jmp	0x254a	; 0x254a <__prologue_saves__>
    260a:	6c 01       	movw	r12, r24
    260c:	1b 01       	movw	r2, r22
    260e:	8a 01       	movw	r16, r20
    2610:	fc 01       	movw	r30, r24
    2612:	17 82       	std	Z+7, r1	; 0x07
    2614:	16 82       	std	Z+6, r1	; 0x06
    2616:	83 81       	ldd	r24, Z+3	; 0x03
    2618:	81 ff       	sbrs	r24, 1
    261a:	d1 c1       	rjmp	.+930    	; 0x29be <vfprintf+0x3c0>
    261c:	2e 01       	movw	r4, r28
    261e:	08 94       	sec
    2620:	41 1c       	adc	r4, r1
    2622:	51 1c       	adc	r5, r1
    2624:	f6 01       	movw	r30, r12
    2626:	93 81       	ldd	r25, Z+3	; 0x03
    2628:	f1 01       	movw	r30, r2
    262a:	93 fd       	sbrc	r25, 3
    262c:	85 91       	lpm	r24, Z+
    262e:	93 ff       	sbrs	r25, 3
    2630:	81 91       	ld	r24, Z+
    2632:	1f 01       	movw	r2, r30
    2634:	88 23       	and	r24, r24
    2636:	09 f4       	brne	.+2      	; 0x263a <vfprintf+0x3c>
    2638:	be c1       	rjmp	.+892    	; 0x29b6 <vfprintf+0x3b8>
    263a:	85 32       	cpi	r24, 0x25	; 37
    263c:	39 f4       	brne	.+14     	; 0x264c <vfprintf+0x4e>
    263e:	93 fd       	sbrc	r25, 3
    2640:	85 91       	lpm	r24, Z+
    2642:	93 ff       	sbrs	r25, 3
    2644:	81 91       	ld	r24, Z+
    2646:	1f 01       	movw	r2, r30
    2648:	85 32       	cpi	r24, 0x25	; 37
    264a:	29 f4       	brne	.+10     	; 0x2656 <vfprintf+0x58>
    264c:	90 e0       	ldi	r25, 0x00	; 0
    264e:	b6 01       	movw	r22, r12
    2650:	0e 94 fc 14 	call	0x29f8	; 0x29f8 <fputc>
    2654:	e7 cf       	rjmp	.-50     	; 0x2624 <vfprintf+0x26>
    2656:	ee 24       	eor	r14, r14
    2658:	ff 24       	eor	r15, r15
    265a:	20 e0       	ldi	r18, 0x00	; 0
    265c:	20 32       	cpi	r18, 0x20	; 32
    265e:	b0 f4       	brcc	.+44     	; 0x268c <vfprintf+0x8e>
    2660:	8b 32       	cpi	r24, 0x2B	; 43
    2662:	69 f0       	breq	.+26     	; 0x267e <vfprintf+0x80>
    2664:	8c 32       	cpi	r24, 0x2C	; 44
    2666:	28 f4       	brcc	.+10     	; 0x2672 <vfprintf+0x74>
    2668:	80 32       	cpi	r24, 0x20	; 32
    266a:	51 f0       	breq	.+20     	; 0x2680 <vfprintf+0x82>
    266c:	83 32       	cpi	r24, 0x23	; 35
    266e:	71 f4       	brne	.+28     	; 0x268c <vfprintf+0x8e>
    2670:	0b c0       	rjmp	.+22     	; 0x2688 <vfprintf+0x8a>
    2672:	8d 32       	cpi	r24, 0x2D	; 45
    2674:	39 f0       	breq	.+14     	; 0x2684 <vfprintf+0x86>
    2676:	80 33       	cpi	r24, 0x30	; 48
    2678:	49 f4       	brne	.+18     	; 0x268c <vfprintf+0x8e>
    267a:	21 60       	ori	r18, 0x01	; 1
    267c:	2c c0       	rjmp	.+88     	; 0x26d6 <vfprintf+0xd8>
    267e:	22 60       	ori	r18, 0x02	; 2
    2680:	24 60       	ori	r18, 0x04	; 4
    2682:	29 c0       	rjmp	.+82     	; 0x26d6 <vfprintf+0xd8>
    2684:	28 60       	ori	r18, 0x08	; 8
    2686:	27 c0       	rjmp	.+78     	; 0x26d6 <vfprintf+0xd8>
    2688:	20 61       	ori	r18, 0x10	; 16
    268a:	25 c0       	rjmp	.+74     	; 0x26d6 <vfprintf+0xd8>
    268c:	27 fd       	sbrc	r18, 7
    268e:	2c c0       	rjmp	.+88     	; 0x26e8 <vfprintf+0xea>
    2690:	38 2f       	mov	r19, r24
    2692:	30 53       	subi	r19, 0x30	; 48
    2694:	3a 30       	cpi	r19, 0x0A	; 10
    2696:	98 f4       	brcc	.+38     	; 0x26be <vfprintf+0xc0>
    2698:	26 ff       	sbrs	r18, 6
    269a:	08 c0       	rjmp	.+16     	; 0x26ac <vfprintf+0xae>
    269c:	8e 2d       	mov	r24, r14
    269e:	88 0f       	add	r24, r24
    26a0:	e8 2e       	mov	r14, r24
    26a2:	ee 0c       	add	r14, r14
    26a4:	ee 0c       	add	r14, r14
    26a6:	e8 0e       	add	r14, r24
    26a8:	e3 0e       	add	r14, r19
    26aa:	15 c0       	rjmp	.+42     	; 0x26d6 <vfprintf+0xd8>
    26ac:	8f 2d       	mov	r24, r15
    26ae:	88 0f       	add	r24, r24
    26b0:	f8 2e       	mov	r15, r24
    26b2:	ff 0c       	add	r15, r15
    26b4:	ff 0c       	add	r15, r15
    26b6:	f8 0e       	add	r15, r24
    26b8:	f3 0e       	add	r15, r19
    26ba:	20 62       	ori	r18, 0x20	; 32
    26bc:	0c c0       	rjmp	.+24     	; 0x26d6 <vfprintf+0xd8>
    26be:	8e 32       	cpi	r24, 0x2E	; 46
    26c0:	21 f4       	brne	.+8      	; 0x26ca <vfprintf+0xcc>
    26c2:	26 fd       	sbrc	r18, 6
    26c4:	78 c1       	rjmp	.+752    	; 0x29b6 <vfprintf+0x3b8>
    26c6:	20 64       	ori	r18, 0x40	; 64
    26c8:	06 c0       	rjmp	.+12     	; 0x26d6 <vfprintf+0xd8>
    26ca:	8c 36       	cpi	r24, 0x6C	; 108
    26cc:	11 f4       	brne	.+4      	; 0x26d2 <vfprintf+0xd4>
    26ce:	20 68       	ori	r18, 0x80	; 128
    26d0:	02 c0       	rjmp	.+4      	; 0x26d6 <vfprintf+0xd8>
    26d2:	88 36       	cpi	r24, 0x68	; 104
    26d4:	49 f4       	brne	.+18     	; 0x26e8 <vfprintf+0xea>
    26d6:	f1 01       	movw	r30, r2
    26d8:	93 fd       	sbrc	r25, 3
    26da:	85 91       	lpm	r24, Z+
    26dc:	93 ff       	sbrs	r25, 3
    26de:	81 91       	ld	r24, Z+
    26e0:	1f 01       	movw	r2, r30
    26e2:	88 23       	and	r24, r24
    26e4:	09 f0       	breq	.+2      	; 0x26e8 <vfprintf+0xea>
    26e6:	ba cf       	rjmp	.-140    	; 0x265c <vfprintf+0x5e>
    26e8:	98 2f       	mov	r25, r24
    26ea:	95 54       	subi	r25, 0x45	; 69
    26ec:	93 30       	cpi	r25, 0x03	; 3
    26ee:	18 f0       	brcs	.+6      	; 0x26f6 <vfprintf+0xf8>
    26f0:	90 52       	subi	r25, 0x20	; 32
    26f2:	93 30       	cpi	r25, 0x03	; 3
    26f4:	28 f4       	brcc	.+10     	; 0x2700 <vfprintf+0x102>
    26f6:	0c 5f       	subi	r16, 0xFC	; 252
    26f8:	1f 4f       	sbci	r17, 0xFF	; 255
    26fa:	ff e3       	ldi	r31, 0x3F	; 63
    26fc:	f9 83       	std	Y+1, r31	; 0x01
    26fe:	0d c0       	rjmp	.+26     	; 0x271a <vfprintf+0x11c>
    2700:	83 36       	cpi	r24, 0x63	; 99
    2702:	31 f0       	breq	.+12     	; 0x2710 <vfprintf+0x112>
    2704:	83 37       	cpi	r24, 0x73	; 115
    2706:	71 f0       	breq	.+28     	; 0x2724 <vfprintf+0x126>
    2708:	83 35       	cpi	r24, 0x53	; 83
    270a:	09 f0       	breq	.+2      	; 0x270e <vfprintf+0x110>
    270c:	60 c0       	rjmp	.+192    	; 0x27ce <vfprintf+0x1d0>
    270e:	22 c0       	rjmp	.+68     	; 0x2754 <vfprintf+0x156>
    2710:	f8 01       	movw	r30, r16
    2712:	80 81       	ld	r24, Z
    2714:	89 83       	std	Y+1, r24	; 0x01
    2716:	0e 5f       	subi	r16, 0xFE	; 254
    2718:	1f 4f       	sbci	r17, 0xFF	; 255
    271a:	42 01       	movw	r8, r4
    271c:	71 e0       	ldi	r23, 0x01	; 1
    271e:	a7 2e       	mov	r10, r23
    2720:	b1 2c       	mov	r11, r1
    2722:	16 c0       	rjmp	.+44     	; 0x2750 <vfprintf+0x152>
    2724:	62 e0       	ldi	r22, 0x02	; 2
    2726:	66 2e       	mov	r6, r22
    2728:	71 2c       	mov	r7, r1
    272a:	60 0e       	add	r6, r16
    272c:	71 1e       	adc	r7, r17
    272e:	f8 01       	movw	r30, r16
    2730:	80 80       	ld	r8, Z
    2732:	91 80       	ldd	r9, Z+1	; 0x01
    2734:	26 ff       	sbrs	r18, 6
    2736:	03 c0       	rjmp	.+6      	; 0x273e <vfprintf+0x140>
    2738:	6e 2d       	mov	r22, r14
    273a:	70 e0       	ldi	r23, 0x00	; 0
    273c:	02 c0       	rjmp	.+4      	; 0x2742 <vfprintf+0x144>
    273e:	6f ef       	ldi	r22, 0xFF	; 255
    2740:	7f ef       	ldi	r23, 0xFF	; 255
    2742:	c4 01       	movw	r24, r8
    2744:	2c 87       	std	Y+12, r18	; 0x0c
    2746:	0e 94 f1 14 	call	0x29e2	; 0x29e2 <strnlen>
    274a:	5c 01       	movw	r10, r24
    274c:	83 01       	movw	r16, r6
    274e:	2c 85       	ldd	r18, Y+12	; 0x0c
    2750:	2f 77       	andi	r18, 0x7F	; 127
    2752:	17 c0       	rjmp	.+46     	; 0x2782 <vfprintf+0x184>
    2754:	52 e0       	ldi	r21, 0x02	; 2
    2756:	65 2e       	mov	r6, r21
    2758:	71 2c       	mov	r7, r1
    275a:	60 0e       	add	r6, r16
    275c:	71 1e       	adc	r7, r17
    275e:	f8 01       	movw	r30, r16
    2760:	80 80       	ld	r8, Z
    2762:	91 80       	ldd	r9, Z+1	; 0x01
    2764:	26 ff       	sbrs	r18, 6
    2766:	03 c0       	rjmp	.+6      	; 0x276e <vfprintf+0x170>
    2768:	6e 2d       	mov	r22, r14
    276a:	70 e0       	ldi	r23, 0x00	; 0
    276c:	02 c0       	rjmp	.+4      	; 0x2772 <vfprintf+0x174>
    276e:	6f ef       	ldi	r22, 0xFF	; 255
    2770:	7f ef       	ldi	r23, 0xFF	; 255
    2772:	c4 01       	movw	r24, r8
    2774:	2c 87       	std	Y+12, r18	; 0x0c
    2776:	0e 94 e6 14 	call	0x29cc	; 0x29cc <strnlen_P>
    277a:	5c 01       	movw	r10, r24
    277c:	2c 85       	ldd	r18, Y+12	; 0x0c
    277e:	20 68       	ori	r18, 0x80	; 128
    2780:	83 01       	movw	r16, r6
    2782:	23 fd       	sbrc	r18, 3
    2784:	20 c0       	rjmp	.+64     	; 0x27c6 <vfprintf+0x1c8>
    2786:	08 c0       	rjmp	.+16     	; 0x2798 <vfprintf+0x19a>
    2788:	80 e2       	ldi	r24, 0x20	; 32
    278a:	90 e0       	ldi	r25, 0x00	; 0
    278c:	b6 01       	movw	r22, r12
    278e:	2c 87       	std	Y+12, r18	; 0x0c
    2790:	0e 94 fc 14 	call	0x29f8	; 0x29f8 <fputc>
    2794:	fa 94       	dec	r15
    2796:	2c 85       	ldd	r18, Y+12	; 0x0c
    2798:	8f 2d       	mov	r24, r15
    279a:	90 e0       	ldi	r25, 0x00	; 0
    279c:	a8 16       	cp	r10, r24
    279e:	b9 06       	cpc	r11, r25
    27a0:	98 f3       	brcs	.-26     	; 0x2788 <vfprintf+0x18a>
    27a2:	11 c0       	rjmp	.+34     	; 0x27c6 <vfprintf+0x1c8>
    27a4:	f4 01       	movw	r30, r8
    27a6:	27 fd       	sbrc	r18, 7
    27a8:	85 91       	lpm	r24, Z+
    27aa:	27 ff       	sbrs	r18, 7
    27ac:	81 91       	ld	r24, Z+
    27ae:	4f 01       	movw	r8, r30
    27b0:	90 e0       	ldi	r25, 0x00	; 0
    27b2:	b6 01       	movw	r22, r12
    27b4:	2c 87       	std	Y+12, r18	; 0x0c
    27b6:	0e 94 fc 14 	call	0x29f8	; 0x29f8 <fputc>
    27ba:	2c 85       	ldd	r18, Y+12	; 0x0c
    27bc:	f1 10       	cpse	r15, r1
    27be:	fa 94       	dec	r15
    27c0:	08 94       	sec
    27c2:	a1 08       	sbc	r10, r1
    27c4:	b1 08       	sbc	r11, r1
    27c6:	a1 14       	cp	r10, r1
    27c8:	b1 04       	cpc	r11, r1
    27ca:	61 f7       	brne	.-40     	; 0x27a4 <vfprintf+0x1a6>
    27cc:	f1 c0       	rjmp	.+482    	; 0x29b0 <vfprintf+0x3b2>
    27ce:	84 36       	cpi	r24, 0x64	; 100
    27d0:	11 f0       	breq	.+4      	; 0x27d6 <vfprintf+0x1d8>
    27d2:	89 36       	cpi	r24, 0x69	; 105
    27d4:	49 f5       	brne	.+82     	; 0x2828 <vfprintf+0x22a>
    27d6:	27 ff       	sbrs	r18, 7
    27d8:	08 c0       	rjmp	.+16     	; 0x27ea <vfprintf+0x1ec>
    27da:	f8 01       	movw	r30, r16
    27dc:	60 81       	ld	r22, Z
    27de:	71 81       	ldd	r23, Z+1	; 0x01
    27e0:	82 81       	ldd	r24, Z+2	; 0x02
    27e2:	93 81       	ldd	r25, Z+3	; 0x03
    27e4:	0c 5f       	subi	r16, 0xFC	; 252
    27e6:	1f 4f       	sbci	r17, 0xFF	; 255
    27e8:	09 c0       	rjmp	.+18     	; 0x27fc <vfprintf+0x1fe>
    27ea:	f8 01       	movw	r30, r16
    27ec:	60 81       	ld	r22, Z
    27ee:	71 81       	ldd	r23, Z+1	; 0x01
    27f0:	88 27       	eor	r24, r24
    27f2:	77 fd       	sbrc	r23, 7
    27f4:	80 95       	com	r24
    27f6:	98 2f       	mov	r25, r24
    27f8:	0e 5f       	subi	r16, 0xFE	; 254
    27fa:	1f 4f       	sbci	r17, 0xFF	; 255
    27fc:	4f e6       	ldi	r20, 0x6F	; 111
    27fe:	b4 2e       	mov	r11, r20
    2800:	b2 22       	and	r11, r18
    2802:	97 ff       	sbrs	r25, 7
    2804:	09 c0       	rjmp	.+18     	; 0x2818 <vfprintf+0x21a>
    2806:	90 95       	com	r25
    2808:	80 95       	com	r24
    280a:	70 95       	com	r23
    280c:	61 95       	neg	r22
    280e:	7f 4f       	sbci	r23, 0xFF	; 255
    2810:	8f 4f       	sbci	r24, 0xFF	; 255
    2812:	9f 4f       	sbci	r25, 0xFF	; 255
    2814:	f0 e8       	ldi	r31, 0x80	; 128
    2816:	bf 2a       	or	r11, r31
    2818:	a2 01       	movw	r20, r4
    281a:	2a e0       	ldi	r18, 0x0A	; 10
    281c:	30 e0       	ldi	r19, 0x00	; 0
    281e:	0e 94 28 15 	call	0x2a50	; 0x2a50 <__ultoa_invert>
    2822:	78 2e       	mov	r7, r24
    2824:	74 18       	sub	r7, r4
    2826:	45 c0       	rjmp	.+138    	; 0x28b2 <vfprintf+0x2b4>
    2828:	85 37       	cpi	r24, 0x75	; 117
    282a:	31 f4       	brne	.+12     	; 0x2838 <vfprintf+0x23a>
    282c:	3f ee       	ldi	r19, 0xEF	; 239
    282e:	b3 2e       	mov	r11, r19
    2830:	b2 22       	and	r11, r18
    2832:	2a e0       	ldi	r18, 0x0A	; 10
    2834:	30 e0       	ldi	r19, 0x00	; 0
    2836:	25 c0       	rjmp	.+74     	; 0x2882 <vfprintf+0x284>
    2838:	99 ef       	ldi	r25, 0xF9	; 249
    283a:	b9 2e       	mov	r11, r25
    283c:	b2 22       	and	r11, r18
    283e:	8f 36       	cpi	r24, 0x6F	; 111
    2840:	c1 f0       	breq	.+48     	; 0x2872 <vfprintf+0x274>
    2842:	80 37       	cpi	r24, 0x70	; 112
    2844:	20 f4       	brcc	.+8      	; 0x284e <vfprintf+0x250>
    2846:	88 35       	cpi	r24, 0x58	; 88
    2848:	09 f0       	breq	.+2      	; 0x284c <vfprintf+0x24e>
    284a:	b5 c0       	rjmp	.+362    	; 0x29b6 <vfprintf+0x3b8>
    284c:	0d c0       	rjmp	.+26     	; 0x2868 <vfprintf+0x26a>
    284e:	80 37       	cpi	r24, 0x70	; 112
    2850:	21 f0       	breq	.+8      	; 0x285a <vfprintf+0x25c>
    2852:	88 37       	cpi	r24, 0x78	; 120
    2854:	09 f0       	breq	.+2      	; 0x2858 <vfprintf+0x25a>
    2856:	af c0       	rjmp	.+350    	; 0x29b6 <vfprintf+0x3b8>
    2858:	02 c0       	rjmp	.+4      	; 0x285e <vfprintf+0x260>
    285a:	20 e1       	ldi	r18, 0x10	; 16
    285c:	b2 2a       	or	r11, r18
    285e:	b4 fe       	sbrs	r11, 4
    2860:	0b c0       	rjmp	.+22     	; 0x2878 <vfprintf+0x27a>
    2862:	84 e0       	ldi	r24, 0x04	; 4
    2864:	b8 2a       	or	r11, r24
    2866:	08 c0       	rjmp	.+16     	; 0x2878 <vfprintf+0x27a>
    2868:	b4 fe       	sbrs	r11, 4
    286a:	09 c0       	rjmp	.+18     	; 0x287e <vfprintf+0x280>
    286c:	e6 e0       	ldi	r30, 0x06	; 6
    286e:	be 2a       	or	r11, r30
    2870:	06 c0       	rjmp	.+12     	; 0x287e <vfprintf+0x280>
    2872:	28 e0       	ldi	r18, 0x08	; 8
    2874:	30 e0       	ldi	r19, 0x00	; 0
    2876:	05 c0       	rjmp	.+10     	; 0x2882 <vfprintf+0x284>
    2878:	20 e1       	ldi	r18, 0x10	; 16
    287a:	30 e0       	ldi	r19, 0x00	; 0
    287c:	02 c0       	rjmp	.+4      	; 0x2882 <vfprintf+0x284>
    287e:	20 e1       	ldi	r18, 0x10	; 16
    2880:	32 e0       	ldi	r19, 0x02	; 2
    2882:	b7 fe       	sbrs	r11, 7
    2884:	08 c0       	rjmp	.+16     	; 0x2896 <vfprintf+0x298>
    2886:	f8 01       	movw	r30, r16
    2888:	60 81       	ld	r22, Z
    288a:	71 81       	ldd	r23, Z+1	; 0x01
    288c:	82 81       	ldd	r24, Z+2	; 0x02
    288e:	93 81       	ldd	r25, Z+3	; 0x03
    2890:	0c 5f       	subi	r16, 0xFC	; 252
    2892:	1f 4f       	sbci	r17, 0xFF	; 255
    2894:	07 c0       	rjmp	.+14     	; 0x28a4 <vfprintf+0x2a6>
    2896:	f8 01       	movw	r30, r16
    2898:	60 81       	ld	r22, Z
    289a:	71 81       	ldd	r23, Z+1	; 0x01
    289c:	80 e0       	ldi	r24, 0x00	; 0
    289e:	90 e0       	ldi	r25, 0x00	; 0
    28a0:	0e 5f       	subi	r16, 0xFE	; 254
    28a2:	1f 4f       	sbci	r17, 0xFF	; 255
    28a4:	a2 01       	movw	r20, r4
    28a6:	0e 94 28 15 	call	0x2a50	; 0x2a50 <__ultoa_invert>
    28aa:	78 2e       	mov	r7, r24
    28ac:	74 18       	sub	r7, r4
    28ae:	ff e7       	ldi	r31, 0x7F	; 127
    28b0:	bf 22       	and	r11, r31
    28b2:	b6 fe       	sbrs	r11, 6
    28b4:	0b c0       	rjmp	.+22     	; 0x28cc <vfprintf+0x2ce>
    28b6:	2e ef       	ldi	r18, 0xFE	; 254
    28b8:	b2 22       	and	r11, r18
    28ba:	7e 14       	cp	r7, r14
    28bc:	38 f4       	brcc	.+14     	; 0x28cc <vfprintf+0x2ce>
    28be:	b4 fe       	sbrs	r11, 4
    28c0:	07 c0       	rjmp	.+14     	; 0x28d0 <vfprintf+0x2d2>
    28c2:	b2 fc       	sbrc	r11, 2
    28c4:	05 c0       	rjmp	.+10     	; 0x28d0 <vfprintf+0x2d2>
    28c6:	8f ee       	ldi	r24, 0xEF	; 239
    28c8:	b8 22       	and	r11, r24
    28ca:	02 c0       	rjmp	.+4      	; 0x28d0 <vfprintf+0x2d2>
    28cc:	a7 2c       	mov	r10, r7
    28ce:	01 c0       	rjmp	.+2      	; 0x28d2 <vfprintf+0x2d4>
    28d0:	ae 2c       	mov	r10, r14
    28d2:	8b 2d       	mov	r24, r11
    28d4:	90 e0       	ldi	r25, 0x00	; 0
    28d6:	b4 fe       	sbrs	r11, 4
    28d8:	0d c0       	rjmp	.+26     	; 0x28f4 <vfprintf+0x2f6>
    28da:	fe 01       	movw	r30, r28
    28dc:	e7 0d       	add	r30, r7
    28de:	f1 1d       	adc	r31, r1
    28e0:	20 81       	ld	r18, Z
    28e2:	20 33       	cpi	r18, 0x30	; 48
    28e4:	19 f4       	brne	.+6      	; 0x28ec <vfprintf+0x2ee>
    28e6:	e9 ee       	ldi	r30, 0xE9	; 233
    28e8:	be 22       	and	r11, r30
    28ea:	09 c0       	rjmp	.+18     	; 0x28fe <vfprintf+0x300>
    28ec:	a3 94       	inc	r10
    28ee:	b2 fe       	sbrs	r11, 2
    28f0:	06 c0       	rjmp	.+12     	; 0x28fe <vfprintf+0x300>
    28f2:	04 c0       	rjmp	.+8      	; 0x28fc <vfprintf+0x2fe>
    28f4:	86 78       	andi	r24, 0x86	; 134
    28f6:	90 70       	andi	r25, 0x00	; 0
    28f8:	00 97       	sbiw	r24, 0x00	; 0
    28fa:	09 f0       	breq	.+2      	; 0x28fe <vfprintf+0x300>
    28fc:	a3 94       	inc	r10
    28fe:	8b 2c       	mov	r8, r11
    2900:	99 24       	eor	r9, r9
    2902:	b3 fc       	sbrc	r11, 3
    2904:	14 c0       	rjmp	.+40     	; 0x292e <vfprintf+0x330>
    2906:	b0 fe       	sbrs	r11, 0
    2908:	0f c0       	rjmp	.+30     	; 0x2928 <vfprintf+0x32a>
    290a:	af 14       	cp	r10, r15
    290c:	28 f4       	brcc	.+10     	; 0x2918 <vfprintf+0x31a>
    290e:	e7 2c       	mov	r14, r7
    2910:	ef 0c       	add	r14, r15
    2912:	ea 18       	sub	r14, r10
    2914:	af 2c       	mov	r10, r15
    2916:	08 c0       	rjmp	.+16     	; 0x2928 <vfprintf+0x32a>
    2918:	e7 2c       	mov	r14, r7
    291a:	06 c0       	rjmp	.+12     	; 0x2928 <vfprintf+0x32a>
    291c:	80 e2       	ldi	r24, 0x20	; 32
    291e:	90 e0       	ldi	r25, 0x00	; 0
    2920:	b6 01       	movw	r22, r12
    2922:	0e 94 fc 14 	call	0x29f8	; 0x29f8 <fputc>
    2926:	a3 94       	inc	r10
    2928:	af 14       	cp	r10, r15
    292a:	c0 f3       	brcs	.-16     	; 0x291c <vfprintf+0x31e>
    292c:	04 c0       	rjmp	.+8      	; 0x2936 <vfprintf+0x338>
    292e:	af 14       	cp	r10, r15
    2930:	10 f4       	brcc	.+4      	; 0x2936 <vfprintf+0x338>
    2932:	fa 18       	sub	r15, r10
    2934:	01 c0       	rjmp	.+2      	; 0x2938 <vfprintf+0x33a>
    2936:	ff 24       	eor	r15, r15
    2938:	84 fe       	sbrs	r8, 4
    293a:	0f c0       	rjmp	.+30     	; 0x295a <vfprintf+0x35c>
    293c:	80 e3       	ldi	r24, 0x30	; 48
    293e:	90 e0       	ldi	r25, 0x00	; 0
    2940:	b6 01       	movw	r22, r12
    2942:	0e 94 fc 14 	call	0x29f8	; 0x29f8 <fputc>
    2946:	82 fe       	sbrs	r8, 2
    2948:	1f c0       	rjmp	.+62     	; 0x2988 <vfprintf+0x38a>
    294a:	81 fe       	sbrs	r8, 1
    294c:	03 c0       	rjmp	.+6      	; 0x2954 <vfprintf+0x356>
    294e:	88 e5       	ldi	r24, 0x58	; 88
    2950:	90 e0       	ldi	r25, 0x00	; 0
    2952:	10 c0       	rjmp	.+32     	; 0x2974 <vfprintf+0x376>
    2954:	88 e7       	ldi	r24, 0x78	; 120
    2956:	90 e0       	ldi	r25, 0x00	; 0
    2958:	0d c0       	rjmp	.+26     	; 0x2974 <vfprintf+0x376>
    295a:	c4 01       	movw	r24, r8
    295c:	86 78       	andi	r24, 0x86	; 134
    295e:	90 70       	andi	r25, 0x00	; 0
    2960:	00 97       	sbiw	r24, 0x00	; 0
    2962:	91 f0       	breq	.+36     	; 0x2988 <vfprintf+0x38a>
    2964:	81 fc       	sbrc	r8, 1
    2966:	02 c0       	rjmp	.+4      	; 0x296c <vfprintf+0x36e>
    2968:	80 e2       	ldi	r24, 0x20	; 32
    296a:	01 c0       	rjmp	.+2      	; 0x296e <vfprintf+0x370>
    296c:	8b e2       	ldi	r24, 0x2B	; 43
    296e:	b7 fc       	sbrc	r11, 7
    2970:	8d e2       	ldi	r24, 0x2D	; 45
    2972:	90 e0       	ldi	r25, 0x00	; 0
    2974:	b6 01       	movw	r22, r12
    2976:	0e 94 fc 14 	call	0x29f8	; 0x29f8 <fputc>
    297a:	06 c0       	rjmp	.+12     	; 0x2988 <vfprintf+0x38a>
    297c:	80 e3       	ldi	r24, 0x30	; 48
    297e:	90 e0       	ldi	r25, 0x00	; 0
    2980:	b6 01       	movw	r22, r12
    2982:	0e 94 fc 14 	call	0x29f8	; 0x29f8 <fputc>
    2986:	ea 94       	dec	r14
    2988:	7e 14       	cp	r7, r14
    298a:	c0 f3       	brcs	.-16     	; 0x297c <vfprintf+0x37e>
    298c:	7a 94       	dec	r7
    298e:	f2 01       	movw	r30, r4
    2990:	e7 0d       	add	r30, r7
    2992:	f1 1d       	adc	r31, r1
    2994:	80 81       	ld	r24, Z
    2996:	90 e0       	ldi	r25, 0x00	; 0
    2998:	b6 01       	movw	r22, r12
    299a:	0e 94 fc 14 	call	0x29f8	; 0x29f8 <fputc>
    299e:	77 20       	and	r7, r7
    29a0:	a9 f7       	brne	.-22     	; 0x298c <vfprintf+0x38e>
    29a2:	06 c0       	rjmp	.+12     	; 0x29b0 <vfprintf+0x3b2>
    29a4:	80 e2       	ldi	r24, 0x20	; 32
    29a6:	90 e0       	ldi	r25, 0x00	; 0
    29a8:	b6 01       	movw	r22, r12
    29aa:	0e 94 fc 14 	call	0x29f8	; 0x29f8 <fputc>
    29ae:	fa 94       	dec	r15
    29b0:	ff 20       	and	r15, r15
    29b2:	c1 f7       	brne	.-16     	; 0x29a4 <vfprintf+0x3a6>
    29b4:	37 ce       	rjmp	.-914    	; 0x2624 <vfprintf+0x26>
    29b6:	f6 01       	movw	r30, r12
    29b8:	26 81       	ldd	r18, Z+6	; 0x06
    29ba:	37 81       	ldd	r19, Z+7	; 0x07
    29bc:	02 c0       	rjmp	.+4      	; 0x29c2 <vfprintf+0x3c4>
    29be:	2f ef       	ldi	r18, 0xFF	; 255
    29c0:	3f ef       	ldi	r19, 0xFF	; 255
    29c2:	c9 01       	movw	r24, r18
    29c4:	2c 96       	adiw	r28, 0x0c	; 12
    29c6:	e2 e1       	ldi	r30, 0x12	; 18
    29c8:	0c 94 c1 12 	jmp	0x2582	; 0x2582 <__epilogue_restores__>

000029cc <strnlen_P>:
    29cc:	fc 01       	movw	r30, r24
    29ce:	05 90       	lpm	r0, Z+
    29d0:	61 50       	subi	r22, 0x01	; 1
    29d2:	70 40       	sbci	r23, 0x00	; 0
    29d4:	01 10       	cpse	r0, r1
    29d6:	d8 f7       	brcc	.-10     	; 0x29ce <strnlen_P+0x2>
    29d8:	80 95       	com	r24
    29da:	90 95       	com	r25
    29dc:	8e 0f       	add	r24, r30
    29de:	9f 1f       	adc	r25, r31
    29e0:	08 95       	ret

000029e2 <strnlen>:
    29e2:	fc 01       	movw	r30, r24
    29e4:	61 50       	subi	r22, 0x01	; 1
    29e6:	70 40       	sbci	r23, 0x00	; 0
    29e8:	01 90       	ld	r0, Z+
    29ea:	01 10       	cpse	r0, r1
    29ec:	d8 f7       	brcc	.-10     	; 0x29e4 <strnlen+0x2>
    29ee:	80 95       	com	r24
    29f0:	90 95       	com	r25
    29f2:	8e 0f       	add	r24, r30
    29f4:	9f 1f       	adc	r25, r31
    29f6:	08 95       	ret

000029f8 <fputc>:
    29f8:	0f 93       	push	r16
    29fa:	1f 93       	push	r17
    29fc:	cf 93       	push	r28
    29fe:	df 93       	push	r29
    2a00:	8c 01       	movw	r16, r24
    2a02:	eb 01       	movw	r28, r22
    2a04:	8b 81       	ldd	r24, Y+3	; 0x03
    2a06:	81 ff       	sbrs	r24, 1
    2a08:	1b c0       	rjmp	.+54     	; 0x2a40 <fputc+0x48>
    2a0a:	82 ff       	sbrs	r24, 2
    2a0c:	0d c0       	rjmp	.+26     	; 0x2a28 <fputc+0x30>
    2a0e:	2e 81       	ldd	r18, Y+6	; 0x06
    2a10:	3f 81       	ldd	r19, Y+7	; 0x07
    2a12:	8c 81       	ldd	r24, Y+4	; 0x04
    2a14:	9d 81       	ldd	r25, Y+5	; 0x05
    2a16:	28 17       	cp	r18, r24
    2a18:	39 07       	cpc	r19, r25
    2a1a:	64 f4       	brge	.+24     	; 0x2a34 <fputc+0x3c>
    2a1c:	e8 81       	ld	r30, Y
    2a1e:	f9 81       	ldd	r31, Y+1	; 0x01
    2a20:	01 93       	st	Z+, r16
    2a22:	f9 83       	std	Y+1, r31	; 0x01
    2a24:	e8 83       	st	Y, r30
    2a26:	06 c0       	rjmp	.+12     	; 0x2a34 <fputc+0x3c>
    2a28:	e8 85       	ldd	r30, Y+8	; 0x08
    2a2a:	f9 85       	ldd	r31, Y+9	; 0x09
    2a2c:	80 2f       	mov	r24, r16
    2a2e:	09 95       	icall
    2a30:	00 97       	sbiw	r24, 0x00	; 0
    2a32:	31 f4       	brne	.+12     	; 0x2a40 <fputc+0x48>
    2a34:	8e 81       	ldd	r24, Y+6	; 0x06
    2a36:	9f 81       	ldd	r25, Y+7	; 0x07
    2a38:	01 96       	adiw	r24, 0x01	; 1
    2a3a:	9f 83       	std	Y+7, r25	; 0x07
    2a3c:	8e 83       	std	Y+6, r24	; 0x06
    2a3e:	02 c0       	rjmp	.+4      	; 0x2a44 <fputc+0x4c>
    2a40:	0f ef       	ldi	r16, 0xFF	; 255
    2a42:	1f ef       	ldi	r17, 0xFF	; 255
    2a44:	c8 01       	movw	r24, r16
    2a46:	df 91       	pop	r29
    2a48:	cf 91       	pop	r28
    2a4a:	1f 91       	pop	r17
    2a4c:	0f 91       	pop	r16
    2a4e:	08 95       	ret

00002a50 <__ultoa_invert>:
    2a50:	fa 01       	movw	r30, r20
    2a52:	aa 27       	eor	r26, r26
    2a54:	28 30       	cpi	r18, 0x08	; 8
    2a56:	51 f1       	breq	.+84     	; 0x2aac <__ultoa_invert+0x5c>
    2a58:	20 31       	cpi	r18, 0x10	; 16
    2a5a:	81 f1       	breq	.+96     	; 0x2abc <__ultoa_invert+0x6c>
    2a5c:	e8 94       	clt
    2a5e:	6f 93       	push	r22
    2a60:	6e 7f       	andi	r22, 0xFE	; 254
    2a62:	6e 5f       	subi	r22, 0xFE	; 254
    2a64:	7f 4f       	sbci	r23, 0xFF	; 255
    2a66:	8f 4f       	sbci	r24, 0xFF	; 255
    2a68:	9f 4f       	sbci	r25, 0xFF	; 255
    2a6a:	af 4f       	sbci	r26, 0xFF	; 255
    2a6c:	b1 e0       	ldi	r27, 0x01	; 1
    2a6e:	3e d0       	rcall	.+124    	; 0x2aec <__ultoa_invert+0x9c>
    2a70:	b4 e0       	ldi	r27, 0x04	; 4
    2a72:	3c d0       	rcall	.+120    	; 0x2aec <__ultoa_invert+0x9c>
    2a74:	67 0f       	add	r22, r23
    2a76:	78 1f       	adc	r23, r24
    2a78:	89 1f       	adc	r24, r25
    2a7a:	9a 1f       	adc	r25, r26
    2a7c:	a1 1d       	adc	r26, r1
    2a7e:	68 0f       	add	r22, r24
    2a80:	79 1f       	adc	r23, r25
    2a82:	8a 1f       	adc	r24, r26
    2a84:	91 1d       	adc	r25, r1
    2a86:	a1 1d       	adc	r26, r1
    2a88:	6a 0f       	add	r22, r26
    2a8a:	71 1d       	adc	r23, r1
    2a8c:	81 1d       	adc	r24, r1
    2a8e:	91 1d       	adc	r25, r1
    2a90:	a1 1d       	adc	r26, r1
    2a92:	20 d0       	rcall	.+64     	; 0x2ad4 <__ultoa_invert+0x84>
    2a94:	09 f4       	brne	.+2      	; 0x2a98 <__ultoa_invert+0x48>
    2a96:	68 94       	set
    2a98:	3f 91       	pop	r19
    2a9a:	2a e0       	ldi	r18, 0x0A	; 10
    2a9c:	26 9f       	mul	r18, r22
    2a9e:	11 24       	eor	r1, r1
    2aa0:	30 19       	sub	r19, r0
    2aa2:	30 5d       	subi	r19, 0xD0	; 208
    2aa4:	31 93       	st	Z+, r19
    2aa6:	de f6       	brtc	.-74     	; 0x2a5e <__ultoa_invert+0xe>
    2aa8:	cf 01       	movw	r24, r30
    2aaa:	08 95       	ret
    2aac:	46 2f       	mov	r20, r22
    2aae:	47 70       	andi	r20, 0x07	; 7
    2ab0:	40 5d       	subi	r20, 0xD0	; 208
    2ab2:	41 93       	st	Z+, r20
    2ab4:	b3 e0       	ldi	r27, 0x03	; 3
    2ab6:	0f d0       	rcall	.+30     	; 0x2ad6 <__ultoa_invert+0x86>
    2ab8:	c9 f7       	brne	.-14     	; 0x2aac <__ultoa_invert+0x5c>
    2aba:	f6 cf       	rjmp	.-20     	; 0x2aa8 <__ultoa_invert+0x58>
    2abc:	46 2f       	mov	r20, r22
    2abe:	4f 70       	andi	r20, 0x0F	; 15
    2ac0:	40 5d       	subi	r20, 0xD0	; 208
    2ac2:	4a 33       	cpi	r20, 0x3A	; 58
    2ac4:	18 f0       	brcs	.+6      	; 0x2acc <__ultoa_invert+0x7c>
    2ac6:	49 5d       	subi	r20, 0xD9	; 217
    2ac8:	31 fd       	sbrc	r19, 1
    2aca:	40 52       	subi	r20, 0x20	; 32
    2acc:	41 93       	st	Z+, r20
    2ace:	02 d0       	rcall	.+4      	; 0x2ad4 <__ultoa_invert+0x84>
    2ad0:	a9 f7       	brne	.-22     	; 0x2abc <__ultoa_invert+0x6c>
    2ad2:	ea cf       	rjmp	.-44     	; 0x2aa8 <__ultoa_invert+0x58>
    2ad4:	b4 e0       	ldi	r27, 0x04	; 4
    2ad6:	a6 95       	lsr	r26
    2ad8:	97 95       	ror	r25
    2ada:	87 95       	ror	r24
    2adc:	77 95       	ror	r23
    2ade:	67 95       	ror	r22
    2ae0:	ba 95       	dec	r27
    2ae2:	c9 f7       	brne	.-14     	; 0x2ad6 <__ultoa_invert+0x86>
    2ae4:	00 97       	sbiw	r24, 0x00	; 0
    2ae6:	61 05       	cpc	r22, r1
    2ae8:	71 05       	cpc	r23, r1
    2aea:	08 95       	ret
    2aec:	9b 01       	movw	r18, r22
    2aee:	ac 01       	movw	r20, r24
    2af0:	0a 2e       	mov	r0, r26
    2af2:	06 94       	lsr	r0
    2af4:	57 95       	ror	r21
    2af6:	47 95       	ror	r20
    2af8:	37 95       	ror	r19
    2afa:	27 95       	ror	r18
    2afc:	ba 95       	dec	r27
    2afe:	c9 f7       	brne	.-14     	; 0x2af2 <__ultoa_invert+0xa2>
    2b00:	62 0f       	add	r22, r18
    2b02:	73 1f       	adc	r23, r19
    2b04:	84 1f       	adc	r24, r20
    2b06:	95 1f       	adc	r25, r21
    2b08:	a0 1d       	adc	r26, r0
    2b0a:	08 95       	ret

00002b0c <_exit>:
    2b0c:	f8 94       	cli

00002b0e <__stop_program>:
    2b0e:	ff cf       	rjmp	.-2      	; 0x2b0e <__stop_program>
