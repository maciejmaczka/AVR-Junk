
bin/Debug/7LED2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000019d4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  000019d4  00001a48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001284  00000000  00000000  00001b50  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000089c  00000000  00000000  00002dd4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 ed       	ldi	r30, 0xD4	; 212
      68:	f9 e1       	ldi	r31, 0x19	; 25
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 41 00 	call	0x82	; 0x82 <main>
      7a:	0c 94 e8 0c 	jmp	0x19d0	; 0x19d0 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:


int cyfra(int _cyfra);

int main(void)
{
      82:	0f 93       	push	r16
      84:	1f 93       	push	r17
      86:	df 93       	push	r29
      88:	cf 93       	push	r28
      8a:	cd b7       	in	r28, 0x3d	; 61
      8c:	de b7       	in	r29, 0x3e	; 62
      8e:	c4 57       	subi	r28, 0x74	; 116
      90:	d0 40       	sbci	r29, 0x00	; 0
      92:	0f b6       	in	r0, 0x3f	; 63
      94:	f8 94       	cli
      96:	de bf       	out	0x3e, r29	; 62
      98:	0f be       	out	0x3f, r0	; 63
      9a:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF;
      9c:	87 e3       	ldi	r24, 0x37	; 55
      9e:	90 e0       	ldi	r25, 0x00	; 0
      a0:	2f ef       	ldi	r18, 0xFF	; 255
      a2:	fc 01       	movw	r30, r24
      a4:	20 83       	st	Z, r18
	DDRA = 0xFF;
      a6:	8a e3       	ldi	r24, 0x3A	; 58
      a8:	90 e0       	ldi	r25, 0x00	; 0
      aa:	2f ef       	ldi	r18, 0xFF	; 255
      ac:	fc 01       	movw	r30, r24
      ae:	20 83       	st	Z, r18

    int liczba = 1;
      b0:	81 e0       	ldi	r24, 0x01	; 1
      b2:	90 e0       	ldi	r25, 0x00	; 0
      b4:	9a 83       	std	Y+2, r25	; 0x02
      b6:	89 83       	std	Y+1, r24	; 0x01
    int liczba1 = 0;
      b8:	1c 82       	std	Y+4, r1	; 0x04
      ba:	1b 82       	std	Y+3, r1	; 0x03
    int liczba2 = 0;
      bc:	1e 82       	std	Y+6, r1	; 0x06
      be:	1d 82       	std	Y+5, r1	; 0x05
    int liczba3 = 0;
      c0:	18 86       	std	Y+8, r1	; 0x08
      c2:	1f 82       	std	Y+7, r1	; 0x07
    int liczba4 = 0;
      c4:	1a 86       	std	Y+10, r1	; 0x0a
      c6:	19 86       	std	Y+9, r1	; 0x09

    int short_deley = 20;
      c8:	84 e1       	ldi	r24, 0x14	; 20
      ca:	90 e0       	ldi	r25, 0x00	; 0
      cc:	9a 8b       	std	Y+18, r25	; 0x12
      ce:	89 8b       	std	Y+17, r24	; 0x11
    int switch_counter = 0;
      d0:	1c 86       	std	Y+12, r1	; 0x0c
      d2:	1b 86       	std	Y+11, r1	; 0x0b
    int inc_counter = 0;
      d4:	1e 86       	std	Y+14, r1	; 0x0e
      d6:	1d 86       	std	Y+13, r1	; 0x0d
    // Insert code

    int sterowanie = 0b11111110;
      d8:	8e ef       	ldi	r24, 0xFE	; 254
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	9c 8b       	std	Y+20, r25	; 0x14
      de:	8b 8b       	std	Y+19, r24	; 0x13

    while(1)
    {
        for (int i = 0 ; i < 4 ; i++)
      e0:	18 8a       	std	Y+16, r1	; 0x10
      e2:	1f 86       	std	Y+15, r1	; 0x0f
      e4:	38 c5       	rjmp	.+2672   	; 0xb56 <__stack+0x2f7>
        {

            PORTA = cyfra(liczba1);
      e6:	0b e3       	ldi	r16, 0x3B	; 59
      e8:	10 e0       	ldi	r17, 0x00	; 0
      ea:	8b 81       	ldd	r24, Y+3	; 0x03
      ec:	9c 81       	ldd	r25, Y+4	; 0x04
      ee:	0e 94 b2 05 	call	0xb64	; 0xb64 <cyfra>
      f2:	f8 01       	movw	r30, r16
      f4:	80 83       	st	Z, r24
            wys1;
      f6:	88 e3       	ldi	r24, 0x38	; 56
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	2e ef       	ldi	r18, 0xFE	; 254
      fc:	fc 01       	movw	r30, r24
      fe:	20 83       	st	Z, r18
            _delay_us(short_deley);
     100:	89 89       	ldd	r24, Y+17	; 0x11
     102:	9a 89       	ldd	r25, Y+18	; 0x12
     104:	aa 27       	eor	r26, r26
     106:	97 fd       	sbrc	r25, 7
     108:	a0 95       	com	r26
     10a:	ba 2f       	mov	r27, r26
     10c:	bc 01       	movw	r22, r24
     10e:	cd 01       	movw	r24, r26
     110:	0e 94 15 0a 	call	0x142a	; 0x142a <__floatsisf>
     114:	dc 01       	movw	r26, r24
     116:	cb 01       	movw	r24, r22
     118:	8d 8b       	std	Y+21, r24	; 0x15
     11a:	9e 8b       	std	Y+22, r25	; 0x16
     11c:	af 8b       	std	Y+23, r26	; 0x17
     11e:	b8 8f       	std	Y+24, r27	; 0x18
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     120:	6d 89       	ldd	r22, Y+21	; 0x15
     122:	7e 89       	ldd	r23, Y+22	; 0x16
     124:	8f 89       	ldd	r24, Y+23	; 0x17
     126:	98 8d       	ldd	r25, Y+24	; 0x18
     128:	2b ea       	ldi	r18, 0xAB	; 171
     12a:	3a ea       	ldi	r19, 0xAA	; 170
     12c:	4a ea       	ldi	r20, 0xAA	; 170
     12e:	50 e4       	ldi	r21, 0x40	; 64
     130:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     134:	dc 01       	movw	r26, r24
     136:	cb 01       	movw	r24, r22
     138:	89 8f       	std	Y+25, r24	; 0x19
     13a:	9a 8f       	std	Y+26, r25	; 0x1a
     13c:	ab 8f       	std	Y+27, r26	; 0x1b
     13e:	bc 8f       	std	Y+28, r27	; 0x1c
	if (__tmp < 1.0)
     140:	11 e0       	ldi	r17, 0x01	; 1
     142:	69 8d       	ldd	r22, Y+25	; 0x19
     144:	7a 8d       	ldd	r23, Y+26	; 0x1a
     146:	8b 8d       	ldd	r24, Y+27	; 0x1b
     148:	9c 8d       	ldd	r25, Y+28	; 0x1c
     14a:	20 e0       	ldi	r18, 0x00	; 0
     14c:	30 e0       	ldi	r19, 0x00	; 0
     14e:	40 e8       	ldi	r20, 0x80	; 128
     150:	5f e3       	ldi	r21, 0x3F	; 63
     152:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__ltsf2>
     156:	88 23       	and	r24, r24
     158:	0c f0       	brlt	.+2      	; 0x15c <main+0xda>
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	11 23       	and	r17, r17
     15e:	19 f0       	breq	.+6      	; 0x166 <main+0xe4>
		__ticks = 1;
     160:	81 e0       	ldi	r24, 0x01	; 1
     162:	8d 8f       	std	Y+29, r24	; 0x1d
     164:	a3 c0       	rjmp	.+326    	; 0x2ac <main+0x22a>
	else if (__tmp > 255)
     166:	11 e0       	ldi	r17, 0x01	; 1
     168:	69 8d       	ldd	r22, Y+25	; 0x19
     16a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     16c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     16e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	30 e0       	ldi	r19, 0x00	; 0
     174:	4f e7       	ldi	r20, 0x7F	; 127
     176:	53 e4       	ldi	r21, 0x43	; 67
     178:	0e 94 85 09 	call	0x130a	; 0x130a <__gtsf2>
     17c:	18 16       	cp	r1, r24
     17e:	0c f0       	brlt	.+2      	; 0x182 <main+0x100>
     180:	10 e0       	ldi	r17, 0x00	; 0
     182:	11 23       	and	r17, r17
     184:	09 f4       	brne	.+2      	; 0x188 <main+0x106>
     186:	89 c0       	rjmp	.+274    	; 0x29a <main+0x218>
	{
		_delay_ms(__us / 1000.0);
     188:	6d 89       	ldd	r22, Y+21	; 0x15
     18a:	7e 89       	ldd	r23, Y+22	; 0x16
     18c:	8f 89       	ldd	r24, Y+23	; 0x17
     18e:	98 8d       	ldd	r25, Y+24	; 0x18
     190:	20 e0       	ldi	r18, 0x00	; 0
     192:	30 e0       	ldi	r19, 0x00	; 0
     194:	4a e7       	ldi	r20, 0x7A	; 122
     196:	54 e4       	ldi	r21, 0x44	; 68
     198:	0e 94 d7 08 	call	0x11ae	; 0x11ae <__divsf3>
     19c:	dc 01       	movw	r26, r24
     19e:	cb 01       	movw	r24, r22
     1a0:	8e 8f       	std	Y+30, r24	; 0x1e
     1a2:	9f 8f       	std	Y+31, r25	; 0x1f
     1a4:	a8 a3       	std	Y+32, r26	; 0x20
     1a6:	b9 a3       	std	Y+33, r27	; 0x21
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     1a8:	6e 8d       	ldd	r22, Y+30	; 0x1e
     1aa:	7f 8d       	ldd	r23, Y+31	; 0x1f
     1ac:	88 a1       	ldd	r24, Y+32	; 0x20
     1ae:	99 a1       	ldd	r25, Y+33	; 0x21
     1b0:	20 e0       	ldi	r18, 0x00	; 0
     1b2:	30 e0       	ldi	r19, 0x00	; 0
     1b4:	4a e7       	ldi	r20, 0x7A	; 122
     1b6:	55 e4       	ldi	r21, 0x45	; 69
     1b8:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     1bc:	dc 01       	movw	r26, r24
     1be:	cb 01       	movw	r24, r22
     1c0:	8a a3       	std	Y+34, r24	; 0x22
     1c2:	9b a3       	std	Y+35, r25	; 0x23
     1c4:	ac a3       	std	Y+36, r26	; 0x24
     1c6:	bd a3       	std	Y+37, r27	; 0x25
	if (__tmp < 1.0)
     1c8:	11 e0       	ldi	r17, 0x01	; 1
     1ca:	6a a1       	ldd	r22, Y+34	; 0x22
     1cc:	7b a1       	ldd	r23, Y+35	; 0x23
     1ce:	8c a1       	ldd	r24, Y+36	; 0x24
     1d0:	9d a1       	ldd	r25, Y+37	; 0x25
     1d2:	20 e0       	ldi	r18, 0x00	; 0
     1d4:	30 e0       	ldi	r19, 0x00	; 0
     1d6:	40 e8       	ldi	r20, 0x80	; 128
     1d8:	5f e3       	ldi	r21, 0x3F	; 63
     1da:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__ltsf2>
     1de:	88 23       	and	r24, r24
     1e0:	0c f0       	brlt	.+2      	; 0x1e4 <main+0x162>
     1e2:	10 e0       	ldi	r17, 0x00	; 0
     1e4:	11 23       	and	r17, r17
     1e6:	29 f0       	breq	.+10     	; 0x1f2 <main+0x170>
		__ticks = 1;
     1e8:	81 e0       	ldi	r24, 0x01	; 1
     1ea:	90 e0       	ldi	r25, 0x00	; 0
     1ec:	9f a3       	std	Y+39, r25	; 0x27
     1ee:	8e a3       	std	Y+38, r24	; 0x26
     1f0:	46 c0       	rjmp	.+140    	; 0x27e <main+0x1fc>
	else if (__tmp > 65535)
     1f2:	11 e0       	ldi	r17, 0x01	; 1
     1f4:	6a a1       	ldd	r22, Y+34	; 0x22
     1f6:	7b a1       	ldd	r23, Y+35	; 0x23
     1f8:	8c a1       	ldd	r24, Y+36	; 0x24
     1fa:	9d a1       	ldd	r25, Y+37	; 0x25
     1fc:	20 e0       	ldi	r18, 0x00	; 0
     1fe:	3f ef       	ldi	r19, 0xFF	; 255
     200:	4f e7       	ldi	r20, 0x7F	; 127
     202:	57 e4       	ldi	r21, 0x47	; 71
     204:	0e 94 85 09 	call	0x130a	; 0x130a <__gtsf2>
     208:	18 16       	cp	r1, r24
     20a:	0c f0       	brlt	.+2      	; 0x20e <main+0x18c>
     20c:	10 e0       	ldi	r17, 0x00	; 0
     20e:	11 23       	and	r17, r17
     210:	61 f1       	breq	.+88     	; 0x26a <main+0x1e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     212:	6e 8d       	ldd	r22, Y+30	; 0x1e
     214:	7f 8d       	ldd	r23, Y+31	; 0x1f
     216:	88 a1       	ldd	r24, Y+32	; 0x20
     218:	99 a1       	ldd	r25, Y+33	; 0x21
     21a:	20 e0       	ldi	r18, 0x00	; 0
     21c:	30 e0       	ldi	r19, 0x00	; 0
     21e:	40 e2       	ldi	r20, 0x20	; 32
     220:	51 e4       	ldi	r21, 0x41	; 65
     222:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     226:	dc 01       	movw	r26, r24
     228:	cb 01       	movw	r24, r22
     22a:	bc 01       	movw	r22, r24
     22c:	cd 01       	movw	r24, r26
     22e:	0e 94 09 06 	call	0xc12	; 0xc12 <__fixunssfsi>
     232:	dc 01       	movw	r26, r24
     234:	cb 01       	movw	r24, r22
     236:	9f a3       	std	Y+39, r25	; 0x27
     238:	8e a3       	std	Y+38, r24	; 0x26
     23a:	12 c0       	rjmp	.+36     	; 0x260 <main+0x1de>
     23c:	80 e9       	ldi	r24, 0x90	; 144
     23e:	91 e0       	ldi	r25, 0x01	; 1
     240:	99 a7       	std	Y+41, r25	; 0x29
     242:	88 a7       	std	Y+40, r24	; 0x28
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     244:	88 a5       	ldd	r24, Y+40	; 0x28
     246:	99 a5       	ldd	r25, Y+41	; 0x29
     248:	8c 01       	movw	r16, r24
     24a:	c8 01       	movw	r24, r16
     24c:	01 97       	sbiw	r24, 0x01	; 1
     24e:	f1 f7       	brne	.-4      	; 0x24c <main+0x1ca>
     250:	8c 01       	movw	r16, r24
     252:	19 a7       	std	Y+41, r17	; 0x29
     254:	08 a7       	std	Y+40, r16	; 0x28
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     256:	8e a1       	ldd	r24, Y+38	; 0x26
     258:	9f a1       	ldd	r25, Y+39	; 0x27
     25a:	01 97       	sbiw	r24, 0x01	; 1
     25c:	9f a3       	std	Y+39, r25	; 0x27
     25e:	8e a3       	std	Y+38, r24	; 0x26
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     260:	8e a1       	ldd	r24, Y+38	; 0x26
     262:	9f a1       	ldd	r25, Y+39	; 0x27
     264:	00 97       	sbiw	r24, 0x00	; 0
     266:	51 f7       	brne	.-44     	; 0x23c <main+0x1ba>
     268:	28 c0       	rjmp	.+80     	; 0x2ba <main+0x238>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     26a:	6a a1       	ldd	r22, Y+34	; 0x22
     26c:	7b a1       	ldd	r23, Y+35	; 0x23
     26e:	8c a1       	ldd	r24, Y+36	; 0x24
     270:	9d a1       	ldd	r25, Y+37	; 0x25
     272:	0e 94 09 06 	call	0xc12	; 0xc12 <__fixunssfsi>
     276:	dc 01       	movw	r26, r24
     278:	cb 01       	movw	r24, r22
     27a:	9f a3       	std	Y+39, r25	; 0x27
     27c:	8e a3       	std	Y+38, r24	; 0x26
     27e:	8e a1       	ldd	r24, Y+38	; 0x26
     280:	9f a1       	ldd	r25, Y+39	; 0x27
     282:	9b a7       	std	Y+43, r25	; 0x2b
     284:	8a a7       	std	Y+42, r24	; 0x2a
     286:	8a a5       	ldd	r24, Y+42	; 0x2a
     288:	9b a5       	ldd	r25, Y+43	; 0x2b
     28a:	8c 01       	movw	r16, r24
     28c:	f8 01       	movw	r30, r16
     28e:	31 97       	sbiw	r30, 0x01	; 1
     290:	f1 f7       	brne	.-4      	; 0x28e <main+0x20c>
     292:	8f 01       	movw	r16, r30
     294:	1b a7       	std	Y+43, r17	; 0x2b
     296:	0a a7       	std	Y+42, r16	; 0x2a
     298:	10 c0       	rjmp	.+32     	; 0x2ba <main+0x238>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     29a:	69 8d       	ldd	r22, Y+25	; 0x19
     29c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     29e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2a0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2a2:	0e 94 09 06 	call	0xc12	; 0xc12 <__fixunssfsi>
     2a6:	dc 01       	movw	r26, r24
     2a8:	cb 01       	movw	r24, r22
     2aa:	8d 8f       	std	Y+29, r24	; 0x1d
     2ac:	8d 8d       	ldd	r24, Y+29	; 0x1d
     2ae:	8c a7       	std	Y+44, r24	; 0x2c
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     2b0:	8c a5       	ldd	r24, Y+44	; 0x2c
     2b2:	18 2f       	mov	r17, r24
     2b4:	1a 95       	dec	r17
     2b6:	f1 f7       	brne	.-4      	; 0x2b4 <main+0x232>
     2b8:	1c a7       	std	Y+44, r17	; 0x2c


            PORTA = cyfra(liczba2);
     2ba:	0b e3       	ldi	r16, 0x3B	; 59
     2bc:	10 e0       	ldi	r17, 0x00	; 0
     2be:	8d 81       	ldd	r24, Y+5	; 0x05
     2c0:	9e 81       	ldd	r25, Y+6	; 0x06
     2c2:	0e 94 b2 05 	call	0xb64	; 0xb64 <cyfra>
     2c6:	f8 01       	movw	r30, r16
     2c8:	80 83       	st	Z, r24
            wys2;
     2ca:	88 e3       	ldi	r24, 0x38	; 56
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	2d ef       	ldi	r18, 0xFD	; 253
     2d0:	fc 01       	movw	r30, r24
     2d2:	20 83       	st	Z, r18
           _delay_us(short_deley);
     2d4:	89 89       	ldd	r24, Y+17	; 0x11
     2d6:	9a 89       	ldd	r25, Y+18	; 0x12
     2d8:	aa 27       	eor	r26, r26
     2da:	97 fd       	sbrc	r25, 7
     2dc:	a0 95       	com	r26
     2de:	ba 2f       	mov	r27, r26
     2e0:	bc 01       	movw	r22, r24
     2e2:	cd 01       	movw	r24, r26
     2e4:	0e 94 15 0a 	call	0x142a	; 0x142a <__floatsisf>
     2e8:	dc 01       	movw	r26, r24
     2ea:	cb 01       	movw	r24, r22
     2ec:	8d a7       	std	Y+45, r24	; 0x2d
     2ee:	9e a7       	std	Y+46, r25	; 0x2e
     2f0:	af a7       	std	Y+47, r26	; 0x2f
     2f2:	b8 ab       	std	Y+48, r27	; 0x30
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     2f4:	6d a5       	ldd	r22, Y+45	; 0x2d
     2f6:	7e a5       	ldd	r23, Y+46	; 0x2e
     2f8:	8f a5       	ldd	r24, Y+47	; 0x2f
     2fa:	98 a9       	ldd	r25, Y+48	; 0x30
     2fc:	2b ea       	ldi	r18, 0xAB	; 171
     2fe:	3a ea       	ldi	r19, 0xAA	; 170
     300:	4a ea       	ldi	r20, 0xAA	; 170
     302:	50 e4       	ldi	r21, 0x40	; 64
     304:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     308:	dc 01       	movw	r26, r24
     30a:	cb 01       	movw	r24, r22
     30c:	89 ab       	std	Y+49, r24	; 0x31
     30e:	9a ab       	std	Y+50, r25	; 0x32
     310:	ab ab       	std	Y+51, r26	; 0x33
     312:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
     314:	11 e0       	ldi	r17, 0x01	; 1
     316:	69 a9       	ldd	r22, Y+49	; 0x31
     318:	7a a9       	ldd	r23, Y+50	; 0x32
     31a:	8b a9       	ldd	r24, Y+51	; 0x33
     31c:	9c a9       	ldd	r25, Y+52	; 0x34
     31e:	20 e0       	ldi	r18, 0x00	; 0
     320:	30 e0       	ldi	r19, 0x00	; 0
     322:	40 e8       	ldi	r20, 0x80	; 128
     324:	5f e3       	ldi	r21, 0x3F	; 63
     326:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__ltsf2>
     32a:	88 23       	and	r24, r24
     32c:	0c f0       	brlt	.+2      	; 0x330 <main+0x2ae>
     32e:	10 e0       	ldi	r17, 0x00	; 0
     330:	11 23       	and	r17, r17
     332:	19 f0       	breq	.+6      	; 0x33a <main+0x2b8>
		__ticks = 1;
     334:	81 e0       	ldi	r24, 0x01	; 1
     336:	8d ab       	std	Y+53, r24	; 0x35
     338:	bb c0       	rjmp	.+374    	; 0x4b0 <main+0x42e>
	else if (__tmp > 255)
     33a:	11 e0       	ldi	r17, 0x01	; 1
     33c:	69 a9       	ldd	r22, Y+49	; 0x31
     33e:	7a a9       	ldd	r23, Y+50	; 0x32
     340:	8b a9       	ldd	r24, Y+51	; 0x33
     342:	9c a9       	ldd	r25, Y+52	; 0x34
     344:	20 e0       	ldi	r18, 0x00	; 0
     346:	30 e0       	ldi	r19, 0x00	; 0
     348:	4f e7       	ldi	r20, 0x7F	; 127
     34a:	53 e4       	ldi	r21, 0x43	; 67
     34c:	0e 94 85 09 	call	0x130a	; 0x130a <__gtsf2>
     350:	18 16       	cp	r1, r24
     352:	0c f0       	brlt	.+2      	; 0x356 <main+0x2d4>
     354:	10 e0       	ldi	r17, 0x00	; 0
     356:	11 23       	and	r17, r17
     358:	09 f4       	brne	.+2      	; 0x35c <main+0x2da>
     35a:	a1 c0       	rjmp	.+322    	; 0x49e <main+0x41c>
	{
		_delay_ms(__us / 1000.0);
     35c:	6d a5       	ldd	r22, Y+45	; 0x2d
     35e:	7e a5       	ldd	r23, Y+46	; 0x2e
     360:	8f a5       	ldd	r24, Y+47	; 0x2f
     362:	98 a9       	ldd	r25, Y+48	; 0x30
     364:	20 e0       	ldi	r18, 0x00	; 0
     366:	30 e0       	ldi	r19, 0x00	; 0
     368:	4a e7       	ldi	r20, 0x7A	; 122
     36a:	54 e4       	ldi	r21, 0x44	; 68
     36c:	0e 94 d7 08 	call	0x11ae	; 0x11ae <__divsf3>
     370:	dc 01       	movw	r26, r24
     372:	cb 01       	movw	r24, r22
     374:	8e ab       	std	Y+54, r24	; 0x36
     376:	9f ab       	std	Y+55, r25	; 0x37
     378:	a8 af       	std	Y+56, r26	; 0x38
     37a:	b9 af       	std	Y+57, r27	; 0x39
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     37c:	6e a9       	ldd	r22, Y+54	; 0x36
     37e:	7f a9       	ldd	r23, Y+55	; 0x37
     380:	88 ad       	ldd	r24, Y+56	; 0x38
     382:	99 ad       	ldd	r25, Y+57	; 0x39
     384:	20 e0       	ldi	r18, 0x00	; 0
     386:	30 e0       	ldi	r19, 0x00	; 0
     388:	4a e7       	ldi	r20, 0x7A	; 122
     38a:	55 e4       	ldi	r21, 0x45	; 69
     38c:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     390:	dc 01       	movw	r26, r24
     392:	cb 01       	movw	r24, r22
     394:	8a af       	std	Y+58, r24	; 0x3a
     396:	9b af       	std	Y+59, r25	; 0x3b
     398:	ac af       	std	Y+60, r26	; 0x3c
     39a:	bd af       	std	Y+61, r27	; 0x3d
	if (__tmp < 1.0)
     39c:	11 e0       	ldi	r17, 0x01	; 1
     39e:	6a ad       	ldd	r22, Y+58	; 0x3a
     3a0:	7b ad       	ldd	r23, Y+59	; 0x3b
     3a2:	8c ad       	ldd	r24, Y+60	; 0x3c
     3a4:	9d ad       	ldd	r25, Y+61	; 0x3d
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	40 e8       	ldi	r20, 0x80	; 128
     3ac:	5f e3       	ldi	r21, 0x3F	; 63
     3ae:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__ltsf2>
     3b2:	88 23       	and	r24, r24
     3b4:	0c f0       	brlt	.+2      	; 0x3b8 <main+0x336>
     3b6:	10 e0       	ldi	r17, 0x00	; 0
     3b8:	11 23       	and	r17, r17
     3ba:	29 f0       	breq	.+10     	; 0x3c6 <main+0x344>
		__ticks = 1;
     3bc:	81 e0       	ldi	r24, 0x01	; 1
     3be:	90 e0       	ldi	r25, 0x00	; 0
     3c0:	9f af       	std	Y+63, r25	; 0x3f
     3c2:	8e af       	std	Y+62, r24	; 0x3e
     3c4:	52 c0       	rjmp	.+164    	; 0x46a <main+0x3e8>
	else if (__tmp > 65535)
     3c6:	11 e0       	ldi	r17, 0x01	; 1
     3c8:	6a ad       	ldd	r22, Y+58	; 0x3a
     3ca:	7b ad       	ldd	r23, Y+59	; 0x3b
     3cc:	8c ad       	ldd	r24, Y+60	; 0x3c
     3ce:	9d ad       	ldd	r25, Y+61	; 0x3d
     3d0:	20 e0       	ldi	r18, 0x00	; 0
     3d2:	3f ef       	ldi	r19, 0xFF	; 255
     3d4:	4f e7       	ldi	r20, 0x7F	; 127
     3d6:	57 e4       	ldi	r21, 0x47	; 71
     3d8:	0e 94 85 09 	call	0x130a	; 0x130a <__gtsf2>
     3dc:	18 16       	cp	r1, r24
     3de:	0c f0       	brlt	.+2      	; 0x3e2 <main+0x360>
     3e0:	10 e0       	ldi	r17, 0x00	; 0
     3e2:	11 23       	and	r17, r17
     3e4:	c1 f1       	breq	.+112    	; 0x456 <main+0x3d4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3e6:	6e a9       	ldd	r22, Y+54	; 0x36
     3e8:	7f a9       	ldd	r23, Y+55	; 0x37
     3ea:	88 ad       	ldd	r24, Y+56	; 0x38
     3ec:	99 ad       	ldd	r25, Y+57	; 0x39
     3ee:	20 e0       	ldi	r18, 0x00	; 0
     3f0:	30 e0       	ldi	r19, 0x00	; 0
     3f2:	40 e2       	ldi	r20, 0x20	; 32
     3f4:	51 e4       	ldi	r21, 0x41	; 65
     3f6:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     3fa:	dc 01       	movw	r26, r24
     3fc:	cb 01       	movw	r24, r22
     3fe:	bc 01       	movw	r22, r24
     400:	cd 01       	movw	r24, r26
     402:	0e 94 09 06 	call	0xc12	; 0xc12 <__fixunssfsi>
     406:	dc 01       	movw	r26, r24
     408:	cb 01       	movw	r24, r22
     40a:	9f af       	std	Y+63, r25	; 0x3f
     40c:	8e af       	std	Y+62, r24	; 0x3e
     40e:	1e c0       	rjmp	.+60     	; 0x44c <main+0x3ca>
     410:	ce 01       	movw	r24, r28
     412:	80 5c       	subi	r24, 0xC0	; 192
     414:	9f 4f       	sbci	r25, 0xFF	; 255
     416:	20 e9       	ldi	r18, 0x90	; 144
     418:	31 e0       	ldi	r19, 0x01	; 1
     41a:	fc 01       	movw	r30, r24
     41c:	31 83       	std	Z+1, r19	; 0x01
     41e:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     420:	ce 01       	movw	r24, r28
     422:	80 5c       	subi	r24, 0xC0	; 192
     424:	9f 4f       	sbci	r25, 0xFF	; 255
     426:	fc 01       	movw	r30, r24
     428:	80 81       	ld	r24, Z
     42a:	91 81       	ldd	r25, Z+1	; 0x01
     42c:	8c 01       	movw	r16, r24
     42e:	c8 01       	movw	r24, r16
     430:	01 97       	sbiw	r24, 0x01	; 1
     432:	f1 f7       	brne	.-4      	; 0x430 <main+0x3ae>
     434:	8c 01       	movw	r16, r24
     436:	ce 01       	movw	r24, r28
     438:	80 5c       	subi	r24, 0xC0	; 192
     43a:	9f 4f       	sbci	r25, 0xFF	; 255
     43c:	fc 01       	movw	r30, r24
     43e:	11 83       	std	Z+1, r17	; 0x01
     440:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     442:	8e ad       	ldd	r24, Y+62	; 0x3e
     444:	9f ad       	ldd	r25, Y+63	; 0x3f
     446:	01 97       	sbiw	r24, 0x01	; 1
     448:	9f af       	std	Y+63, r25	; 0x3f
     44a:	8e af       	std	Y+62, r24	; 0x3e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     44c:	8e ad       	ldd	r24, Y+62	; 0x3e
     44e:	9f ad       	ldd	r25, Y+63	; 0x3f
     450:	00 97       	sbiw	r24, 0x00	; 0
     452:	f1 f6       	brne	.-68     	; 0x410 <main+0x38e>
     454:	40 c0       	rjmp	.+128    	; 0x4d6 <main+0x454>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     456:	6a ad       	ldd	r22, Y+58	; 0x3a
     458:	7b ad       	ldd	r23, Y+59	; 0x3b
     45a:	8c ad       	ldd	r24, Y+60	; 0x3c
     45c:	9d ad       	ldd	r25, Y+61	; 0x3d
     45e:	0e 94 09 06 	call	0xc12	; 0xc12 <__fixunssfsi>
     462:	dc 01       	movw	r26, r24
     464:	cb 01       	movw	r24, r22
     466:	9f af       	std	Y+63, r25	; 0x3f
     468:	8e af       	std	Y+62, r24	; 0x3e
     46a:	ce 01       	movw	r24, r28
     46c:	8e 5b       	subi	r24, 0xBE	; 190
     46e:	9f 4f       	sbci	r25, 0xFF	; 255
     470:	2e ad       	ldd	r18, Y+62	; 0x3e
     472:	3f ad       	ldd	r19, Y+63	; 0x3f
     474:	fc 01       	movw	r30, r24
     476:	31 83       	std	Z+1, r19	; 0x01
     478:	20 83       	st	Z, r18
     47a:	ce 01       	movw	r24, r28
     47c:	8e 5b       	subi	r24, 0xBE	; 190
     47e:	9f 4f       	sbci	r25, 0xFF	; 255
     480:	fc 01       	movw	r30, r24
     482:	80 81       	ld	r24, Z
     484:	91 81       	ldd	r25, Z+1	; 0x01
     486:	8c 01       	movw	r16, r24
     488:	c8 01       	movw	r24, r16
     48a:	01 97       	sbiw	r24, 0x01	; 1
     48c:	f1 f7       	brne	.-4      	; 0x48a <main+0x408>
     48e:	8c 01       	movw	r16, r24
     490:	ce 01       	movw	r24, r28
     492:	8e 5b       	subi	r24, 0xBE	; 190
     494:	9f 4f       	sbci	r25, 0xFF	; 255
     496:	fc 01       	movw	r30, r24
     498:	11 83       	std	Z+1, r17	; 0x01
     49a:	00 83       	st	Z, r16
     49c:	1c c0       	rjmp	.+56     	; 0x4d6 <main+0x454>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     49e:	69 a9       	ldd	r22, Y+49	; 0x31
     4a0:	7a a9       	ldd	r23, Y+50	; 0x32
     4a2:	8b a9       	ldd	r24, Y+51	; 0x33
     4a4:	9c a9       	ldd	r25, Y+52	; 0x34
     4a6:	0e 94 09 06 	call	0xc12	; 0xc12 <__fixunssfsi>
     4aa:	dc 01       	movw	r26, r24
     4ac:	cb 01       	movw	r24, r22
     4ae:	8d ab       	std	Y+53, r24	; 0x35
     4b0:	ce 01       	movw	r24, r28
     4b2:	8c 5b       	subi	r24, 0xBC	; 188
     4b4:	9f 4f       	sbci	r25, 0xFF	; 255
     4b6:	2d a9       	ldd	r18, Y+53	; 0x35
     4b8:	fc 01       	movw	r30, r24
     4ba:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     4bc:	ce 01       	movw	r24, r28
     4be:	8c 5b       	subi	r24, 0xBC	; 188
     4c0:	9f 4f       	sbci	r25, 0xFF	; 255
     4c2:	fc 01       	movw	r30, r24
     4c4:	80 81       	ld	r24, Z
     4c6:	18 2f       	mov	r17, r24
     4c8:	1a 95       	dec	r17
     4ca:	f1 f7       	brne	.-4      	; 0x4c8 <main+0x446>
     4cc:	ce 01       	movw	r24, r28
     4ce:	8c 5b       	subi	r24, 0xBC	; 188
     4d0:	9f 4f       	sbci	r25, 0xFF	; 255
     4d2:	fc 01       	movw	r30, r24
     4d4:	10 83       	st	Z, r17


            PORTA = cyfra(liczba3);
     4d6:	0b e3       	ldi	r16, 0x3B	; 59
     4d8:	10 e0       	ldi	r17, 0x00	; 0
     4da:	8f 81       	ldd	r24, Y+7	; 0x07
     4dc:	98 85       	ldd	r25, Y+8	; 0x08
     4de:	0e 94 b2 05 	call	0xb64	; 0xb64 <cyfra>
     4e2:	f8 01       	movw	r30, r16
     4e4:	80 83       	st	Z, r24
            wys3;
     4e6:	88 e3       	ldi	r24, 0x38	; 56
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	2b ef       	ldi	r18, 0xFB	; 251
     4ec:	fc 01       	movw	r30, r24
     4ee:	20 83       	st	Z, r18
            _delay_us(short_deley);
     4f0:	89 89       	ldd	r24, Y+17	; 0x11
     4f2:	9a 89       	ldd	r25, Y+18	; 0x12
     4f4:	aa 27       	eor	r26, r26
     4f6:	97 fd       	sbrc	r25, 7
     4f8:	a0 95       	com	r26
     4fa:	ba 2f       	mov	r27, r26
     4fc:	bc 01       	movw	r22, r24
     4fe:	cd 01       	movw	r24, r26
     500:	0e 94 15 0a 	call	0x142a	; 0x142a <__floatsisf>
     504:	dc 01       	movw	r26, r24
     506:	cb 01       	movw	r24, r22
     508:	9e 01       	movw	r18, r28
     50a:	2b 5b       	subi	r18, 0xBB	; 187
     50c:	3f 4f       	sbci	r19, 0xFF	; 255
     50e:	f9 01       	movw	r30, r18
     510:	80 83       	st	Z, r24
     512:	91 83       	std	Z+1, r25	; 0x01
     514:	a2 83       	std	Z+2, r26	; 0x02
     516:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     518:	8e 01       	movw	r16, r28
     51a:	07 5b       	subi	r16, 0xB7	; 183
     51c:	1f 4f       	sbci	r17, 0xFF	; 255
     51e:	ce 01       	movw	r24, r28
     520:	8b 5b       	subi	r24, 0xBB	; 187
     522:	9f 4f       	sbci	r25, 0xFF	; 255
     524:	fc 01       	movw	r30, r24
     526:	60 81       	ld	r22, Z
     528:	71 81       	ldd	r23, Z+1	; 0x01
     52a:	82 81       	ldd	r24, Z+2	; 0x02
     52c:	93 81       	ldd	r25, Z+3	; 0x03
     52e:	2b ea       	ldi	r18, 0xAB	; 171
     530:	3a ea       	ldi	r19, 0xAA	; 170
     532:	4a ea       	ldi	r20, 0xAA	; 170
     534:	50 e4       	ldi	r21, 0x40	; 64
     536:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     53a:	dc 01       	movw	r26, r24
     53c:	cb 01       	movw	r24, r22
     53e:	f8 01       	movw	r30, r16
     540:	80 83       	st	Z, r24
     542:	91 83       	std	Z+1, r25	; 0x01
     544:	a2 83       	std	Z+2, r26	; 0x02
     546:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     548:	ce 01       	movw	r24, r28
     54a:	87 5b       	subi	r24, 0xB7	; 183
     54c:	9f 4f       	sbci	r25, 0xFF	; 255
     54e:	11 e0       	ldi	r17, 0x01	; 1
     550:	fc 01       	movw	r30, r24
     552:	60 81       	ld	r22, Z
     554:	71 81       	ldd	r23, Z+1	; 0x01
     556:	82 81       	ldd	r24, Z+2	; 0x02
     558:	93 81       	ldd	r25, Z+3	; 0x03
     55a:	20 e0       	ldi	r18, 0x00	; 0
     55c:	30 e0       	ldi	r19, 0x00	; 0
     55e:	40 e8       	ldi	r20, 0x80	; 128
     560:	5f e3       	ldi	r21, 0x3F	; 63
     562:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__ltsf2>
     566:	88 23       	and	r24, r24
     568:	0c f0       	brlt	.+2      	; 0x56c <main+0x4ea>
     56a:	10 e0       	ldi	r17, 0x00	; 0
     56c:	11 23       	and	r17, r17
     56e:	39 f0       	breq	.+14     	; 0x57e <main+0x4fc>
		__ticks = 1;
     570:	ce 01       	movw	r24, r28
     572:	83 5b       	subi	r24, 0xB3	; 179
     574:	9f 4f       	sbci	r25, 0xFF	; 255
     576:	21 e0       	ldi	r18, 0x01	; 1
     578:	fc 01       	movw	r30, r24
     57a:	20 83       	st	Z, r18
     57c:	05 c1       	rjmp	.+522    	; 0x788 <main+0x706>
	else if (__tmp > 255)
     57e:	ce 01       	movw	r24, r28
     580:	87 5b       	subi	r24, 0xB7	; 183
     582:	9f 4f       	sbci	r25, 0xFF	; 255
     584:	11 e0       	ldi	r17, 0x01	; 1
     586:	fc 01       	movw	r30, r24
     588:	60 81       	ld	r22, Z
     58a:	71 81       	ldd	r23, Z+1	; 0x01
     58c:	82 81       	ldd	r24, Z+2	; 0x02
     58e:	93 81       	ldd	r25, Z+3	; 0x03
     590:	20 e0       	ldi	r18, 0x00	; 0
     592:	30 e0       	ldi	r19, 0x00	; 0
     594:	4f e7       	ldi	r20, 0x7F	; 127
     596:	53 e4       	ldi	r21, 0x43	; 67
     598:	0e 94 85 09 	call	0x130a	; 0x130a <__gtsf2>
     59c:	18 16       	cp	r1, r24
     59e:	0c f0       	brlt	.+2      	; 0x5a2 <main+0x520>
     5a0:	10 e0       	ldi	r17, 0x00	; 0
     5a2:	11 23       	and	r17, r17
     5a4:	09 f4       	brne	.+2      	; 0x5a8 <main+0x526>
     5a6:	df c0       	rjmp	.+446    	; 0x766 <main+0x6e4>
	{
		_delay_ms(__us / 1000.0);
     5a8:	ce 01       	movw	r24, r28
     5aa:	8b 5b       	subi	r24, 0xBB	; 187
     5ac:	9f 4f       	sbci	r25, 0xFF	; 255
     5ae:	fc 01       	movw	r30, r24
     5b0:	60 81       	ld	r22, Z
     5b2:	71 81       	ldd	r23, Z+1	; 0x01
     5b4:	82 81       	ldd	r24, Z+2	; 0x02
     5b6:	93 81       	ldd	r25, Z+3	; 0x03
     5b8:	20 e0       	ldi	r18, 0x00	; 0
     5ba:	30 e0       	ldi	r19, 0x00	; 0
     5bc:	4a e7       	ldi	r20, 0x7A	; 122
     5be:	54 e4       	ldi	r21, 0x44	; 68
     5c0:	0e 94 d7 08 	call	0x11ae	; 0x11ae <__divsf3>
     5c4:	dc 01       	movw	r26, r24
     5c6:	cb 01       	movw	r24, r22
     5c8:	9e 01       	movw	r18, r28
     5ca:	22 5b       	subi	r18, 0xB2	; 178
     5cc:	3f 4f       	sbci	r19, 0xFF	; 255
     5ce:	f9 01       	movw	r30, r18
     5d0:	80 83       	st	Z, r24
     5d2:	91 83       	std	Z+1, r25	; 0x01
     5d4:	a2 83       	std	Z+2, r26	; 0x02
     5d6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     5d8:	8e 01       	movw	r16, r28
     5da:	0e 5a       	subi	r16, 0xAE	; 174
     5dc:	1f 4f       	sbci	r17, 0xFF	; 255
     5de:	ce 01       	movw	r24, r28
     5e0:	82 5b       	subi	r24, 0xB2	; 178
     5e2:	9f 4f       	sbci	r25, 0xFF	; 255
     5e4:	fc 01       	movw	r30, r24
     5e6:	60 81       	ld	r22, Z
     5e8:	71 81       	ldd	r23, Z+1	; 0x01
     5ea:	82 81       	ldd	r24, Z+2	; 0x02
     5ec:	93 81       	ldd	r25, Z+3	; 0x03
     5ee:	20 e0       	ldi	r18, 0x00	; 0
     5f0:	30 e0       	ldi	r19, 0x00	; 0
     5f2:	4a e7       	ldi	r20, 0x7A	; 122
     5f4:	55 e4       	ldi	r21, 0x45	; 69
     5f6:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     5fa:	dc 01       	movw	r26, r24
     5fc:	cb 01       	movw	r24, r22
     5fe:	f8 01       	movw	r30, r16
     600:	80 83       	st	Z, r24
     602:	91 83       	std	Z+1, r25	; 0x01
     604:	a2 83       	std	Z+2, r26	; 0x02
     606:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     608:	ce 01       	movw	r24, r28
     60a:	8e 5a       	subi	r24, 0xAE	; 174
     60c:	9f 4f       	sbci	r25, 0xFF	; 255
     60e:	11 e0       	ldi	r17, 0x01	; 1
     610:	fc 01       	movw	r30, r24
     612:	60 81       	ld	r22, Z
     614:	71 81       	ldd	r23, Z+1	; 0x01
     616:	82 81       	ldd	r24, Z+2	; 0x02
     618:	93 81       	ldd	r25, Z+3	; 0x03
     61a:	20 e0       	ldi	r18, 0x00	; 0
     61c:	30 e0       	ldi	r19, 0x00	; 0
     61e:	40 e8       	ldi	r20, 0x80	; 128
     620:	5f e3       	ldi	r21, 0x3F	; 63
     622:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__ltsf2>
     626:	88 23       	and	r24, r24
     628:	0c f0       	brlt	.+2      	; 0x62c <main+0x5aa>
     62a:	10 e0       	ldi	r17, 0x00	; 0
     62c:	11 23       	and	r17, r17
     62e:	49 f0       	breq	.+18     	; 0x642 <main+0x5c0>
		__ticks = 1;
     630:	ce 01       	movw	r24, r28
     632:	8a 5a       	subi	r24, 0xAA	; 170
     634:	9f 4f       	sbci	r25, 0xFF	; 255
     636:	21 e0       	ldi	r18, 0x01	; 1
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	fc 01       	movw	r30, r24
     63c:	31 83       	std	Z+1, r19	; 0x01
     63e:	20 83       	st	Z, r18
     640:	74 c0       	rjmp	.+232    	; 0x72a <main+0x6a8>
	else if (__tmp > 65535)
     642:	ce 01       	movw	r24, r28
     644:	8e 5a       	subi	r24, 0xAE	; 174
     646:	9f 4f       	sbci	r25, 0xFF	; 255
     648:	11 e0       	ldi	r17, 0x01	; 1
     64a:	fc 01       	movw	r30, r24
     64c:	60 81       	ld	r22, Z
     64e:	71 81       	ldd	r23, Z+1	; 0x01
     650:	82 81       	ldd	r24, Z+2	; 0x02
     652:	93 81       	ldd	r25, Z+3	; 0x03
     654:	20 e0       	ldi	r18, 0x00	; 0
     656:	3f ef       	ldi	r19, 0xFF	; 255
     658:	4f e7       	ldi	r20, 0x7F	; 127
     65a:	57 e4       	ldi	r21, 0x47	; 71
     65c:	0e 94 85 09 	call	0x130a	; 0x130a <__gtsf2>
     660:	18 16       	cp	r1, r24
     662:	0c f0       	brlt	.+2      	; 0x666 <main+0x5e4>
     664:	10 e0       	ldi	r17, 0x00	; 0
     666:	11 23       	and	r17, r17
     668:	09 f4       	brne	.+2      	; 0x66c <main+0x5ea>
     66a:	4d c0       	rjmp	.+154    	; 0x706 <main+0x684>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     66c:	ce 01       	movw	r24, r28
     66e:	82 5b       	subi	r24, 0xB2	; 178
     670:	9f 4f       	sbci	r25, 0xFF	; 255
     672:	fc 01       	movw	r30, r24
     674:	60 81       	ld	r22, Z
     676:	71 81       	ldd	r23, Z+1	; 0x01
     678:	82 81       	ldd	r24, Z+2	; 0x02
     67a:	93 81       	ldd	r25, Z+3	; 0x03
     67c:	20 e0       	ldi	r18, 0x00	; 0
     67e:	30 e0       	ldi	r19, 0x00	; 0
     680:	40 e2       	ldi	r20, 0x20	; 32
     682:	51 e4       	ldi	r21, 0x41	; 65
     684:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     688:	dc 01       	movw	r26, r24
     68a:	cb 01       	movw	r24, r22
     68c:	8e 01       	movw	r16, r28
     68e:	0a 5a       	subi	r16, 0xAA	; 170
     690:	1f 4f       	sbci	r17, 0xFF	; 255
     692:	bc 01       	movw	r22, r24
     694:	cd 01       	movw	r24, r26
     696:	0e 94 09 06 	call	0xc12	; 0xc12 <__fixunssfsi>
     69a:	dc 01       	movw	r26, r24
     69c:	cb 01       	movw	r24, r22
     69e:	f8 01       	movw	r30, r16
     6a0:	91 83       	std	Z+1, r25	; 0x01
     6a2:	80 83       	st	Z, r24
     6a4:	27 c0       	rjmp	.+78     	; 0x6f4 <main+0x672>
     6a6:	ce 01       	movw	r24, r28
     6a8:	88 5a       	subi	r24, 0xA8	; 168
     6aa:	9f 4f       	sbci	r25, 0xFF	; 255
     6ac:	20 e9       	ldi	r18, 0x90	; 144
     6ae:	31 e0       	ldi	r19, 0x01	; 1
     6b0:	fc 01       	movw	r30, r24
     6b2:	31 83       	std	Z+1, r19	; 0x01
     6b4:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     6b6:	ce 01       	movw	r24, r28
     6b8:	88 5a       	subi	r24, 0xA8	; 168
     6ba:	9f 4f       	sbci	r25, 0xFF	; 255
     6bc:	fc 01       	movw	r30, r24
     6be:	80 81       	ld	r24, Z
     6c0:	91 81       	ldd	r25, Z+1	; 0x01
     6c2:	8c 01       	movw	r16, r24
     6c4:	c8 01       	movw	r24, r16
     6c6:	01 97       	sbiw	r24, 0x01	; 1
     6c8:	f1 f7       	brne	.-4      	; 0x6c6 <main+0x644>
     6ca:	8c 01       	movw	r16, r24
     6cc:	ce 01       	movw	r24, r28
     6ce:	88 5a       	subi	r24, 0xA8	; 168
     6d0:	9f 4f       	sbci	r25, 0xFF	; 255
     6d2:	fc 01       	movw	r30, r24
     6d4:	11 83       	std	Z+1, r17	; 0x01
     6d6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     6d8:	ce 01       	movw	r24, r28
     6da:	8a 5a       	subi	r24, 0xAA	; 170
     6dc:	9f 4f       	sbci	r25, 0xFF	; 255
     6de:	9e 01       	movw	r18, r28
     6e0:	2a 5a       	subi	r18, 0xAA	; 170
     6e2:	3f 4f       	sbci	r19, 0xFF	; 255
     6e4:	f9 01       	movw	r30, r18
     6e6:	20 81       	ld	r18, Z
     6e8:	31 81       	ldd	r19, Z+1	; 0x01
     6ea:	21 50       	subi	r18, 0x01	; 1
     6ec:	30 40       	sbci	r19, 0x00	; 0
     6ee:	fc 01       	movw	r30, r24
     6f0:	31 83       	std	Z+1, r19	; 0x01
     6f2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6f4:	ce 01       	movw	r24, r28
     6f6:	8a 5a       	subi	r24, 0xAA	; 170
     6f8:	9f 4f       	sbci	r25, 0xFF	; 255
     6fa:	fc 01       	movw	r30, r24
     6fc:	80 81       	ld	r24, Z
     6fe:	91 81       	ldd	r25, Z+1	; 0x01
     700:	00 97       	sbiw	r24, 0x00	; 0
     702:	89 f6       	brne	.-94     	; 0x6a6 <main+0x624>
     704:	58 c0       	rjmp	.+176    	; 0x7b6 <main+0x734>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     706:	8e 01       	movw	r16, r28
     708:	0a 5a       	subi	r16, 0xAA	; 170
     70a:	1f 4f       	sbci	r17, 0xFF	; 255
     70c:	ce 01       	movw	r24, r28
     70e:	8e 5a       	subi	r24, 0xAE	; 174
     710:	9f 4f       	sbci	r25, 0xFF	; 255
     712:	fc 01       	movw	r30, r24
     714:	60 81       	ld	r22, Z
     716:	71 81       	ldd	r23, Z+1	; 0x01
     718:	82 81       	ldd	r24, Z+2	; 0x02
     71a:	93 81       	ldd	r25, Z+3	; 0x03
     71c:	0e 94 09 06 	call	0xc12	; 0xc12 <__fixunssfsi>
     720:	dc 01       	movw	r26, r24
     722:	cb 01       	movw	r24, r22
     724:	f8 01       	movw	r30, r16
     726:	91 83       	std	Z+1, r25	; 0x01
     728:	80 83       	st	Z, r24
     72a:	ce 01       	movw	r24, r28
     72c:	86 5a       	subi	r24, 0xA6	; 166
     72e:	9f 4f       	sbci	r25, 0xFF	; 255
     730:	9e 01       	movw	r18, r28
     732:	2a 5a       	subi	r18, 0xAA	; 170
     734:	3f 4f       	sbci	r19, 0xFF	; 255
     736:	f9 01       	movw	r30, r18
     738:	20 81       	ld	r18, Z
     73a:	31 81       	ldd	r19, Z+1	; 0x01
     73c:	fc 01       	movw	r30, r24
     73e:	31 83       	std	Z+1, r19	; 0x01
     740:	20 83       	st	Z, r18
     742:	ce 01       	movw	r24, r28
     744:	86 5a       	subi	r24, 0xA6	; 166
     746:	9f 4f       	sbci	r25, 0xFF	; 255
     748:	fc 01       	movw	r30, r24
     74a:	80 81       	ld	r24, Z
     74c:	91 81       	ldd	r25, Z+1	; 0x01
     74e:	8c 01       	movw	r16, r24
     750:	c8 01       	movw	r24, r16
     752:	01 97       	sbiw	r24, 0x01	; 1
     754:	f1 f7       	brne	.-4      	; 0x752 <main+0x6d0>
     756:	8c 01       	movw	r16, r24
     758:	ce 01       	movw	r24, r28
     75a:	86 5a       	subi	r24, 0xA6	; 166
     75c:	9f 4f       	sbci	r25, 0xFF	; 255
     75e:	fc 01       	movw	r30, r24
     760:	11 83       	std	Z+1, r17	; 0x01
     762:	00 83       	st	Z, r16
     764:	28 c0       	rjmp	.+80     	; 0x7b6 <main+0x734>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     766:	8e 01       	movw	r16, r28
     768:	03 5b       	subi	r16, 0xB3	; 179
     76a:	1f 4f       	sbci	r17, 0xFF	; 255
     76c:	ce 01       	movw	r24, r28
     76e:	87 5b       	subi	r24, 0xB7	; 183
     770:	9f 4f       	sbci	r25, 0xFF	; 255
     772:	fc 01       	movw	r30, r24
     774:	60 81       	ld	r22, Z
     776:	71 81       	ldd	r23, Z+1	; 0x01
     778:	82 81       	ldd	r24, Z+2	; 0x02
     77a:	93 81       	ldd	r25, Z+3	; 0x03
     77c:	0e 94 09 06 	call	0xc12	; 0xc12 <__fixunssfsi>
     780:	dc 01       	movw	r26, r24
     782:	cb 01       	movw	r24, r22
     784:	f8 01       	movw	r30, r16
     786:	80 83       	st	Z, r24
     788:	ce 01       	movw	r24, r28
     78a:	84 5a       	subi	r24, 0xA4	; 164
     78c:	9f 4f       	sbci	r25, 0xFF	; 255
     78e:	9e 01       	movw	r18, r28
     790:	23 5b       	subi	r18, 0xB3	; 179
     792:	3f 4f       	sbci	r19, 0xFF	; 255
     794:	f9 01       	movw	r30, r18
     796:	20 81       	ld	r18, Z
     798:	fc 01       	movw	r30, r24
     79a:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     79c:	ce 01       	movw	r24, r28
     79e:	84 5a       	subi	r24, 0xA4	; 164
     7a0:	9f 4f       	sbci	r25, 0xFF	; 255
     7a2:	fc 01       	movw	r30, r24
     7a4:	80 81       	ld	r24, Z
     7a6:	18 2f       	mov	r17, r24
     7a8:	1a 95       	dec	r17
     7aa:	f1 f7       	brne	.-4      	; 0x7a8 <main+0x726>
     7ac:	ce 01       	movw	r24, r28
     7ae:	84 5a       	subi	r24, 0xA4	; 164
     7b0:	9f 4f       	sbci	r25, 0xFF	; 255
     7b2:	fc 01       	movw	r30, r24
     7b4:	10 83       	st	Z, r17



            PORTA = cyfra(liczba4);
     7b6:	0b e3       	ldi	r16, 0x3B	; 59
     7b8:	10 e0       	ldi	r17, 0x00	; 0
     7ba:	89 85       	ldd	r24, Y+9	; 0x09
     7bc:	9a 85       	ldd	r25, Y+10	; 0x0a
     7be:	0e 94 b2 05 	call	0xb64	; 0xb64 <cyfra>
     7c2:	f8 01       	movw	r30, r16
     7c4:	80 83       	st	Z, r24
            wys4;
     7c6:	88 e3       	ldi	r24, 0x38	; 56
     7c8:	90 e0       	ldi	r25, 0x00	; 0
     7ca:	27 ef       	ldi	r18, 0xF7	; 247
     7cc:	fc 01       	movw	r30, r24
     7ce:	20 83       	st	Z, r18
           _delay_us(short_deley);
     7d0:	89 89       	ldd	r24, Y+17	; 0x11
     7d2:	9a 89       	ldd	r25, Y+18	; 0x12
     7d4:	aa 27       	eor	r26, r26
     7d6:	97 fd       	sbrc	r25, 7
     7d8:	a0 95       	com	r26
     7da:	ba 2f       	mov	r27, r26
     7dc:	bc 01       	movw	r22, r24
     7de:	cd 01       	movw	r24, r26
     7e0:	0e 94 15 0a 	call	0x142a	; 0x142a <__floatsisf>
     7e4:	dc 01       	movw	r26, r24
     7e6:	cb 01       	movw	r24, r22
     7e8:	9e 01       	movw	r18, r28
     7ea:	23 5a       	subi	r18, 0xA3	; 163
     7ec:	3f 4f       	sbci	r19, 0xFF	; 255
     7ee:	f9 01       	movw	r30, r18
     7f0:	80 83       	st	Z, r24
     7f2:	91 83       	std	Z+1, r25	; 0x01
     7f4:	a2 83       	std	Z+2, r26	; 0x02
     7f6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 3e6) * __us;
     7f8:	8e 01       	movw	r16, r28
     7fa:	0f 59       	subi	r16, 0x9F	; 159
     7fc:	1f 4f       	sbci	r17, 0xFF	; 255
     7fe:	ce 01       	movw	r24, r28
     800:	83 5a       	subi	r24, 0xA3	; 163
     802:	9f 4f       	sbci	r25, 0xFF	; 255
     804:	fc 01       	movw	r30, r24
     806:	60 81       	ld	r22, Z
     808:	71 81       	ldd	r23, Z+1	; 0x01
     80a:	82 81       	ldd	r24, Z+2	; 0x02
     80c:	93 81       	ldd	r25, Z+3	; 0x03
     80e:	2b ea       	ldi	r18, 0xAB	; 171
     810:	3a ea       	ldi	r19, 0xAA	; 170
     812:	4a ea       	ldi	r20, 0xAA	; 170
     814:	50 e4       	ldi	r21, 0x40	; 64
     816:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     81a:	dc 01       	movw	r26, r24
     81c:	cb 01       	movw	r24, r22
     81e:	f8 01       	movw	r30, r16
     820:	80 83       	st	Z, r24
     822:	91 83       	std	Z+1, r25	; 0x01
     824:	a2 83       	std	Z+2, r26	; 0x02
     826:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     828:	ce 01       	movw	r24, r28
     82a:	8f 59       	subi	r24, 0x9F	; 159
     82c:	9f 4f       	sbci	r25, 0xFF	; 255
     82e:	11 e0       	ldi	r17, 0x01	; 1
     830:	fc 01       	movw	r30, r24
     832:	60 81       	ld	r22, Z
     834:	71 81       	ldd	r23, Z+1	; 0x01
     836:	82 81       	ldd	r24, Z+2	; 0x02
     838:	93 81       	ldd	r25, Z+3	; 0x03
     83a:	20 e0       	ldi	r18, 0x00	; 0
     83c:	30 e0       	ldi	r19, 0x00	; 0
     83e:	40 e8       	ldi	r20, 0x80	; 128
     840:	5f e3       	ldi	r21, 0x3F	; 63
     842:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__ltsf2>
     846:	88 23       	and	r24, r24
     848:	0c f0       	brlt	.+2      	; 0x84c <main+0x7ca>
     84a:	10 e0       	ldi	r17, 0x00	; 0
     84c:	11 23       	and	r17, r17
     84e:	39 f0       	breq	.+14     	; 0x85e <main+0x7dc>
		__ticks = 1;
     850:	ce 01       	movw	r24, r28
     852:	8b 59       	subi	r24, 0x9B	; 155
     854:	9f 4f       	sbci	r25, 0xFF	; 255
     856:	21 e0       	ldi	r18, 0x01	; 1
     858:	fc 01       	movw	r30, r24
     85a:	20 83       	st	Z, r18
     85c:	05 c1       	rjmp	.+522    	; 0xa68 <__stack+0x209>
	else if (__tmp > 255)
     85e:	ce 01       	movw	r24, r28
     860:	8f 59       	subi	r24, 0x9F	; 159
     862:	9f 4f       	sbci	r25, 0xFF	; 255
     864:	11 e0       	ldi	r17, 0x01	; 1
     866:	fc 01       	movw	r30, r24
     868:	60 81       	ld	r22, Z
     86a:	71 81       	ldd	r23, Z+1	; 0x01
     86c:	82 81       	ldd	r24, Z+2	; 0x02
     86e:	93 81       	ldd	r25, Z+3	; 0x03
     870:	20 e0       	ldi	r18, 0x00	; 0
     872:	30 e0       	ldi	r19, 0x00	; 0
     874:	4f e7       	ldi	r20, 0x7F	; 127
     876:	53 e4       	ldi	r21, 0x43	; 67
     878:	0e 94 85 09 	call	0x130a	; 0x130a <__gtsf2>
     87c:	18 16       	cp	r1, r24
     87e:	0c f0       	brlt	.+2      	; 0x882 <__stack+0x23>
     880:	10 e0       	ldi	r17, 0x00	; 0
     882:	11 23       	and	r17, r17
     884:	09 f4       	brne	.+2      	; 0x888 <__stack+0x29>
     886:	df c0       	rjmp	.+446    	; 0xa46 <__stack+0x1e7>
	{
		_delay_ms(__us / 1000.0);
     888:	ce 01       	movw	r24, r28
     88a:	83 5a       	subi	r24, 0xA3	; 163
     88c:	9f 4f       	sbci	r25, 0xFF	; 255
     88e:	fc 01       	movw	r30, r24
     890:	60 81       	ld	r22, Z
     892:	71 81       	ldd	r23, Z+1	; 0x01
     894:	82 81       	ldd	r24, Z+2	; 0x02
     896:	93 81       	ldd	r25, Z+3	; 0x03
     898:	20 e0       	ldi	r18, 0x00	; 0
     89a:	30 e0       	ldi	r19, 0x00	; 0
     89c:	4a e7       	ldi	r20, 0x7A	; 122
     89e:	54 e4       	ldi	r21, 0x44	; 68
     8a0:	0e 94 d7 08 	call	0x11ae	; 0x11ae <__divsf3>
     8a4:	dc 01       	movw	r26, r24
     8a6:	cb 01       	movw	r24, r22
     8a8:	9e 01       	movw	r18, r28
     8aa:	2a 59       	subi	r18, 0x9A	; 154
     8ac:	3f 4f       	sbci	r19, 0xFF	; 255
     8ae:	f9 01       	movw	r30, r18
     8b0:	80 83       	st	Z, r24
     8b2:	91 83       	std	Z+1, r25	; 0x01
     8b4:	a2 83       	std	Z+2, r26	; 0x02
     8b6:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     8b8:	8e 01       	movw	r16, r28
     8ba:	06 59       	subi	r16, 0x96	; 150
     8bc:	1f 4f       	sbci	r17, 0xFF	; 255
     8be:	ce 01       	movw	r24, r28
     8c0:	8a 59       	subi	r24, 0x9A	; 154
     8c2:	9f 4f       	sbci	r25, 0xFF	; 255
     8c4:	fc 01       	movw	r30, r24
     8c6:	60 81       	ld	r22, Z
     8c8:	71 81       	ldd	r23, Z+1	; 0x01
     8ca:	82 81       	ldd	r24, Z+2	; 0x02
     8cc:	93 81       	ldd	r25, Z+3	; 0x03
     8ce:	20 e0       	ldi	r18, 0x00	; 0
     8d0:	30 e0       	ldi	r19, 0x00	; 0
     8d2:	4a e7       	ldi	r20, 0x7A	; 122
     8d4:	55 e4       	ldi	r21, 0x45	; 69
     8d6:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     8da:	dc 01       	movw	r26, r24
     8dc:	cb 01       	movw	r24, r22
     8de:	f8 01       	movw	r30, r16
     8e0:	80 83       	st	Z, r24
     8e2:	91 83       	std	Z+1, r25	; 0x01
     8e4:	a2 83       	std	Z+2, r26	; 0x02
     8e6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     8e8:	ce 01       	movw	r24, r28
     8ea:	86 59       	subi	r24, 0x96	; 150
     8ec:	9f 4f       	sbci	r25, 0xFF	; 255
     8ee:	11 e0       	ldi	r17, 0x01	; 1
     8f0:	fc 01       	movw	r30, r24
     8f2:	60 81       	ld	r22, Z
     8f4:	71 81       	ldd	r23, Z+1	; 0x01
     8f6:	82 81       	ldd	r24, Z+2	; 0x02
     8f8:	93 81       	ldd	r25, Z+3	; 0x03
     8fa:	20 e0       	ldi	r18, 0x00	; 0
     8fc:	30 e0       	ldi	r19, 0x00	; 0
     8fe:	40 e8       	ldi	r20, 0x80	; 128
     900:	5f e3       	ldi	r21, 0x3F	; 63
     902:	0e 94 e5 09 	call	0x13ca	; 0x13ca <__ltsf2>
     906:	88 23       	and	r24, r24
     908:	0c f0       	brlt	.+2      	; 0x90c <__stack+0xad>
     90a:	10 e0       	ldi	r17, 0x00	; 0
     90c:	11 23       	and	r17, r17
     90e:	49 f0       	breq	.+18     	; 0x922 <__stack+0xc3>
		__ticks = 1;
     910:	ce 01       	movw	r24, r28
     912:	82 59       	subi	r24, 0x92	; 146
     914:	9f 4f       	sbci	r25, 0xFF	; 255
     916:	21 e0       	ldi	r18, 0x01	; 1
     918:	30 e0       	ldi	r19, 0x00	; 0
     91a:	fc 01       	movw	r30, r24
     91c:	31 83       	std	Z+1, r19	; 0x01
     91e:	20 83       	st	Z, r18
     920:	74 c0       	rjmp	.+232    	; 0xa0a <__stack+0x1ab>
	else if (__tmp > 65535)
     922:	ce 01       	movw	r24, r28
     924:	86 59       	subi	r24, 0x96	; 150
     926:	9f 4f       	sbci	r25, 0xFF	; 255
     928:	11 e0       	ldi	r17, 0x01	; 1
     92a:	fc 01       	movw	r30, r24
     92c:	60 81       	ld	r22, Z
     92e:	71 81       	ldd	r23, Z+1	; 0x01
     930:	82 81       	ldd	r24, Z+2	; 0x02
     932:	93 81       	ldd	r25, Z+3	; 0x03
     934:	20 e0       	ldi	r18, 0x00	; 0
     936:	3f ef       	ldi	r19, 0xFF	; 255
     938:	4f e7       	ldi	r20, 0x7F	; 127
     93a:	57 e4       	ldi	r21, 0x47	; 71
     93c:	0e 94 85 09 	call	0x130a	; 0x130a <__gtsf2>
     940:	18 16       	cp	r1, r24
     942:	0c f0       	brlt	.+2      	; 0x946 <__stack+0xe7>
     944:	10 e0       	ldi	r17, 0x00	; 0
     946:	11 23       	and	r17, r17
     948:	09 f4       	brne	.+2      	; 0x94c <__stack+0xed>
     94a:	4d c0       	rjmp	.+154    	; 0x9e6 <__stack+0x187>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     94c:	ce 01       	movw	r24, r28
     94e:	8a 59       	subi	r24, 0x9A	; 154
     950:	9f 4f       	sbci	r25, 0xFF	; 255
     952:	fc 01       	movw	r30, r24
     954:	60 81       	ld	r22, Z
     956:	71 81       	ldd	r23, Z+1	; 0x01
     958:	82 81       	ldd	r24, Z+2	; 0x02
     95a:	93 81       	ldd	r25, Z+3	; 0x03
     95c:	20 e0       	ldi	r18, 0x00	; 0
     95e:	30 e0       	ldi	r19, 0x00	; 0
     960:	40 e2       	ldi	r20, 0x20	; 32
     962:	51 e4       	ldi	r21, 0x41	; 65
     964:	0e 94 dd 07 	call	0xfba	; 0xfba <__mulsf3>
     968:	dc 01       	movw	r26, r24
     96a:	cb 01       	movw	r24, r22
     96c:	8e 01       	movw	r16, r28
     96e:	02 59       	subi	r16, 0x92	; 146
     970:	1f 4f       	sbci	r17, 0xFF	; 255
     972:	bc 01       	movw	r22, r24
     974:	cd 01       	movw	r24, r26
     976:	0e 94 09 06 	call	0xc12	; 0xc12 <__fixunssfsi>
     97a:	dc 01       	movw	r26, r24
     97c:	cb 01       	movw	r24, r22
     97e:	f8 01       	movw	r30, r16
     980:	91 83       	std	Z+1, r25	; 0x01
     982:	80 83       	st	Z, r24
     984:	27 c0       	rjmp	.+78     	; 0x9d4 <__stack+0x175>
     986:	ce 01       	movw	r24, r28
     988:	80 59       	subi	r24, 0x90	; 144
     98a:	9f 4f       	sbci	r25, 0xFF	; 255
     98c:	20 e9       	ldi	r18, 0x90	; 144
     98e:	31 e0       	ldi	r19, 0x01	; 1
     990:	fc 01       	movw	r30, r24
     992:	31 83       	std	Z+1, r19	; 0x01
     994:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     996:	ce 01       	movw	r24, r28
     998:	80 59       	subi	r24, 0x90	; 144
     99a:	9f 4f       	sbci	r25, 0xFF	; 255
     99c:	fc 01       	movw	r30, r24
     99e:	80 81       	ld	r24, Z
     9a0:	91 81       	ldd	r25, Z+1	; 0x01
     9a2:	8c 01       	movw	r16, r24
     9a4:	c8 01       	movw	r24, r16
     9a6:	01 97       	sbiw	r24, 0x01	; 1
     9a8:	f1 f7       	brne	.-4      	; 0x9a6 <__stack+0x147>
     9aa:	8c 01       	movw	r16, r24
     9ac:	ce 01       	movw	r24, r28
     9ae:	80 59       	subi	r24, 0x90	; 144
     9b0:	9f 4f       	sbci	r25, 0xFF	; 255
     9b2:	fc 01       	movw	r30, r24
     9b4:	11 83       	std	Z+1, r17	; 0x01
     9b6:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9b8:	ce 01       	movw	r24, r28
     9ba:	82 59       	subi	r24, 0x92	; 146
     9bc:	9f 4f       	sbci	r25, 0xFF	; 255
     9be:	9e 01       	movw	r18, r28
     9c0:	22 59       	subi	r18, 0x92	; 146
     9c2:	3f 4f       	sbci	r19, 0xFF	; 255
     9c4:	f9 01       	movw	r30, r18
     9c6:	20 81       	ld	r18, Z
     9c8:	31 81       	ldd	r19, Z+1	; 0x01
     9ca:	21 50       	subi	r18, 0x01	; 1
     9cc:	30 40       	sbci	r19, 0x00	; 0
     9ce:	fc 01       	movw	r30, r24
     9d0:	31 83       	std	Z+1, r19	; 0x01
     9d2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9d4:	ce 01       	movw	r24, r28
     9d6:	82 59       	subi	r24, 0x92	; 146
     9d8:	9f 4f       	sbci	r25, 0xFF	; 255
     9da:	fc 01       	movw	r30, r24
     9dc:	80 81       	ld	r24, Z
     9de:	91 81       	ldd	r25, Z+1	; 0x01
     9e0:	00 97       	sbiw	r24, 0x00	; 0
     9e2:	89 f6       	brne	.-94     	; 0x986 <__stack+0x127>
     9e4:	58 c0       	rjmp	.+176    	; 0xa96 <__stack+0x237>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9e6:	8e 01       	movw	r16, r28
     9e8:	02 59       	subi	r16, 0x92	; 146
     9ea:	1f 4f       	sbci	r17, 0xFF	; 255
     9ec:	ce 01       	movw	r24, r28
     9ee:	86 59       	subi	r24, 0x96	; 150
     9f0:	9f 4f       	sbci	r25, 0xFF	; 255
     9f2:	fc 01       	movw	r30, r24
     9f4:	60 81       	ld	r22, Z
     9f6:	71 81       	ldd	r23, Z+1	; 0x01
     9f8:	82 81       	ldd	r24, Z+2	; 0x02
     9fa:	93 81       	ldd	r25, Z+3	; 0x03
     9fc:	0e 94 09 06 	call	0xc12	; 0xc12 <__fixunssfsi>
     a00:	dc 01       	movw	r26, r24
     a02:	cb 01       	movw	r24, r22
     a04:	f8 01       	movw	r30, r16
     a06:	91 83       	std	Z+1, r25	; 0x01
     a08:	80 83       	st	Z, r24
     a0a:	ce 01       	movw	r24, r28
     a0c:	8e 58       	subi	r24, 0x8E	; 142
     a0e:	9f 4f       	sbci	r25, 0xFF	; 255
     a10:	9e 01       	movw	r18, r28
     a12:	22 59       	subi	r18, 0x92	; 146
     a14:	3f 4f       	sbci	r19, 0xFF	; 255
     a16:	f9 01       	movw	r30, r18
     a18:	20 81       	ld	r18, Z
     a1a:	31 81       	ldd	r19, Z+1	; 0x01
     a1c:	fc 01       	movw	r30, r24
     a1e:	31 83       	std	Z+1, r19	; 0x01
     a20:	20 83       	st	Z, r18
     a22:	ce 01       	movw	r24, r28
     a24:	8e 58       	subi	r24, 0x8E	; 142
     a26:	9f 4f       	sbci	r25, 0xFF	; 255
     a28:	fc 01       	movw	r30, r24
     a2a:	80 81       	ld	r24, Z
     a2c:	91 81       	ldd	r25, Z+1	; 0x01
     a2e:	8c 01       	movw	r16, r24
     a30:	c8 01       	movw	r24, r16
     a32:	01 97       	sbiw	r24, 0x01	; 1
     a34:	f1 f7       	brne	.-4      	; 0xa32 <__stack+0x1d3>
     a36:	8c 01       	movw	r16, r24
     a38:	ce 01       	movw	r24, r28
     a3a:	8e 58       	subi	r24, 0x8E	; 142
     a3c:	9f 4f       	sbci	r25, 0xFF	; 255
     a3e:	fc 01       	movw	r30, r24
     a40:	11 83       	std	Z+1, r17	; 0x01
     a42:	00 83       	st	Z, r16
     a44:	28 c0       	rjmp	.+80     	; 0xa96 <__stack+0x237>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     a46:	8e 01       	movw	r16, r28
     a48:	0b 59       	subi	r16, 0x9B	; 155
     a4a:	1f 4f       	sbci	r17, 0xFF	; 255
     a4c:	ce 01       	movw	r24, r28
     a4e:	8f 59       	subi	r24, 0x9F	; 159
     a50:	9f 4f       	sbci	r25, 0xFF	; 255
     a52:	fc 01       	movw	r30, r24
     a54:	60 81       	ld	r22, Z
     a56:	71 81       	ldd	r23, Z+1	; 0x01
     a58:	82 81       	ldd	r24, Z+2	; 0x02
     a5a:	93 81       	ldd	r25, Z+3	; 0x03
     a5c:	0e 94 09 06 	call	0xc12	; 0xc12 <__fixunssfsi>
     a60:	dc 01       	movw	r26, r24
     a62:	cb 01       	movw	r24, r22
     a64:	f8 01       	movw	r30, r16
     a66:	80 83       	st	Z, r24
     a68:	ce 01       	movw	r24, r28
     a6a:	8c 58       	subi	r24, 0x8C	; 140
     a6c:	9f 4f       	sbci	r25, 0xFF	; 255
     a6e:	9e 01       	movw	r18, r28
     a70:	2b 59       	subi	r18, 0x9B	; 155
     a72:	3f 4f       	sbci	r19, 0xFF	; 255
     a74:	f9 01       	movw	r30, r18
     a76:	20 81       	ld	r18, Z
     a78:	fc 01       	movw	r30, r24
     a7a:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     a7c:	ce 01       	movw	r24, r28
     a7e:	8c 58       	subi	r24, 0x8C	; 140
     a80:	9f 4f       	sbci	r25, 0xFF	; 255
     a82:	fc 01       	movw	r30, r24
     a84:	80 81       	ld	r24, Z
     a86:	18 2f       	mov	r17, r24
     a88:	1a 95       	dec	r17
     a8a:	f1 f7       	brne	.-4      	; 0xa88 <__stack+0x229>
     a8c:	ce 01       	movw	r24, r28
     a8e:	8c 58       	subi	r24, 0x8C	; 140
     a90:	9f 4f       	sbci	r25, 0xFF	; 255
     a92:	fc 01       	movw	r30, r24
     a94:	10 83       	st	Z, r17

            switch_counter++;
     a96:	8b 85       	ldd	r24, Y+11	; 0x0b
     a98:	9c 85       	ldd	r25, Y+12	; 0x0c
     a9a:	01 96       	adiw	r24, 0x01	; 1
     a9c:	9c 87       	std	Y+12, r25	; 0x0c
     a9e:	8b 87       	std	Y+11, r24	; 0x0b
            inc_counter++;
     aa0:	8d 85       	ldd	r24, Y+13	; 0x0d
     aa2:	9e 85       	ldd	r25, Y+14	; 0x0e
     aa4:	01 96       	adiw	r24, 0x01	; 1
     aa6:	9e 87       	std	Y+14, r25	; 0x0e
     aa8:	8d 87       	std	Y+13, r24	; 0x0d


            if (inc_counter == 50)
     aaa:	8d 85       	ldd	r24, Y+13	; 0x0d
     aac:	9e 85       	ldd	r25, Y+14	; 0x0e
     aae:	82 33       	cpi	r24, 0x32	; 50
     ab0:	91 05       	cpc	r25, r1
     ab2:	51 f4       	brne	.+20     	; 0xac8 <__stack+0x269>
            {


                liczba1 = liczba;
     ab4:	89 81       	ldd	r24, Y+1	; 0x01
     ab6:	9a 81       	ldd	r25, Y+2	; 0x02
     ab8:	9c 83       	std	Y+4, r25	; 0x04
     aba:	8b 83       	std	Y+3, r24	; 0x03
                liczba2 = 0;
     abc:	1e 82       	std	Y+6, r1	; 0x06
     abe:	1d 82       	std	Y+5, r1	; 0x05
                liczba3 = 0;
     ac0:	18 86       	std	Y+8, r1	; 0x08
     ac2:	1f 82       	std	Y+7, r1	; 0x07
                liczba4 = 0;
     ac4:	1a 86       	std	Y+10, r1	; 0x0a
     ac6:	19 86       	std	Y+9, r1	; 0x09

            }

            if (inc_counter == 100)
     ac8:	8d 85       	ldd	r24, Y+13	; 0x0d
     aca:	9e 85       	ldd	r25, Y+14	; 0x0e
     acc:	84 36       	cpi	r24, 0x64	; 100
     ace:	91 05       	cpc	r25, r1
     ad0:	51 f4       	brne	.+20     	; 0xae6 <__stack+0x287>
            {

                liczba1 = 0;
     ad2:	1c 82       	std	Y+4, r1	; 0x04
     ad4:	1b 82       	std	Y+3, r1	; 0x03
                liczba2 = liczba;
     ad6:	89 81       	ldd	r24, Y+1	; 0x01
     ad8:	9a 81       	ldd	r25, Y+2	; 0x02
     ada:	9e 83       	std	Y+6, r25	; 0x06
     adc:	8d 83       	std	Y+5, r24	; 0x05
                liczba3 = 0;
     ade:	18 86       	std	Y+8, r1	; 0x08
     ae0:	1f 82       	std	Y+7, r1	; 0x07
                liczba4 = 0;
     ae2:	1a 86       	std	Y+10, r1	; 0x0a
     ae4:	19 86       	std	Y+9, r1	; 0x09

            }

            if (inc_counter == 150)
     ae6:	8d 85       	ldd	r24, Y+13	; 0x0d
     ae8:	9e 85       	ldd	r25, Y+14	; 0x0e
     aea:	86 39       	cpi	r24, 0x96	; 150
     aec:	91 05       	cpc	r25, r1
     aee:	51 f4       	brne	.+20     	; 0xb04 <__stack+0x2a5>
            {

                liczba1 = 0;
     af0:	1c 82       	std	Y+4, r1	; 0x04
     af2:	1b 82       	std	Y+3, r1	; 0x03
                liczba2 = 0;
     af4:	1e 82       	std	Y+6, r1	; 0x06
     af6:	1d 82       	std	Y+5, r1	; 0x05
                liczba3 = liczba;
     af8:	89 81       	ldd	r24, Y+1	; 0x01
     afa:	9a 81       	ldd	r25, Y+2	; 0x02
     afc:	98 87       	std	Y+8, r25	; 0x08
     afe:	8f 83       	std	Y+7, r24	; 0x07
                liczba4 = 0;
     b00:	1a 86       	std	Y+10, r1	; 0x0a
     b02:	19 86       	std	Y+9, r1	; 0x09

            }

            if (inc_counter == 200)
     b04:	8d 85       	ldd	r24, Y+13	; 0x0d
     b06:	9e 85       	ldd	r25, Y+14	; 0x0e
     b08:	88 3c       	cpi	r24, 0xC8	; 200
     b0a:	91 05       	cpc	r25, r1
     b0c:	51 f4       	brne	.+20     	; 0xb22 <__stack+0x2c3>
            {
                liczba1 = 0;
     b0e:	1c 82       	std	Y+4, r1	; 0x04
     b10:	1b 82       	std	Y+3, r1	; 0x03
                liczba2 = 0;
     b12:	1e 82       	std	Y+6, r1	; 0x06
     b14:	1d 82       	std	Y+5, r1	; 0x05
                liczba3 = 0;
     b16:	18 86       	std	Y+8, r1	; 0x08
     b18:	1f 82       	std	Y+7, r1	; 0x07
                liczba4 = liczba;
     b1a:	89 81       	ldd	r24, Y+1	; 0x01
     b1c:	9a 81       	ldd	r25, Y+2	; 0x02
     b1e:	9a 87       	std	Y+10, r25	; 0x0a
     b20:	89 87       	std	Y+9, r24	; 0x09


            }

            if (switch_counter == 200)
     b22:	8b 85       	ldd	r24, Y+11	; 0x0b
     b24:	9c 85       	ldd	r25, Y+12	; 0x0c
     b26:	88 3c       	cpi	r24, 0xC8	; 200
     b28:	91 05       	cpc	r25, r1
     b2a:	49 f4       	brne	.+18     	; 0xb3e <__stack+0x2df>
            {

                switch_counter = 0;
     b2c:	1c 86       	std	Y+12, r1	; 0x0c
     b2e:	1b 86       	std	Y+11, r1	; 0x0b
                inc_counter = 0;
     b30:	1e 86       	std	Y+14, r1	; 0x0e
     b32:	1d 86       	std	Y+13, r1	; 0x0d
                liczba++;
     b34:	89 81       	ldd	r24, Y+1	; 0x01
     b36:	9a 81       	ldd	r25, Y+2	; 0x02
     b38:	01 96       	adiw	r24, 0x01	; 1
     b3a:	9a 83       	std	Y+2, r25	; 0x02
     b3c:	89 83       	std	Y+1, r24	; 0x01

            }



            if (liczba == 10)
     b3e:	89 81       	ldd	r24, Y+1	; 0x01
     b40:	9a 81       	ldd	r25, Y+2	; 0x02
     b42:	8a 30       	cpi	r24, 0x0A	; 10
     b44:	91 05       	cpc	r25, r1
     b46:	11 f4       	brne	.+4      	; 0xb4c <__stack+0x2ed>
            {

                liczba = 0;
     b48:	1a 82       	std	Y+2, r1	; 0x02
     b4a:	19 82       	std	Y+1, r1	; 0x01

    int sterowanie = 0b11111110;

    while(1)
    {
        for (int i = 0 ; i < 4 ; i++)
     b4c:	8f 85       	ldd	r24, Y+15	; 0x0f
     b4e:	98 89       	ldd	r25, Y+16	; 0x10
     b50:	01 96       	adiw	r24, 0x01	; 1
     b52:	98 8b       	std	Y+16, r25	; 0x10
     b54:	8f 87       	std	Y+15, r24	; 0x0f
     b56:	8f 85       	ldd	r24, Y+15	; 0x0f
     b58:	98 89       	ldd	r25, Y+16	; 0x10
     b5a:	84 30       	cpi	r24, 0x04	; 4
     b5c:	91 05       	cpc	r25, r1
     b5e:	0c f4       	brge	.+2      	; 0xb62 <__stack+0x303>
     b60:	c2 ca       	rjmp	.-2684   	; 0xe6 <main+0x64>
                liczba = 0;
            }

        }

    };
     b62:	be ca       	rjmp	.-2692   	; 0xe0 <main+0x5e>

00000b64 <cyfra>:
    return 0;
}


int cyfra(int _cyfra)
{
     b64:	df 93       	push	r29
     b66:	cf 93       	push	r28
     b68:	00 d0       	rcall	.+0      	; 0xb6a <cyfra+0x6>
     b6a:	cd b7       	in	r28, 0x3d	; 61
     b6c:	de b7       	in	r29, 0x3e	; 62
     b6e:	9a 83       	std	Y+2, r25	; 0x02
     b70:	89 83       	std	Y+1, r24	; 0x01
		switch(_cyfra)
     b72:	89 81       	ldd	r24, Y+1	; 0x01
     b74:	9a 81       	ldd	r25, Y+2	; 0x02
     b76:	84 30       	cpi	r24, 0x04	; 4
     b78:	91 05       	cpc	r25, r1
     b7a:	99 f1       	breq	.+102    	; 0xbe2 <cyfra+0x7e>
     b7c:	85 30       	cpi	r24, 0x05	; 5
     b7e:	91 05       	cpc	r25, r1
     b80:	84 f4       	brge	.+32     	; 0xba2 <cyfra+0x3e>
     b82:	81 30       	cpi	r24, 0x01	; 1
     b84:	91 05       	cpc	r25, r1
     b86:	21 f1       	breq	.+72     	; 0xbd0 <cyfra+0x6c>
     b88:	82 30       	cpi	r24, 0x02	; 2
     b8a:	91 05       	cpc	r25, r1
     b8c:	1c f4       	brge	.+6      	; 0xb94 <cyfra+0x30>
     b8e:	00 97       	sbiw	r24, 0x00	; 0
     b90:	e1 f0       	breq	.+56     	; 0xbca <cyfra+0x66>
     b92:	39 c0       	rjmp	.+114    	; 0xc06 <cyfra+0xa2>
     b94:	82 30       	cpi	r24, 0x02	; 2
     b96:	91 05       	cpc	r25, r1
     b98:	f1 f0       	breq	.+60     	; 0xbd6 <cyfra+0x72>
     b9a:	83 30       	cpi	r24, 0x03	; 3
     b9c:	91 05       	cpc	r25, r1
     b9e:	f1 f0       	breq	.+60     	; 0xbdc <cyfra+0x78>
     ba0:	32 c0       	rjmp	.+100    	; 0xc06 <cyfra+0xa2>
     ba2:	87 30       	cpi	r24, 0x07	; 7
     ba4:	91 05       	cpc	r25, r1
     ba6:	31 f1       	breq	.+76     	; 0xbf4 <cyfra+0x90>
     ba8:	88 30       	cpi	r24, 0x08	; 8
     baa:	91 05       	cpc	r25, r1
     bac:	3c f4       	brge	.+14     	; 0xbbc <cyfra+0x58>
     bae:	85 30       	cpi	r24, 0x05	; 5
     bb0:	91 05       	cpc	r25, r1
     bb2:	d1 f0       	breq	.+52     	; 0xbe8 <cyfra+0x84>
     bb4:	86 30       	cpi	r24, 0x06	; 6
     bb6:	91 05       	cpc	r25, r1
     bb8:	d1 f0       	breq	.+52     	; 0xbee <cyfra+0x8a>
     bba:	25 c0       	rjmp	.+74     	; 0xc06 <cyfra+0xa2>
     bbc:	88 30       	cpi	r24, 0x08	; 8
     bbe:	91 05       	cpc	r25, r1
     bc0:	e1 f0       	breq	.+56     	; 0xbfa <cyfra+0x96>
     bc2:	89 30       	cpi	r24, 0x09	; 9
     bc4:	91 05       	cpc	r25, r1
     bc6:	e1 f0       	breq	.+56     	; 0xc00 <cyfra+0x9c>
     bc8:	1e c0       	rjmp	.+60     	; 0xc06 <cyfra+0xa2>
		{
		case 0:
		return 0b11000000; //0
     bca:	80 ec       	ldi	r24, 0xC0	; 192
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	1c c0       	rjmp	.+56     	; 0xc08 <cyfra+0xa4>

		case 1:
		return 0b11111001; //1
     bd0:	89 ef       	ldi	r24, 0xF9	; 249
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	19 c0       	rjmp	.+50     	; 0xc08 <cyfra+0xa4>

		case 2:
		return 0b10100100; //2
     bd6:	84 ea       	ldi	r24, 0xA4	; 164
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	16 c0       	rjmp	.+44     	; 0xc08 <cyfra+0xa4>

		case 3:
		return 0b10110000; //3
     bdc:	80 eb       	ldi	r24, 0xB0	; 176
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	13 c0       	rjmp	.+38     	; 0xc08 <cyfra+0xa4>

		case 4:
		return 0b10011001; //4
     be2:	89 e9       	ldi	r24, 0x99	; 153
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	10 c0       	rjmp	.+32     	; 0xc08 <cyfra+0xa4>

		case 5:
		return 0b10010010; //5
     be8:	82 e9       	ldi	r24, 0x92	; 146
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	0d c0       	rjmp	.+26     	; 0xc08 <cyfra+0xa4>

		case 6:
		return 0b10000010; //6
     bee:	82 e8       	ldi	r24, 0x82	; 130
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	0a c0       	rjmp	.+20     	; 0xc08 <cyfra+0xa4>

		case 7:
		return 0b11111000; //7
     bf4:	88 ef       	ldi	r24, 0xF8	; 248
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	07 c0       	rjmp	.+14     	; 0xc08 <cyfra+0xa4>

		case 8:
		return 0b10000000; //8
     bfa:	80 e8       	ldi	r24, 0x80	; 128
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	04 c0       	rjmp	.+8      	; 0xc08 <cyfra+0xa4>

		case 9:
		return 0b10010000; //9
     c00:	80 e9       	ldi	r24, 0x90	; 144
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	01 c0       	rjmp	.+2      	; 0xc08 <cyfra+0xa4>
     c06:	00 c0       	rjmp	.+0      	; 0xc08 <cyfra+0xa4>



		}

}
     c08:	0f 90       	pop	r0
     c0a:	0f 90       	pop	r0
     c0c:	cf 91       	pop	r28
     c0e:	df 91       	pop	r29
     c10:	08 95       	ret

00000c12 <__fixunssfsi>:
     c12:	ef 92       	push	r14
     c14:	ff 92       	push	r15
     c16:	0f 93       	push	r16
     c18:	1f 93       	push	r17
     c1a:	7b 01       	movw	r14, r22
     c1c:	8c 01       	movw	r16, r24
     c1e:	20 e0       	ldi	r18, 0x00	; 0
     c20:	30 e0       	ldi	r19, 0x00	; 0
     c22:	40 e0       	ldi	r20, 0x00	; 0
     c24:	5f e4       	ldi	r21, 0x4F	; 79
     c26:	0e 94 b5 09 	call	0x136a	; 0x136a <__gesf2>
     c2a:	87 fd       	sbrc	r24, 7
     c2c:	11 c0       	rjmp	.+34     	; 0xc50 <__fixunssfsi+0x3e>
     c2e:	c8 01       	movw	r24, r16
     c30:	b7 01       	movw	r22, r14
     c32:	20 e0       	ldi	r18, 0x00	; 0
     c34:	30 e0       	ldi	r19, 0x00	; 0
     c36:	40 e0       	ldi	r20, 0x00	; 0
     c38:	5f e4       	ldi	r21, 0x4F	; 79
     c3a:	0e 94 ac 07 	call	0xf58	; 0xf58 <__subsf3>
     c3e:	0e 94 75 0a 	call	0x14ea	; 0x14ea <__fixsfsi>
     c42:	9b 01       	movw	r18, r22
     c44:	ac 01       	movw	r20, r24
     c46:	20 50       	subi	r18, 0x00	; 0
     c48:	30 40       	sbci	r19, 0x00	; 0
     c4a:	40 40       	sbci	r20, 0x00	; 0
     c4c:	50 48       	sbci	r21, 0x80	; 128
     c4e:	06 c0       	rjmp	.+12     	; 0xc5c <__fixunssfsi+0x4a>
     c50:	c8 01       	movw	r24, r16
     c52:	b7 01       	movw	r22, r14
     c54:	0e 94 75 0a 	call	0x14ea	; 0x14ea <__fixsfsi>
     c58:	9b 01       	movw	r18, r22
     c5a:	ac 01       	movw	r20, r24
     c5c:	b9 01       	movw	r22, r18
     c5e:	ca 01       	movw	r24, r20
     c60:	1f 91       	pop	r17
     c62:	0f 91       	pop	r16
     c64:	ff 90       	pop	r15
     c66:	ef 90       	pop	r14
     c68:	08 95       	ret

00000c6a <_fpadd_parts>:
     c6a:	a0 e0       	ldi	r26, 0x00	; 0
     c6c:	b0 e0       	ldi	r27, 0x00	; 0
     c6e:	eb e3       	ldi	r30, 0x3B	; 59
     c70:	f6 e0       	ldi	r31, 0x06	; 6
     c72:	0c 94 b5 0c 	jmp	0x196a	; 0x196a <__prologue_saves__+0x8>
     c76:	fc 01       	movw	r30, r24
     c78:	ea 01       	movw	r28, r20
     c7a:	80 81       	ld	r24, Z
     c7c:	82 30       	cpi	r24, 0x02	; 2
     c7e:	08 f4       	brcc	.+2      	; 0xc82 <_fpadd_parts+0x18>
     c80:	38 c1       	rjmp	.+624    	; 0xef2 <_fpadd_parts+0x288>
     c82:	db 01       	movw	r26, r22
     c84:	9c 91       	ld	r25, X
     c86:	92 30       	cpi	r25, 0x02	; 2
     c88:	08 f4       	brcc	.+2      	; 0xc8c <_fpadd_parts+0x22>
     c8a:	30 c1       	rjmp	.+608    	; 0xeec <_fpadd_parts+0x282>
     c8c:	84 30       	cpi	r24, 0x04	; 4
     c8e:	59 f4       	brne	.+22     	; 0xca6 <_fpadd_parts+0x3c>
     c90:	94 30       	cpi	r25, 0x04	; 4
     c92:	09 f0       	breq	.+2      	; 0xc96 <_fpadd_parts+0x2c>
     c94:	2e c1       	rjmp	.+604    	; 0xef2 <_fpadd_parts+0x288>
     c96:	91 81       	ldd	r25, Z+1	; 0x01
     c98:	11 96       	adiw	r26, 0x01	; 1
     c9a:	8c 91       	ld	r24, X
     c9c:	11 97       	sbiw	r26, 0x01	; 1
     c9e:	98 17       	cp	r25, r24
     ca0:	09 f0       	breq	.+2      	; 0xca4 <_fpadd_parts+0x3a>
     ca2:	21 c1       	rjmp	.+578    	; 0xee6 <_fpadd_parts+0x27c>
     ca4:	26 c1       	rjmp	.+588    	; 0xef2 <_fpadd_parts+0x288>
     ca6:	94 30       	cpi	r25, 0x04	; 4
     ca8:	09 f4       	brne	.+2      	; 0xcac <_fpadd_parts+0x42>
     caa:	20 c1       	rjmp	.+576    	; 0xeec <_fpadd_parts+0x282>
     cac:	92 30       	cpi	r25, 0x02	; 2
     cae:	b1 f4       	brne	.+44     	; 0xcdc <_fpadd_parts+0x72>
     cb0:	82 30       	cpi	r24, 0x02	; 2
     cb2:	09 f0       	breq	.+2      	; 0xcb6 <_fpadd_parts+0x4c>
     cb4:	1e c1       	rjmp	.+572    	; 0xef2 <_fpadd_parts+0x288>
     cb6:	ca 01       	movw	r24, r20
     cb8:	af 01       	movw	r20, r30
     cba:	28 e0       	ldi	r18, 0x08	; 8
     cbc:	da 01       	movw	r26, r20
     cbe:	0d 90       	ld	r0, X+
     cc0:	ad 01       	movw	r20, r26
     cc2:	dc 01       	movw	r26, r24
     cc4:	0d 92       	st	X+, r0
     cc6:	cd 01       	movw	r24, r26
     cc8:	21 50       	subi	r18, 0x01	; 1
     cca:	c1 f7       	brne	.-16     	; 0xcbc <_fpadd_parts+0x52>
     ccc:	db 01       	movw	r26, r22
     cce:	11 96       	adiw	r26, 0x01	; 1
     cd0:	8c 91       	ld	r24, X
     cd2:	11 97       	sbiw	r26, 0x01	; 1
     cd4:	91 81       	ldd	r25, Z+1	; 0x01
     cd6:	89 23       	and	r24, r25
     cd8:	89 83       	std	Y+1, r24	; 0x01
     cda:	0a c1       	rjmp	.+532    	; 0xef0 <_fpadd_parts+0x286>
     cdc:	82 30       	cpi	r24, 0x02	; 2
     cde:	09 f4       	brne	.+2      	; 0xce2 <_fpadd_parts+0x78>
     ce0:	05 c1       	rjmp	.+522    	; 0xeec <_fpadd_parts+0x282>
     ce2:	c2 80       	ldd	r12, Z+2	; 0x02
     ce4:	d3 80       	ldd	r13, Z+3	; 0x03
     ce6:	db 01       	movw	r26, r22
     ce8:	12 96       	adiw	r26, 0x02	; 2
     cea:	6d 90       	ld	r6, X+
     cec:	7c 90       	ld	r7, X
     cee:	13 97       	sbiw	r26, 0x03	; 3
     cf0:	24 81       	ldd	r18, Z+4	; 0x04
     cf2:	35 81       	ldd	r19, Z+5	; 0x05
     cf4:	46 81       	ldd	r20, Z+6	; 0x06
     cf6:	57 81       	ldd	r21, Z+7	; 0x07
     cf8:	14 96       	adiw	r26, 0x04	; 4
     cfa:	ed 90       	ld	r14, X+
     cfc:	fd 90       	ld	r15, X+
     cfe:	0d 91       	ld	r16, X+
     d00:	1c 91       	ld	r17, X
     d02:	17 97       	sbiw	r26, 0x07	; 7
     d04:	c6 01       	movw	r24, r12
     d06:	86 19       	sub	r24, r6
     d08:	97 09       	sbc	r25, r7
     d0a:	5c 01       	movw	r10, r24
     d0c:	97 ff       	sbrs	r25, 7
     d0e:	04 c0       	rjmp	.+8      	; 0xd18 <_fpadd_parts+0xae>
     d10:	aa 24       	eor	r10, r10
     d12:	bb 24       	eor	r11, r11
     d14:	a8 1a       	sub	r10, r24
     d16:	b9 0a       	sbc	r11, r25
     d18:	b0 e2       	ldi	r27, 0x20	; 32
     d1a:	ab 16       	cp	r10, r27
     d1c:	b1 04       	cpc	r11, r1
     d1e:	0c f0       	brlt	.+2      	; 0xd22 <_fpadd_parts+0xb8>
     d20:	61 c0       	rjmp	.+194    	; 0xde4 <_fpadd_parts+0x17a>
     d22:	18 16       	cp	r1, r24
     d24:	19 06       	cpc	r1, r25
     d26:	6c f5       	brge	.+90     	; 0xd82 <_fpadd_parts+0x118>
     d28:	37 01       	movw	r6, r14
     d2a:	48 01       	movw	r8, r16
     d2c:	0a 2c       	mov	r0, r10
     d2e:	04 c0       	rjmp	.+8      	; 0xd38 <_fpadd_parts+0xce>
     d30:	96 94       	lsr	r9
     d32:	87 94       	ror	r8
     d34:	77 94       	ror	r7
     d36:	67 94       	ror	r6
     d38:	0a 94       	dec	r0
     d3a:	d2 f7       	brpl	.-12     	; 0xd30 <_fpadd_parts+0xc6>
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	a0 e0       	ldi	r26, 0x00	; 0
     d42:	b0 e0       	ldi	r27, 0x00	; 0
     d44:	0a 2c       	mov	r0, r10
     d46:	04 c0       	rjmp	.+8      	; 0xd50 <_fpadd_parts+0xe6>
     d48:	88 0f       	add	r24, r24
     d4a:	99 1f       	adc	r25, r25
     d4c:	aa 1f       	adc	r26, r26
     d4e:	bb 1f       	adc	r27, r27
     d50:	0a 94       	dec	r0
     d52:	d2 f7       	brpl	.-12     	; 0xd48 <_fpadd_parts+0xde>
     d54:	01 97       	sbiw	r24, 0x01	; 1
     d56:	a1 09       	sbc	r26, r1
     d58:	b1 09       	sbc	r27, r1
     d5a:	8e 21       	and	r24, r14
     d5c:	9f 21       	and	r25, r15
     d5e:	a0 23       	and	r26, r16
     d60:	b1 23       	and	r27, r17
     d62:	ee 24       	eor	r14, r14
     d64:	ff 24       	eor	r15, r15
     d66:	87 01       	movw	r16, r14
     d68:	e3 94       	inc	r14
     d6a:	00 97       	sbiw	r24, 0x00	; 0
     d6c:	a1 05       	cpc	r26, r1
     d6e:	b1 05       	cpc	r27, r1
     d70:	19 f4       	brne	.+6      	; 0xd78 <_fpadd_parts+0x10e>
     d72:	ee 24       	eor	r14, r14
     d74:	ff 24       	eor	r15, r15
     d76:	87 01       	movw	r16, r14
     d78:	e6 28       	or	r14, r6
     d7a:	f7 28       	or	r15, r7
     d7c:	08 29       	or	r16, r8
     d7e:	19 29       	or	r17, r9
     d80:	3c c0       	rjmp	.+120    	; 0xdfa <_fpadd_parts+0x190>
     d82:	00 97       	sbiw	r24, 0x00	; 0
     d84:	d1 f1       	breq	.+116    	; 0xdfa <_fpadd_parts+0x190>
     d86:	ca 0c       	add	r12, r10
     d88:	db 1c       	adc	r13, r11
     d8a:	39 01       	movw	r6, r18
     d8c:	4a 01       	movw	r8, r20
     d8e:	0a 2c       	mov	r0, r10
     d90:	04 c0       	rjmp	.+8      	; 0xd9a <_fpadd_parts+0x130>
     d92:	96 94       	lsr	r9
     d94:	87 94       	ror	r8
     d96:	77 94       	ror	r7
     d98:	67 94       	ror	r6
     d9a:	0a 94       	dec	r0
     d9c:	d2 f7       	brpl	.-12     	; 0xd92 <_fpadd_parts+0x128>
     d9e:	81 e0       	ldi	r24, 0x01	; 1
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	a0 e0       	ldi	r26, 0x00	; 0
     da4:	b0 e0       	ldi	r27, 0x00	; 0
     da6:	0a 2c       	mov	r0, r10
     da8:	04 c0       	rjmp	.+8      	; 0xdb2 <_fpadd_parts+0x148>
     daa:	88 0f       	add	r24, r24
     dac:	99 1f       	adc	r25, r25
     dae:	aa 1f       	adc	r26, r26
     db0:	bb 1f       	adc	r27, r27
     db2:	0a 94       	dec	r0
     db4:	d2 f7       	brpl	.-12     	; 0xdaa <_fpadd_parts+0x140>
     db6:	01 97       	sbiw	r24, 0x01	; 1
     db8:	a1 09       	sbc	r26, r1
     dba:	b1 09       	sbc	r27, r1
     dbc:	82 23       	and	r24, r18
     dbe:	93 23       	and	r25, r19
     dc0:	a4 23       	and	r26, r20
     dc2:	b5 23       	and	r27, r21
     dc4:	21 e0       	ldi	r18, 0x01	; 1
     dc6:	30 e0       	ldi	r19, 0x00	; 0
     dc8:	40 e0       	ldi	r20, 0x00	; 0
     dca:	50 e0       	ldi	r21, 0x00	; 0
     dcc:	00 97       	sbiw	r24, 0x00	; 0
     dce:	a1 05       	cpc	r26, r1
     dd0:	b1 05       	cpc	r27, r1
     dd2:	19 f4       	brne	.+6      	; 0xdda <_fpadd_parts+0x170>
     dd4:	20 e0       	ldi	r18, 0x00	; 0
     dd6:	30 e0       	ldi	r19, 0x00	; 0
     dd8:	a9 01       	movw	r20, r18
     dda:	26 29       	or	r18, r6
     ddc:	37 29       	or	r19, r7
     dde:	48 29       	or	r20, r8
     de0:	59 29       	or	r21, r9
     de2:	0b c0       	rjmp	.+22     	; 0xdfa <_fpadd_parts+0x190>
     de4:	6c 14       	cp	r6, r12
     de6:	7d 04       	cpc	r7, r13
     de8:	24 f4       	brge	.+8      	; 0xdf2 <_fpadd_parts+0x188>
     dea:	ee 24       	eor	r14, r14
     dec:	ff 24       	eor	r15, r15
     dee:	87 01       	movw	r16, r14
     df0:	04 c0       	rjmp	.+8      	; 0xdfa <_fpadd_parts+0x190>
     df2:	63 01       	movw	r12, r6
     df4:	20 e0       	ldi	r18, 0x00	; 0
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	a9 01       	movw	r20, r18
     dfa:	81 81       	ldd	r24, Z+1	; 0x01
     dfc:	fb 01       	movw	r30, r22
     dfe:	91 81       	ldd	r25, Z+1	; 0x01
     e00:	89 17       	cp	r24, r25
     e02:	09 f4       	brne	.+2      	; 0xe06 <_fpadd_parts+0x19c>
     e04:	45 c0       	rjmp	.+138    	; 0xe90 <_fpadd_parts+0x226>
     e06:	88 23       	and	r24, r24
     e08:	49 f0       	breq	.+18     	; 0xe1c <_fpadd_parts+0x1b2>
     e0a:	d8 01       	movw	r26, r16
     e0c:	c7 01       	movw	r24, r14
     e0e:	82 1b       	sub	r24, r18
     e10:	93 0b       	sbc	r25, r19
     e12:	a4 0b       	sbc	r26, r20
     e14:	b5 0b       	sbc	r27, r21
     e16:	9c 01       	movw	r18, r24
     e18:	ad 01       	movw	r20, r26
     e1a:	04 c0       	rjmp	.+8      	; 0xe24 <_fpadd_parts+0x1ba>
     e1c:	2e 19       	sub	r18, r14
     e1e:	3f 09       	sbc	r19, r15
     e20:	40 0b       	sbc	r20, r16
     e22:	51 0b       	sbc	r21, r17
     e24:	57 fd       	sbrc	r21, 7
     e26:	04 c0       	rjmp	.+8      	; 0xe30 <_fpadd_parts+0x1c6>
     e28:	19 82       	std	Y+1, r1	; 0x01
     e2a:	db 82       	std	Y+3, r13	; 0x03
     e2c:	ca 82       	std	Y+2, r12	; 0x02
     e2e:	0b c0       	rjmp	.+22     	; 0xe46 <_fpadd_parts+0x1dc>
     e30:	81 e0       	ldi	r24, 0x01	; 1
     e32:	89 83       	std	Y+1, r24	; 0x01
     e34:	db 82       	std	Y+3, r13	; 0x03
     e36:	ca 82       	std	Y+2, r12	; 0x02
     e38:	50 95       	com	r21
     e3a:	40 95       	com	r20
     e3c:	30 95       	com	r19
     e3e:	21 95       	neg	r18
     e40:	3f 4f       	sbci	r19, 0xFF	; 255
     e42:	4f 4f       	sbci	r20, 0xFF	; 255
     e44:	5f 4f       	sbci	r21, 0xFF	; 255
     e46:	2c 83       	std	Y+4, r18	; 0x04
     e48:	3d 83       	std	Y+5, r19	; 0x05
     e4a:	4e 83       	std	Y+6, r20	; 0x06
     e4c:	5f 83       	std	Y+7, r21	; 0x07
     e4e:	0d c0       	rjmp	.+26     	; 0xe6a <_fpadd_parts+0x200>
     e50:	88 0f       	add	r24, r24
     e52:	99 1f       	adc	r25, r25
     e54:	aa 1f       	adc	r26, r26
     e56:	bb 1f       	adc	r27, r27
     e58:	8c 83       	std	Y+4, r24	; 0x04
     e5a:	9d 83       	std	Y+5, r25	; 0x05
     e5c:	ae 83       	std	Y+6, r26	; 0x06
     e5e:	bf 83       	std	Y+7, r27	; 0x07
     e60:	8a 81       	ldd	r24, Y+2	; 0x02
     e62:	9b 81       	ldd	r25, Y+3	; 0x03
     e64:	01 97       	sbiw	r24, 0x01	; 1
     e66:	9b 83       	std	Y+3, r25	; 0x03
     e68:	8a 83       	std	Y+2, r24	; 0x02
     e6a:	8c 81       	ldd	r24, Y+4	; 0x04
     e6c:	9d 81       	ldd	r25, Y+5	; 0x05
     e6e:	ae 81       	ldd	r26, Y+6	; 0x06
     e70:	bf 81       	ldd	r27, Y+7	; 0x07
     e72:	9c 01       	movw	r18, r24
     e74:	ad 01       	movw	r20, r26
     e76:	21 50       	subi	r18, 0x01	; 1
     e78:	30 40       	sbci	r19, 0x00	; 0
     e7a:	40 40       	sbci	r20, 0x00	; 0
     e7c:	50 40       	sbci	r21, 0x00	; 0
     e7e:	2f 3f       	cpi	r18, 0xFF	; 255
     e80:	ef ef       	ldi	r30, 0xFF	; 255
     e82:	3e 07       	cpc	r19, r30
     e84:	ef ef       	ldi	r30, 0xFF	; 255
     e86:	4e 07       	cpc	r20, r30
     e88:	ef e3       	ldi	r30, 0x3F	; 63
     e8a:	5e 07       	cpc	r21, r30
     e8c:	08 f3       	brcs	.-62     	; 0xe50 <_fpadd_parts+0x1e6>
     e8e:	0b c0       	rjmp	.+22     	; 0xea6 <_fpadd_parts+0x23c>
     e90:	89 83       	std	Y+1, r24	; 0x01
     e92:	db 82       	std	Y+3, r13	; 0x03
     e94:	ca 82       	std	Y+2, r12	; 0x02
     e96:	2e 0d       	add	r18, r14
     e98:	3f 1d       	adc	r19, r15
     e9a:	40 1f       	adc	r20, r16
     e9c:	51 1f       	adc	r21, r17
     e9e:	2c 83       	std	Y+4, r18	; 0x04
     ea0:	3d 83       	std	Y+5, r19	; 0x05
     ea2:	4e 83       	std	Y+6, r20	; 0x06
     ea4:	5f 83       	std	Y+7, r21	; 0x07
     ea6:	83 e0       	ldi	r24, 0x03	; 3
     ea8:	88 83       	st	Y, r24
     eaa:	2c 81       	ldd	r18, Y+4	; 0x04
     eac:	3d 81       	ldd	r19, Y+5	; 0x05
     eae:	4e 81       	ldd	r20, Y+6	; 0x06
     eb0:	5f 81       	ldd	r21, Y+7	; 0x07
     eb2:	57 ff       	sbrs	r21, 7
     eb4:	1d c0       	rjmp	.+58     	; 0xef0 <_fpadd_parts+0x286>
     eb6:	da 01       	movw	r26, r20
     eb8:	c9 01       	movw	r24, r18
     eba:	81 70       	andi	r24, 0x01	; 1
     ebc:	90 70       	andi	r25, 0x00	; 0
     ebe:	a0 70       	andi	r26, 0x00	; 0
     ec0:	b0 70       	andi	r27, 0x00	; 0
     ec2:	56 95       	lsr	r21
     ec4:	47 95       	ror	r20
     ec6:	37 95       	ror	r19
     ec8:	27 95       	ror	r18
     eca:	82 2b       	or	r24, r18
     ecc:	93 2b       	or	r25, r19
     ece:	a4 2b       	or	r26, r20
     ed0:	b5 2b       	or	r27, r21
     ed2:	8c 83       	std	Y+4, r24	; 0x04
     ed4:	9d 83       	std	Y+5, r25	; 0x05
     ed6:	ae 83       	std	Y+6, r26	; 0x06
     ed8:	bf 83       	std	Y+7, r27	; 0x07
     eda:	8a 81       	ldd	r24, Y+2	; 0x02
     edc:	9b 81       	ldd	r25, Y+3	; 0x03
     ede:	01 96       	adiw	r24, 0x01	; 1
     ee0:	9b 83       	std	Y+3, r25	; 0x03
     ee2:	8a 83       	std	Y+2, r24	; 0x02
     ee4:	05 c0       	rjmp	.+10     	; 0xef0 <_fpadd_parts+0x286>
     ee6:	e0 e6       	ldi	r30, 0x60	; 96
     ee8:	f0 e0       	ldi	r31, 0x00	; 0
     eea:	03 c0       	rjmp	.+6      	; 0xef2 <_fpadd_parts+0x288>
     eec:	fb 01       	movw	r30, r22
     eee:	01 c0       	rjmp	.+2      	; 0xef2 <_fpadd_parts+0x288>
     ef0:	fe 01       	movw	r30, r28
     ef2:	cf 01       	movw	r24, r30
     ef4:	cd b7       	in	r28, 0x3d	; 61
     ef6:	de b7       	in	r29, 0x3e	; 62
     ef8:	ee e0       	ldi	r30, 0x0E	; 14
     efa:	0c 94 d1 0c 	jmp	0x19a2	; 0x19a2 <__epilogue_restores__+0x8>

00000efe <__addsf3>:
     efe:	a0 e2       	ldi	r26, 0x20	; 32
     f00:	b0 e0       	ldi	r27, 0x00	; 0
     f02:	e5 e8       	ldi	r30, 0x85	; 133
     f04:	f7 e0       	ldi	r31, 0x07	; 7
     f06:	0c 94 bd 0c 	jmp	0x197a	; 0x197a <__prologue_saves__+0x18>
     f0a:	69 83       	std	Y+1, r22	; 0x01
     f0c:	7a 83       	std	Y+2, r23	; 0x02
     f0e:	8b 83       	std	Y+3, r24	; 0x03
     f10:	9c 83       	std	Y+4, r25	; 0x04
     f12:	2d 83       	std	Y+5, r18	; 0x05
     f14:	3e 83       	std	Y+6, r19	; 0x06
     f16:	4f 83       	std	Y+7, r20	; 0x07
     f18:	58 87       	std	Y+8, r21	; 0x08
     f1a:	89 e0       	ldi	r24, 0x09	; 9
     f1c:	e8 2e       	mov	r14, r24
     f1e:	f1 2c       	mov	r15, r1
     f20:	ec 0e       	add	r14, r28
     f22:	fd 1e       	adc	r15, r29
     f24:	ce 01       	movw	r24, r28
     f26:	01 96       	adiw	r24, 0x01	; 1
     f28:	b7 01       	movw	r22, r14
     f2a:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
     f2e:	8e 01       	movw	r16, r28
     f30:	0f 5e       	subi	r16, 0xEF	; 239
     f32:	1f 4f       	sbci	r17, 0xFF	; 255
     f34:	ce 01       	movw	r24, r28
     f36:	05 96       	adiw	r24, 0x05	; 5
     f38:	b8 01       	movw	r22, r16
     f3a:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
     f3e:	c7 01       	movw	r24, r14
     f40:	b8 01       	movw	r22, r16
     f42:	ae 01       	movw	r20, r28
     f44:	47 5e       	subi	r20, 0xE7	; 231
     f46:	5f 4f       	sbci	r21, 0xFF	; 255
     f48:	0e 94 35 06 	call	0xc6a	; 0xc6a <_fpadd_parts>
     f4c:	0e 94 21 0b 	call	0x1642	; 0x1642 <__pack_f>
     f50:	a0 96       	adiw	r28, 0x20	; 32
     f52:	e6 e0       	ldi	r30, 0x06	; 6
     f54:	0c 94 d9 0c 	jmp	0x19b2	; 0x19b2 <__epilogue_restores__+0x18>

00000f58 <__subsf3>:
     f58:	a0 e2       	ldi	r26, 0x20	; 32
     f5a:	b0 e0       	ldi	r27, 0x00	; 0
     f5c:	e2 eb       	ldi	r30, 0xB2	; 178
     f5e:	f7 e0       	ldi	r31, 0x07	; 7
     f60:	0c 94 bd 0c 	jmp	0x197a	; 0x197a <__prologue_saves__+0x18>
     f64:	69 83       	std	Y+1, r22	; 0x01
     f66:	7a 83       	std	Y+2, r23	; 0x02
     f68:	8b 83       	std	Y+3, r24	; 0x03
     f6a:	9c 83       	std	Y+4, r25	; 0x04
     f6c:	2d 83       	std	Y+5, r18	; 0x05
     f6e:	3e 83       	std	Y+6, r19	; 0x06
     f70:	4f 83       	std	Y+7, r20	; 0x07
     f72:	58 87       	std	Y+8, r21	; 0x08
     f74:	8e 01       	movw	r16, r28
     f76:	07 5f       	subi	r16, 0xF7	; 247
     f78:	1f 4f       	sbci	r17, 0xFF	; 255
     f7a:	ce 01       	movw	r24, r28
     f7c:	01 96       	adiw	r24, 0x01	; 1
     f7e:	b8 01       	movw	r22, r16
     f80:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
     f84:	91 e1       	ldi	r25, 0x11	; 17
     f86:	e9 2e       	mov	r14, r25
     f88:	f1 2c       	mov	r15, r1
     f8a:	ec 0e       	add	r14, r28
     f8c:	fd 1e       	adc	r15, r29
     f8e:	ce 01       	movw	r24, r28
     f90:	05 96       	adiw	r24, 0x05	; 5
     f92:	b7 01       	movw	r22, r14
     f94:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
     f98:	8a 89       	ldd	r24, Y+18	; 0x12
     f9a:	91 e0       	ldi	r25, 0x01	; 1
     f9c:	89 27       	eor	r24, r25
     f9e:	8a 8b       	std	Y+18, r24	; 0x12
     fa0:	c8 01       	movw	r24, r16
     fa2:	b7 01       	movw	r22, r14
     fa4:	ae 01       	movw	r20, r28
     fa6:	47 5e       	subi	r20, 0xE7	; 231
     fa8:	5f 4f       	sbci	r21, 0xFF	; 255
     faa:	0e 94 35 06 	call	0xc6a	; 0xc6a <_fpadd_parts>
     fae:	0e 94 21 0b 	call	0x1642	; 0x1642 <__pack_f>
     fb2:	a0 96       	adiw	r28, 0x20	; 32
     fb4:	e6 e0       	ldi	r30, 0x06	; 6
     fb6:	0c 94 d9 0c 	jmp	0x19b2	; 0x19b2 <__epilogue_restores__+0x18>

00000fba <__mulsf3>:
     fba:	a0 e2       	ldi	r26, 0x20	; 32
     fbc:	b0 e0       	ldi	r27, 0x00	; 0
     fbe:	e3 ee       	ldi	r30, 0xE3	; 227
     fc0:	f7 e0       	ldi	r31, 0x07	; 7
     fc2:	0c 94 b1 0c 	jmp	0x1962	; 0x1962 <__prologue_saves__>
     fc6:	69 83       	std	Y+1, r22	; 0x01
     fc8:	7a 83       	std	Y+2, r23	; 0x02
     fca:	8b 83       	std	Y+3, r24	; 0x03
     fcc:	9c 83       	std	Y+4, r25	; 0x04
     fce:	2d 83       	std	Y+5, r18	; 0x05
     fd0:	3e 83       	std	Y+6, r19	; 0x06
     fd2:	4f 83       	std	Y+7, r20	; 0x07
     fd4:	58 87       	std	Y+8, r21	; 0x08
     fd6:	ce 01       	movw	r24, r28
     fd8:	01 96       	adiw	r24, 0x01	; 1
     fda:	be 01       	movw	r22, r28
     fdc:	67 5f       	subi	r22, 0xF7	; 247
     fde:	7f 4f       	sbci	r23, 0xFF	; 255
     fe0:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
     fe4:	ce 01       	movw	r24, r28
     fe6:	05 96       	adiw	r24, 0x05	; 5
     fe8:	be 01       	movw	r22, r28
     fea:	6f 5e       	subi	r22, 0xEF	; 239
     fec:	7f 4f       	sbci	r23, 0xFF	; 255
     fee:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
     ff2:	99 85       	ldd	r25, Y+9	; 0x09
     ff4:	92 30       	cpi	r25, 0x02	; 2
     ff6:	78 f0       	brcs	.+30     	; 0x1016 <__mulsf3+0x5c>
     ff8:	89 89       	ldd	r24, Y+17	; 0x11
     ffa:	82 30       	cpi	r24, 0x02	; 2
     ffc:	c0 f0       	brcs	.+48     	; 0x102e <__mulsf3+0x74>
     ffe:	94 30       	cpi	r25, 0x04	; 4
    1000:	19 f4       	brne	.+6      	; 0x1008 <__mulsf3+0x4e>
    1002:	82 30       	cpi	r24, 0x02	; 2
    1004:	41 f4       	brne	.+16     	; 0x1016 <__mulsf3+0x5c>
    1006:	cb c0       	rjmp	.+406    	; 0x119e <__mulsf3+0x1e4>
    1008:	84 30       	cpi	r24, 0x04	; 4
    100a:	19 f4       	brne	.+6      	; 0x1012 <__mulsf3+0x58>
    100c:	92 30       	cpi	r25, 0x02	; 2
    100e:	79 f4       	brne	.+30     	; 0x102e <__mulsf3+0x74>
    1010:	c6 c0       	rjmp	.+396    	; 0x119e <__mulsf3+0x1e4>
    1012:	92 30       	cpi	r25, 0x02	; 2
    1014:	51 f4       	brne	.+20     	; 0x102a <__mulsf3+0x70>
    1016:	81 e0       	ldi	r24, 0x01	; 1
    1018:	2a 85       	ldd	r18, Y+10	; 0x0a
    101a:	9a 89       	ldd	r25, Y+18	; 0x12
    101c:	29 17       	cp	r18, r25
    101e:	09 f4       	brne	.+2      	; 0x1022 <__mulsf3+0x68>
    1020:	80 e0       	ldi	r24, 0x00	; 0
    1022:	8a 87       	std	Y+10, r24	; 0x0a
    1024:	ce 01       	movw	r24, r28
    1026:	09 96       	adiw	r24, 0x09	; 9
    1028:	bc c0       	rjmp	.+376    	; 0x11a2 <__mulsf3+0x1e8>
    102a:	82 30       	cpi	r24, 0x02	; 2
    102c:	51 f4       	brne	.+20     	; 0x1042 <__mulsf3+0x88>
    102e:	81 e0       	ldi	r24, 0x01	; 1
    1030:	2a 85       	ldd	r18, Y+10	; 0x0a
    1032:	9a 89       	ldd	r25, Y+18	; 0x12
    1034:	29 17       	cp	r18, r25
    1036:	09 f4       	brne	.+2      	; 0x103a <__mulsf3+0x80>
    1038:	80 e0       	ldi	r24, 0x00	; 0
    103a:	8a 8b       	std	Y+18, r24	; 0x12
    103c:	ce 01       	movw	r24, r28
    103e:	41 96       	adiw	r24, 0x11	; 17
    1040:	b0 c0       	rjmp	.+352    	; 0x11a2 <__mulsf3+0x1e8>
    1042:	6d 84       	ldd	r6, Y+13	; 0x0d
    1044:	7e 84       	ldd	r7, Y+14	; 0x0e
    1046:	8f 84       	ldd	r8, Y+15	; 0x0f
    1048:	98 88       	ldd	r9, Y+16	; 0x10
    104a:	ed 88       	ldd	r14, Y+21	; 0x15
    104c:	fe 88       	ldd	r15, Y+22	; 0x16
    104e:	0f 89       	ldd	r16, Y+23	; 0x17
    1050:	18 8d       	ldd	r17, Y+24	; 0x18
    1052:	e0 e2       	ldi	r30, 0x20	; 32
    1054:	f0 e0       	ldi	r31, 0x00	; 0
    1056:	80 e0       	ldi	r24, 0x00	; 0
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	dc 01       	movw	r26, r24
    105c:	aa 24       	eor	r10, r10
    105e:	bb 24       	eor	r11, r11
    1060:	65 01       	movw	r12, r10
    1062:	20 e0       	ldi	r18, 0x00	; 0
    1064:	30 e0       	ldi	r19, 0x00	; 0
    1066:	a9 01       	movw	r20, r18
    1068:	b3 01       	movw	r22, r6
    106a:	61 70       	andi	r22, 0x01	; 1
    106c:	70 70       	andi	r23, 0x00	; 0
    106e:	61 15       	cp	r22, r1
    1070:	71 05       	cpc	r23, r1
    1072:	d1 f0       	breq	.+52     	; 0x10a8 <__mulsf3+0xee>
    1074:	2e 0d       	add	r18, r14
    1076:	3f 1d       	adc	r19, r15
    1078:	40 1f       	adc	r20, r16
    107a:	51 1f       	adc	r21, r17
    107c:	15 01       	movw	r2, r10
    107e:	26 01       	movw	r4, r12
    1080:	28 0e       	add	r2, r24
    1082:	39 1e       	adc	r3, r25
    1084:	4a 1e       	adc	r4, r26
    1086:	5b 1e       	adc	r5, r27
    1088:	81 e0       	ldi	r24, 0x01	; 1
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	a0 e0       	ldi	r26, 0x00	; 0
    108e:	b0 e0       	ldi	r27, 0x00	; 0
    1090:	2e 15       	cp	r18, r14
    1092:	3f 05       	cpc	r19, r15
    1094:	40 07       	cpc	r20, r16
    1096:	51 07       	cpc	r21, r17
    1098:	18 f0       	brcs	.+6      	; 0x10a0 <__mulsf3+0xe6>
    109a:	80 e0       	ldi	r24, 0x00	; 0
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	dc 01       	movw	r26, r24
    10a0:	82 0d       	add	r24, r2
    10a2:	93 1d       	adc	r25, r3
    10a4:	a4 1d       	adc	r26, r4
    10a6:	b5 1d       	adc	r27, r5
    10a8:	aa 0c       	add	r10, r10
    10aa:	bb 1c       	adc	r11, r11
    10ac:	cc 1c       	adc	r12, r12
    10ae:	dd 1c       	adc	r13, r13
    10b0:	17 ff       	sbrs	r17, 7
    10b2:	09 c0       	rjmp	.+18     	; 0x10c6 <__mulsf3+0x10c>
    10b4:	61 e0       	ldi	r22, 0x01	; 1
    10b6:	26 2e       	mov	r2, r22
    10b8:	31 2c       	mov	r3, r1
    10ba:	41 2c       	mov	r4, r1
    10bc:	51 2c       	mov	r5, r1
    10be:	a2 28       	or	r10, r2
    10c0:	b3 28       	or	r11, r3
    10c2:	c4 28       	or	r12, r4
    10c4:	d5 28       	or	r13, r5
    10c6:	31 97       	sbiw	r30, 0x01	; 1
    10c8:	49 f0       	breq	.+18     	; 0x10dc <__mulsf3+0x122>
    10ca:	ee 0c       	add	r14, r14
    10cc:	ff 1c       	adc	r15, r15
    10ce:	00 1f       	adc	r16, r16
    10d0:	11 1f       	adc	r17, r17
    10d2:	96 94       	lsr	r9
    10d4:	87 94       	ror	r8
    10d6:	77 94       	ror	r7
    10d8:	67 94       	ror	r6
    10da:	c6 cf       	rjmp	.-116    	; 0x1068 <__mulsf3+0xae>
    10dc:	6b 89       	ldd	r22, Y+19	; 0x13
    10de:	7c 89       	ldd	r23, Y+20	; 0x14
    10e0:	eb 85       	ldd	r30, Y+11	; 0x0b
    10e2:	fc 85       	ldd	r31, Y+12	; 0x0c
    10e4:	6e 0f       	add	r22, r30
    10e6:	7f 1f       	adc	r23, r31
    10e8:	6e 5f       	subi	r22, 0xFE	; 254
    10ea:	7f 4f       	sbci	r23, 0xFF	; 255
    10ec:	7c 8f       	std	Y+28, r23	; 0x1c
    10ee:	6b 8f       	std	Y+27, r22	; 0x1b
    10f0:	61 e0       	ldi	r22, 0x01	; 1
    10f2:	ea 85       	ldd	r30, Y+10	; 0x0a
    10f4:	7a 89       	ldd	r23, Y+18	; 0x12
    10f6:	e7 17       	cp	r30, r23
    10f8:	09 f4       	brne	.+2      	; 0x10fc <__mulsf3+0x142>
    10fa:	60 e0       	ldi	r22, 0x00	; 0
    10fc:	6a 8f       	std	Y+26, r22	; 0x1a
    10fe:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1100:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1102:	10 c0       	rjmp	.+32     	; 0x1124 <__mulsf3+0x16a>
    1104:	fc 01       	movw	r30, r24
    1106:	e1 70       	andi	r30, 0x01	; 1
    1108:	f0 70       	andi	r31, 0x00	; 0
    110a:	30 97       	sbiw	r30, 0x00	; 0
    110c:	29 f0       	breq	.+10     	; 0x1118 <__mulsf3+0x15e>
    110e:	56 95       	lsr	r21
    1110:	47 95       	ror	r20
    1112:	37 95       	ror	r19
    1114:	27 95       	ror	r18
    1116:	50 68       	ori	r21, 0x80	; 128
    1118:	b6 95       	lsr	r27
    111a:	a7 95       	ror	r26
    111c:	97 95       	ror	r25
    111e:	87 95       	ror	r24
    1120:	6f 5f       	subi	r22, 0xFF	; 255
    1122:	7f 4f       	sbci	r23, 0xFF	; 255
    1124:	b7 fd       	sbrc	r27, 7
    1126:	ee cf       	rjmp	.-36     	; 0x1104 <__mulsf3+0x14a>
    1128:	0c c0       	rjmp	.+24     	; 0x1142 <__mulsf3+0x188>
    112a:	88 0f       	add	r24, r24
    112c:	99 1f       	adc	r25, r25
    112e:	aa 1f       	adc	r26, r26
    1130:	bb 1f       	adc	r27, r27
    1132:	57 fd       	sbrc	r21, 7
    1134:	81 60       	ori	r24, 0x01	; 1
    1136:	22 0f       	add	r18, r18
    1138:	33 1f       	adc	r19, r19
    113a:	44 1f       	adc	r20, r20
    113c:	55 1f       	adc	r21, r21
    113e:	61 50       	subi	r22, 0x01	; 1
    1140:	70 40       	sbci	r23, 0x00	; 0
    1142:	80 30       	cpi	r24, 0x00	; 0
    1144:	e0 e0       	ldi	r30, 0x00	; 0
    1146:	9e 07       	cpc	r25, r30
    1148:	e0 e0       	ldi	r30, 0x00	; 0
    114a:	ae 07       	cpc	r26, r30
    114c:	e0 e4       	ldi	r30, 0x40	; 64
    114e:	be 07       	cpc	r27, r30
    1150:	60 f3       	brcs	.-40     	; 0x112a <__mulsf3+0x170>
    1152:	6b 8f       	std	Y+27, r22	; 0x1b
    1154:	7c 8f       	std	Y+28, r23	; 0x1c
    1156:	6f e7       	ldi	r22, 0x7F	; 127
    1158:	e6 2e       	mov	r14, r22
    115a:	f1 2c       	mov	r15, r1
    115c:	01 2d       	mov	r16, r1
    115e:	11 2d       	mov	r17, r1
    1160:	e8 22       	and	r14, r24
    1162:	f9 22       	and	r15, r25
    1164:	0a 23       	and	r16, r26
    1166:	1b 23       	and	r17, r27
    1168:	60 e4       	ldi	r22, 0x40	; 64
    116a:	e6 16       	cp	r14, r22
    116c:	f1 04       	cpc	r15, r1
    116e:	01 05       	cpc	r16, r1
    1170:	11 05       	cpc	r17, r1
    1172:	61 f4       	brne	.+24     	; 0x118c <__mulsf3+0x1d2>
    1174:	87 fd       	sbrc	r24, 7
    1176:	0a c0       	rjmp	.+20     	; 0x118c <__mulsf3+0x1d2>
    1178:	21 15       	cp	r18, r1
    117a:	31 05       	cpc	r19, r1
    117c:	41 05       	cpc	r20, r1
    117e:	51 05       	cpc	r21, r1
    1180:	29 f0       	breq	.+10     	; 0x118c <__mulsf3+0x1d2>
    1182:	80 5c       	subi	r24, 0xC0	; 192
    1184:	9f 4f       	sbci	r25, 0xFF	; 255
    1186:	af 4f       	sbci	r26, 0xFF	; 255
    1188:	bf 4f       	sbci	r27, 0xFF	; 255
    118a:	80 78       	andi	r24, 0x80	; 128
    118c:	8d 8f       	std	Y+29, r24	; 0x1d
    118e:	9e 8f       	std	Y+30, r25	; 0x1e
    1190:	af 8f       	std	Y+31, r26	; 0x1f
    1192:	b8 a3       	std	Y+32, r27	; 0x20
    1194:	83 e0       	ldi	r24, 0x03	; 3
    1196:	89 8f       	std	Y+25, r24	; 0x19
    1198:	ce 01       	movw	r24, r28
    119a:	49 96       	adiw	r24, 0x19	; 25
    119c:	02 c0       	rjmp	.+4      	; 0x11a2 <__mulsf3+0x1e8>
    119e:	80 e6       	ldi	r24, 0x60	; 96
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	0e 94 21 0b 	call	0x1642	; 0x1642 <__pack_f>
    11a6:	a0 96       	adiw	r28, 0x20	; 32
    11a8:	e2 e1       	ldi	r30, 0x12	; 18
    11aa:	0c 94 cd 0c 	jmp	0x199a	; 0x199a <__epilogue_restores__>

000011ae <__divsf3>:
    11ae:	a8 e1       	ldi	r26, 0x18	; 24
    11b0:	b0 e0       	ldi	r27, 0x00	; 0
    11b2:	ed ed       	ldi	r30, 0xDD	; 221
    11b4:	f8 e0       	ldi	r31, 0x08	; 8
    11b6:	0c 94 b9 0c 	jmp	0x1972	; 0x1972 <__prologue_saves__+0x10>
    11ba:	69 83       	std	Y+1, r22	; 0x01
    11bc:	7a 83       	std	Y+2, r23	; 0x02
    11be:	8b 83       	std	Y+3, r24	; 0x03
    11c0:	9c 83       	std	Y+4, r25	; 0x04
    11c2:	2d 83       	std	Y+5, r18	; 0x05
    11c4:	3e 83       	std	Y+6, r19	; 0x06
    11c6:	4f 83       	std	Y+7, r20	; 0x07
    11c8:	58 87       	std	Y+8, r21	; 0x08
    11ca:	8e 01       	movw	r16, r28
    11cc:	07 5f       	subi	r16, 0xF7	; 247
    11ce:	1f 4f       	sbci	r17, 0xFF	; 255
    11d0:	ce 01       	movw	r24, r28
    11d2:	01 96       	adiw	r24, 0x01	; 1
    11d4:	b8 01       	movw	r22, r16
    11d6:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
    11da:	81 e1       	ldi	r24, 0x11	; 17
    11dc:	e8 2e       	mov	r14, r24
    11de:	f1 2c       	mov	r15, r1
    11e0:	ec 0e       	add	r14, r28
    11e2:	fd 1e       	adc	r15, r29
    11e4:	ce 01       	movw	r24, r28
    11e6:	05 96       	adiw	r24, 0x05	; 5
    11e8:	b7 01       	movw	r22, r14
    11ea:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
    11ee:	99 85       	ldd	r25, Y+9	; 0x09
    11f0:	92 30       	cpi	r25, 0x02	; 2
    11f2:	08 f4       	brcc	.+2      	; 0x11f6 <__divsf3+0x48>
    11f4:	83 c0       	rjmp	.+262    	; 0x12fc <__divsf3+0x14e>
    11f6:	89 89       	ldd	r24, Y+17	; 0x11
    11f8:	82 30       	cpi	r24, 0x02	; 2
    11fa:	08 f4       	brcc	.+2      	; 0x11fe <__divsf3+0x50>
    11fc:	7b c0       	rjmp	.+246    	; 0x12f4 <__divsf3+0x146>
    11fe:	2a 85       	ldd	r18, Y+10	; 0x0a
    1200:	3a 89       	ldd	r19, Y+18	; 0x12
    1202:	23 27       	eor	r18, r19
    1204:	2a 87       	std	Y+10, r18	; 0x0a
    1206:	94 30       	cpi	r25, 0x04	; 4
    1208:	11 f0       	breq	.+4      	; 0x120e <__divsf3+0x60>
    120a:	92 30       	cpi	r25, 0x02	; 2
    120c:	21 f4       	brne	.+8      	; 0x1216 <__divsf3+0x68>
    120e:	98 17       	cp	r25, r24
    1210:	09 f0       	breq	.+2      	; 0x1214 <__divsf3+0x66>
    1212:	6c c0       	rjmp	.+216    	; 0x12ec <__divsf3+0x13e>
    1214:	71 c0       	rjmp	.+226    	; 0x12f8 <__divsf3+0x14a>
    1216:	84 30       	cpi	r24, 0x04	; 4
    1218:	39 f4       	brne	.+14     	; 0x1228 <__divsf3+0x7a>
    121a:	1d 86       	std	Y+13, r1	; 0x0d
    121c:	1e 86       	std	Y+14, r1	; 0x0e
    121e:	1f 86       	std	Y+15, r1	; 0x0f
    1220:	18 8a       	std	Y+16, r1	; 0x10
    1222:	1c 86       	std	Y+12, r1	; 0x0c
    1224:	1b 86       	std	Y+11, r1	; 0x0b
    1226:	6a c0       	rjmp	.+212    	; 0x12fc <__divsf3+0x14e>
    1228:	82 30       	cpi	r24, 0x02	; 2
    122a:	19 f4       	brne	.+6      	; 0x1232 <__divsf3+0x84>
    122c:	84 e0       	ldi	r24, 0x04	; 4
    122e:	89 87       	std	Y+9, r24	; 0x09
    1230:	65 c0       	rjmp	.+202    	; 0x12fc <__divsf3+0x14e>
    1232:	8b 85       	ldd	r24, Y+11	; 0x0b
    1234:	9c 85       	ldd	r25, Y+12	; 0x0c
    1236:	2b 89       	ldd	r18, Y+19	; 0x13
    1238:	3c 89       	ldd	r19, Y+20	; 0x14
    123a:	82 1b       	sub	r24, r18
    123c:	93 0b       	sbc	r25, r19
    123e:	9c 87       	std	Y+12, r25	; 0x0c
    1240:	8b 87       	std	Y+11, r24	; 0x0b
    1242:	2d 85       	ldd	r18, Y+13	; 0x0d
    1244:	3e 85       	ldd	r19, Y+14	; 0x0e
    1246:	4f 85       	ldd	r20, Y+15	; 0x0f
    1248:	58 89       	ldd	r21, Y+16	; 0x10
    124a:	ed 88       	ldd	r14, Y+21	; 0x15
    124c:	fe 88       	ldd	r15, Y+22	; 0x16
    124e:	0f 89       	ldd	r16, Y+23	; 0x17
    1250:	18 8d       	ldd	r17, Y+24	; 0x18
    1252:	2e 15       	cp	r18, r14
    1254:	3f 05       	cpc	r19, r15
    1256:	40 07       	cpc	r20, r16
    1258:	51 07       	cpc	r21, r17
    125a:	38 f4       	brcc	.+14     	; 0x126a <__divsf3+0xbc>
    125c:	22 0f       	add	r18, r18
    125e:	33 1f       	adc	r19, r19
    1260:	44 1f       	adc	r20, r20
    1262:	55 1f       	adc	r21, r21
    1264:	01 97       	sbiw	r24, 0x01	; 1
    1266:	9c 87       	std	Y+12, r25	; 0x0c
    1268:	8b 87       	std	Y+11, r24	; 0x0b
    126a:	6f e1       	ldi	r22, 0x1F	; 31
    126c:	70 e0       	ldi	r23, 0x00	; 0
    126e:	a1 2c       	mov	r10, r1
    1270:	b1 2c       	mov	r11, r1
    1272:	c1 2c       	mov	r12, r1
    1274:	a0 e4       	ldi	r26, 0x40	; 64
    1276:	da 2e       	mov	r13, r26
    1278:	80 e0       	ldi	r24, 0x00	; 0
    127a:	90 e0       	ldi	r25, 0x00	; 0
    127c:	dc 01       	movw	r26, r24
    127e:	2e 15       	cp	r18, r14
    1280:	3f 05       	cpc	r19, r15
    1282:	40 07       	cpc	r20, r16
    1284:	51 07       	cpc	r21, r17
    1286:	40 f0       	brcs	.+16     	; 0x1298 <__divsf3+0xea>
    1288:	8a 29       	or	r24, r10
    128a:	9b 29       	or	r25, r11
    128c:	ac 29       	or	r26, r12
    128e:	bd 29       	or	r27, r13
    1290:	2e 19       	sub	r18, r14
    1292:	3f 09       	sbc	r19, r15
    1294:	40 0b       	sbc	r20, r16
    1296:	51 0b       	sbc	r21, r17
    1298:	d6 94       	lsr	r13
    129a:	c7 94       	ror	r12
    129c:	b7 94       	ror	r11
    129e:	a7 94       	ror	r10
    12a0:	22 0f       	add	r18, r18
    12a2:	33 1f       	adc	r19, r19
    12a4:	44 1f       	adc	r20, r20
    12a6:	55 1f       	adc	r21, r21
    12a8:	61 50       	subi	r22, 0x01	; 1
    12aa:	70 40       	sbci	r23, 0x00	; 0
    12ac:	41 f7       	brne	.-48     	; 0x127e <__divsf3+0xd0>
    12ae:	6f e7       	ldi	r22, 0x7F	; 127
    12b0:	e6 2e       	mov	r14, r22
    12b2:	f1 2c       	mov	r15, r1
    12b4:	01 2d       	mov	r16, r1
    12b6:	11 2d       	mov	r17, r1
    12b8:	e8 22       	and	r14, r24
    12ba:	f9 22       	and	r15, r25
    12bc:	0a 23       	and	r16, r26
    12be:	1b 23       	and	r17, r27
    12c0:	60 e4       	ldi	r22, 0x40	; 64
    12c2:	e6 16       	cp	r14, r22
    12c4:	f1 04       	cpc	r15, r1
    12c6:	01 05       	cpc	r16, r1
    12c8:	11 05       	cpc	r17, r1
    12ca:	61 f4       	brne	.+24     	; 0x12e4 <__divsf3+0x136>
    12cc:	87 fd       	sbrc	r24, 7
    12ce:	0a c0       	rjmp	.+20     	; 0x12e4 <__divsf3+0x136>
    12d0:	21 15       	cp	r18, r1
    12d2:	31 05       	cpc	r19, r1
    12d4:	41 05       	cpc	r20, r1
    12d6:	51 05       	cpc	r21, r1
    12d8:	29 f0       	breq	.+10     	; 0x12e4 <__divsf3+0x136>
    12da:	80 5c       	subi	r24, 0xC0	; 192
    12dc:	9f 4f       	sbci	r25, 0xFF	; 255
    12de:	af 4f       	sbci	r26, 0xFF	; 255
    12e0:	bf 4f       	sbci	r27, 0xFF	; 255
    12e2:	80 78       	andi	r24, 0x80	; 128
    12e4:	8d 87       	std	Y+13, r24	; 0x0d
    12e6:	9e 87       	std	Y+14, r25	; 0x0e
    12e8:	af 87       	std	Y+15, r26	; 0x0f
    12ea:	b8 8b       	std	Y+16, r27	; 0x10
    12ec:	8e 01       	movw	r16, r28
    12ee:	07 5f       	subi	r16, 0xF7	; 247
    12f0:	1f 4f       	sbci	r17, 0xFF	; 255
    12f2:	04 c0       	rjmp	.+8      	; 0x12fc <__divsf3+0x14e>
    12f4:	87 01       	movw	r16, r14
    12f6:	02 c0       	rjmp	.+4      	; 0x12fc <__divsf3+0x14e>
    12f8:	00 e6       	ldi	r16, 0x60	; 96
    12fa:	10 e0       	ldi	r17, 0x00	; 0
    12fc:	c8 01       	movw	r24, r16
    12fe:	0e 94 21 0b 	call	0x1642	; 0x1642 <__pack_f>
    1302:	68 96       	adiw	r28, 0x18	; 24
    1304:	ea e0       	ldi	r30, 0x0A	; 10
    1306:	0c 94 d5 0c 	jmp	0x19aa	; 0x19aa <__epilogue_restores__+0x10>

0000130a <__gtsf2>:
    130a:	a8 e1       	ldi	r26, 0x18	; 24
    130c:	b0 e0       	ldi	r27, 0x00	; 0
    130e:	eb e8       	ldi	r30, 0x8B	; 139
    1310:	f9 e0       	ldi	r31, 0x09	; 9
    1312:	0c 94 bd 0c 	jmp	0x197a	; 0x197a <__prologue_saves__+0x18>
    1316:	69 83       	std	Y+1, r22	; 0x01
    1318:	7a 83       	std	Y+2, r23	; 0x02
    131a:	8b 83       	std	Y+3, r24	; 0x03
    131c:	9c 83       	std	Y+4, r25	; 0x04
    131e:	2d 83       	std	Y+5, r18	; 0x05
    1320:	3e 83       	std	Y+6, r19	; 0x06
    1322:	4f 83       	std	Y+7, r20	; 0x07
    1324:	58 87       	std	Y+8, r21	; 0x08
    1326:	8e 01       	movw	r16, r28
    1328:	07 5f       	subi	r16, 0xF7	; 247
    132a:	1f 4f       	sbci	r17, 0xFF	; 255
    132c:	ce 01       	movw	r24, r28
    132e:	01 96       	adiw	r24, 0x01	; 1
    1330:	b8 01       	movw	r22, r16
    1332:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
    1336:	81 e1       	ldi	r24, 0x11	; 17
    1338:	e8 2e       	mov	r14, r24
    133a:	f1 2c       	mov	r15, r1
    133c:	ec 0e       	add	r14, r28
    133e:	fd 1e       	adc	r15, r29
    1340:	ce 01       	movw	r24, r28
    1342:	05 96       	adiw	r24, 0x05	; 5
    1344:	b7 01       	movw	r22, r14
    1346:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
    134a:	89 85       	ldd	r24, Y+9	; 0x09
    134c:	82 30       	cpi	r24, 0x02	; 2
    134e:	40 f0       	brcs	.+16     	; 0x1360 <__gtsf2+0x56>
    1350:	89 89       	ldd	r24, Y+17	; 0x11
    1352:	82 30       	cpi	r24, 0x02	; 2
    1354:	28 f0       	brcs	.+10     	; 0x1360 <__gtsf2+0x56>
    1356:	c8 01       	movw	r24, r16
    1358:	b7 01       	movw	r22, r14
    135a:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__fpcmp_parts_f>
    135e:	01 c0       	rjmp	.+2      	; 0x1362 <__gtsf2+0x58>
    1360:	8f ef       	ldi	r24, 0xFF	; 255
    1362:	68 96       	adiw	r28, 0x18	; 24
    1364:	e6 e0       	ldi	r30, 0x06	; 6
    1366:	0c 94 d9 0c 	jmp	0x19b2	; 0x19b2 <__epilogue_restores__+0x18>

0000136a <__gesf2>:
    136a:	a8 e1       	ldi	r26, 0x18	; 24
    136c:	b0 e0       	ldi	r27, 0x00	; 0
    136e:	eb eb       	ldi	r30, 0xBB	; 187
    1370:	f9 e0       	ldi	r31, 0x09	; 9
    1372:	0c 94 bd 0c 	jmp	0x197a	; 0x197a <__prologue_saves__+0x18>
    1376:	69 83       	std	Y+1, r22	; 0x01
    1378:	7a 83       	std	Y+2, r23	; 0x02
    137a:	8b 83       	std	Y+3, r24	; 0x03
    137c:	9c 83       	std	Y+4, r25	; 0x04
    137e:	2d 83       	std	Y+5, r18	; 0x05
    1380:	3e 83       	std	Y+6, r19	; 0x06
    1382:	4f 83       	std	Y+7, r20	; 0x07
    1384:	58 87       	std	Y+8, r21	; 0x08
    1386:	8e 01       	movw	r16, r28
    1388:	07 5f       	subi	r16, 0xF7	; 247
    138a:	1f 4f       	sbci	r17, 0xFF	; 255
    138c:	ce 01       	movw	r24, r28
    138e:	01 96       	adiw	r24, 0x01	; 1
    1390:	b8 01       	movw	r22, r16
    1392:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
    1396:	81 e1       	ldi	r24, 0x11	; 17
    1398:	e8 2e       	mov	r14, r24
    139a:	f1 2c       	mov	r15, r1
    139c:	ec 0e       	add	r14, r28
    139e:	fd 1e       	adc	r15, r29
    13a0:	ce 01       	movw	r24, r28
    13a2:	05 96       	adiw	r24, 0x05	; 5
    13a4:	b7 01       	movw	r22, r14
    13a6:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
    13aa:	89 85       	ldd	r24, Y+9	; 0x09
    13ac:	82 30       	cpi	r24, 0x02	; 2
    13ae:	40 f0       	brcs	.+16     	; 0x13c0 <__gesf2+0x56>
    13b0:	89 89       	ldd	r24, Y+17	; 0x11
    13b2:	82 30       	cpi	r24, 0x02	; 2
    13b4:	28 f0       	brcs	.+10     	; 0x13c0 <__gesf2+0x56>
    13b6:	c8 01       	movw	r24, r16
    13b8:	b7 01       	movw	r22, r14
    13ba:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__fpcmp_parts_f>
    13be:	01 c0       	rjmp	.+2      	; 0x13c2 <__gesf2+0x58>
    13c0:	8f ef       	ldi	r24, 0xFF	; 255
    13c2:	68 96       	adiw	r28, 0x18	; 24
    13c4:	e6 e0       	ldi	r30, 0x06	; 6
    13c6:	0c 94 d9 0c 	jmp	0x19b2	; 0x19b2 <__epilogue_restores__+0x18>

000013ca <__ltsf2>:
    13ca:	a8 e1       	ldi	r26, 0x18	; 24
    13cc:	b0 e0       	ldi	r27, 0x00	; 0
    13ce:	eb ee       	ldi	r30, 0xEB	; 235
    13d0:	f9 e0       	ldi	r31, 0x09	; 9
    13d2:	0c 94 bd 0c 	jmp	0x197a	; 0x197a <__prologue_saves__+0x18>
    13d6:	69 83       	std	Y+1, r22	; 0x01
    13d8:	7a 83       	std	Y+2, r23	; 0x02
    13da:	8b 83       	std	Y+3, r24	; 0x03
    13dc:	9c 83       	std	Y+4, r25	; 0x04
    13de:	2d 83       	std	Y+5, r18	; 0x05
    13e0:	3e 83       	std	Y+6, r19	; 0x06
    13e2:	4f 83       	std	Y+7, r20	; 0x07
    13e4:	58 87       	std	Y+8, r21	; 0x08
    13e6:	8e 01       	movw	r16, r28
    13e8:	07 5f       	subi	r16, 0xF7	; 247
    13ea:	1f 4f       	sbci	r17, 0xFF	; 255
    13ec:	ce 01       	movw	r24, r28
    13ee:	01 96       	adiw	r24, 0x01	; 1
    13f0:	b8 01       	movw	r22, r16
    13f2:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
    13f6:	81 e1       	ldi	r24, 0x11	; 17
    13f8:	e8 2e       	mov	r14, r24
    13fa:	f1 2c       	mov	r15, r1
    13fc:	ec 0e       	add	r14, r28
    13fe:	fd 1e       	adc	r15, r29
    1400:	ce 01       	movw	r24, r28
    1402:	05 96       	adiw	r24, 0x05	; 5
    1404:	b7 01       	movw	r22, r14
    1406:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
    140a:	89 85       	ldd	r24, Y+9	; 0x09
    140c:	82 30       	cpi	r24, 0x02	; 2
    140e:	40 f0       	brcs	.+16     	; 0x1420 <__ltsf2+0x56>
    1410:	89 89       	ldd	r24, Y+17	; 0x11
    1412:	82 30       	cpi	r24, 0x02	; 2
    1414:	28 f0       	brcs	.+10     	; 0x1420 <__ltsf2+0x56>
    1416:	c8 01       	movw	r24, r16
    1418:	b7 01       	movw	r22, r14
    141a:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__fpcmp_parts_f>
    141e:	01 c0       	rjmp	.+2      	; 0x1422 <__ltsf2+0x58>
    1420:	81 e0       	ldi	r24, 0x01	; 1
    1422:	68 96       	adiw	r28, 0x18	; 24
    1424:	e6 e0       	ldi	r30, 0x06	; 6
    1426:	0c 94 d9 0c 	jmp	0x19b2	; 0x19b2 <__epilogue_restores__+0x18>

0000142a <__floatsisf>:
    142a:	a8 e0       	ldi	r26, 0x08	; 8
    142c:	b0 e0       	ldi	r27, 0x00	; 0
    142e:	eb e1       	ldi	r30, 0x1B	; 27
    1430:	fa e0       	ldi	r31, 0x0A	; 10
    1432:	0c 94 bd 0c 	jmp	0x197a	; 0x197a <__prologue_saves__+0x18>
    1436:	7b 01       	movw	r14, r22
    1438:	8c 01       	movw	r16, r24
    143a:	83 e0       	ldi	r24, 0x03	; 3
    143c:	89 83       	std	Y+1, r24	; 0x01
    143e:	d8 01       	movw	r26, r16
    1440:	c7 01       	movw	r24, r14
    1442:	88 27       	eor	r24, r24
    1444:	b7 fd       	sbrc	r27, 7
    1446:	83 95       	inc	r24
    1448:	99 27       	eor	r25, r25
    144a:	aa 27       	eor	r26, r26
    144c:	bb 27       	eor	r27, r27
    144e:	28 2f       	mov	r18, r24
    1450:	8a 83       	std	Y+2, r24	; 0x02
    1452:	e1 14       	cp	r14, r1
    1454:	f1 04       	cpc	r15, r1
    1456:	01 05       	cpc	r16, r1
    1458:	11 05       	cpc	r17, r1
    145a:	19 f4       	brne	.+6      	; 0x1462 <__floatsisf+0x38>
    145c:	82 e0       	ldi	r24, 0x02	; 2
    145e:	89 83       	std	Y+1, r24	; 0x01
    1460:	37 c0       	rjmp	.+110    	; 0x14d0 <__floatsisf+0xa6>
    1462:	8e e1       	ldi	r24, 0x1E	; 30
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	9c 83       	std	Y+4, r25	; 0x04
    1468:	8b 83       	std	Y+3, r24	; 0x03
    146a:	22 23       	and	r18, r18
    146c:	89 f0       	breq	.+34     	; 0x1490 <__floatsisf+0x66>
    146e:	80 e0       	ldi	r24, 0x00	; 0
    1470:	e8 16       	cp	r14, r24
    1472:	80 e0       	ldi	r24, 0x00	; 0
    1474:	f8 06       	cpc	r15, r24
    1476:	80 e0       	ldi	r24, 0x00	; 0
    1478:	08 07       	cpc	r16, r24
    147a:	80 e8       	ldi	r24, 0x80	; 128
    147c:	18 07       	cpc	r17, r24
    147e:	69 f1       	breq	.+90     	; 0x14da <__floatsisf+0xb0>
    1480:	10 95       	com	r17
    1482:	00 95       	com	r16
    1484:	f0 94       	com	r15
    1486:	e0 94       	com	r14
    1488:	e1 1c       	adc	r14, r1
    148a:	f1 1c       	adc	r15, r1
    148c:	01 1d       	adc	r16, r1
    148e:	11 1d       	adc	r17, r1
    1490:	ed 82       	std	Y+5, r14	; 0x05
    1492:	fe 82       	std	Y+6, r15	; 0x06
    1494:	0f 83       	std	Y+7, r16	; 0x07
    1496:	18 87       	std	Y+8, r17	; 0x08
    1498:	c8 01       	movw	r24, r16
    149a:	b7 01       	movw	r22, r14
    149c:	0e 94 c7 0a 	call	0x158e	; 0x158e <__clzsi2>
    14a0:	9c 01       	movw	r18, r24
    14a2:	21 50       	subi	r18, 0x01	; 1
    14a4:	30 40       	sbci	r19, 0x00	; 0
    14a6:	12 16       	cp	r1, r18
    14a8:	13 06       	cpc	r1, r19
    14aa:	94 f4       	brge	.+36     	; 0x14d0 <__floatsisf+0xa6>
    14ac:	02 2e       	mov	r0, r18
    14ae:	04 c0       	rjmp	.+8      	; 0x14b8 <__floatsisf+0x8e>
    14b0:	ee 0c       	add	r14, r14
    14b2:	ff 1c       	adc	r15, r15
    14b4:	00 1f       	adc	r16, r16
    14b6:	11 1f       	adc	r17, r17
    14b8:	0a 94       	dec	r0
    14ba:	d2 f7       	brpl	.-12     	; 0x14b0 <__floatsisf+0x86>
    14bc:	ed 82       	std	Y+5, r14	; 0x05
    14be:	fe 82       	std	Y+6, r15	; 0x06
    14c0:	0f 83       	std	Y+7, r16	; 0x07
    14c2:	18 87       	std	Y+8, r17	; 0x08
    14c4:	8e e1       	ldi	r24, 0x1E	; 30
    14c6:	90 e0       	ldi	r25, 0x00	; 0
    14c8:	82 1b       	sub	r24, r18
    14ca:	93 0b       	sbc	r25, r19
    14cc:	9c 83       	std	Y+4, r25	; 0x04
    14ce:	8b 83       	std	Y+3, r24	; 0x03
    14d0:	ce 01       	movw	r24, r28
    14d2:	01 96       	adiw	r24, 0x01	; 1
    14d4:	0e 94 21 0b 	call	0x1642	; 0x1642 <__pack_f>
    14d8:	04 c0       	rjmp	.+8      	; 0x14e2 <__floatsisf+0xb8>
    14da:	60 e0       	ldi	r22, 0x00	; 0
    14dc:	70 e0       	ldi	r23, 0x00	; 0
    14de:	80 e0       	ldi	r24, 0x00	; 0
    14e0:	9f ec       	ldi	r25, 0xCF	; 207
    14e2:	28 96       	adiw	r28, 0x08	; 8
    14e4:	e6 e0       	ldi	r30, 0x06	; 6
    14e6:	0c 94 d9 0c 	jmp	0x19b2	; 0x19b2 <__epilogue_restores__+0x18>

000014ea <__fixsfsi>:
    14ea:	ac e0       	ldi	r26, 0x0C	; 12
    14ec:	b0 e0       	ldi	r27, 0x00	; 0
    14ee:	eb e7       	ldi	r30, 0x7B	; 123
    14f0:	fa e0       	ldi	r31, 0x0A	; 10
    14f2:	0c 94 c1 0c 	jmp	0x1982	; 0x1982 <__prologue_saves__+0x20>
    14f6:	69 83       	std	Y+1, r22	; 0x01
    14f8:	7a 83       	std	Y+2, r23	; 0x02
    14fa:	8b 83       	std	Y+3, r24	; 0x03
    14fc:	9c 83       	std	Y+4, r25	; 0x04
    14fe:	ce 01       	movw	r24, r28
    1500:	01 96       	adiw	r24, 0x01	; 1
    1502:	be 01       	movw	r22, r28
    1504:	6b 5f       	subi	r22, 0xFB	; 251
    1506:	7f 4f       	sbci	r23, 0xFF	; 255
    1508:	0e 94 ef 0b 	call	0x17de	; 0x17de <__unpack_f>
    150c:	8d 81       	ldd	r24, Y+5	; 0x05
    150e:	82 30       	cpi	r24, 0x02	; 2
    1510:	81 f1       	breq	.+96     	; 0x1572 <__fixsfsi+0x88>
    1512:	82 30       	cpi	r24, 0x02	; 2
    1514:	70 f1       	brcs	.+92     	; 0x1572 <__fixsfsi+0x88>
    1516:	84 30       	cpi	r24, 0x04	; 4
    1518:	21 f4       	brne	.+8      	; 0x1522 <__fixsfsi+0x38>
    151a:	8e 81       	ldd	r24, Y+6	; 0x06
    151c:	88 23       	and	r24, r24
    151e:	69 f1       	breq	.+90     	; 0x157a <__fixsfsi+0x90>
    1520:	0a c0       	rjmp	.+20     	; 0x1536 <__fixsfsi+0x4c>
    1522:	2f 81       	ldd	r18, Y+7	; 0x07
    1524:	38 85       	ldd	r19, Y+8	; 0x08
    1526:	37 fd       	sbrc	r19, 7
    1528:	24 c0       	rjmp	.+72     	; 0x1572 <__fixsfsi+0x88>
    152a:	6e 81       	ldd	r22, Y+6	; 0x06
    152c:	2f 31       	cpi	r18, 0x1F	; 31
    152e:	31 05       	cpc	r19, r1
    1530:	3c f0       	brlt	.+14     	; 0x1540 <__fixsfsi+0x56>
    1532:	66 23       	and	r22, r22
    1534:	11 f1       	breq	.+68     	; 0x157a <__fixsfsi+0x90>
    1536:	20 e0       	ldi	r18, 0x00	; 0
    1538:	30 e0       	ldi	r19, 0x00	; 0
    153a:	40 e0       	ldi	r20, 0x00	; 0
    153c:	50 e8       	ldi	r21, 0x80	; 128
    153e:	21 c0       	rjmp	.+66     	; 0x1582 <__fixsfsi+0x98>
    1540:	8e e1       	ldi	r24, 0x1E	; 30
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	82 1b       	sub	r24, r18
    1546:	93 0b       	sbc	r25, r19
    1548:	29 85       	ldd	r18, Y+9	; 0x09
    154a:	3a 85       	ldd	r19, Y+10	; 0x0a
    154c:	4b 85       	ldd	r20, Y+11	; 0x0b
    154e:	5c 85       	ldd	r21, Y+12	; 0x0c
    1550:	04 c0       	rjmp	.+8      	; 0x155a <__fixsfsi+0x70>
    1552:	56 95       	lsr	r21
    1554:	47 95       	ror	r20
    1556:	37 95       	ror	r19
    1558:	27 95       	ror	r18
    155a:	8a 95       	dec	r24
    155c:	d2 f7       	brpl	.-12     	; 0x1552 <__fixsfsi+0x68>
    155e:	66 23       	and	r22, r22
    1560:	81 f0       	breq	.+32     	; 0x1582 <__fixsfsi+0x98>
    1562:	50 95       	com	r21
    1564:	40 95       	com	r20
    1566:	30 95       	com	r19
    1568:	21 95       	neg	r18
    156a:	3f 4f       	sbci	r19, 0xFF	; 255
    156c:	4f 4f       	sbci	r20, 0xFF	; 255
    156e:	5f 4f       	sbci	r21, 0xFF	; 255
    1570:	08 c0       	rjmp	.+16     	; 0x1582 <__fixsfsi+0x98>
    1572:	20 e0       	ldi	r18, 0x00	; 0
    1574:	30 e0       	ldi	r19, 0x00	; 0
    1576:	a9 01       	movw	r20, r18
    1578:	04 c0       	rjmp	.+8      	; 0x1582 <__fixsfsi+0x98>
    157a:	2f ef       	ldi	r18, 0xFF	; 255
    157c:	3f ef       	ldi	r19, 0xFF	; 255
    157e:	4f ef       	ldi	r20, 0xFF	; 255
    1580:	5f e7       	ldi	r21, 0x7F	; 127
    1582:	b9 01       	movw	r22, r18
    1584:	ca 01       	movw	r24, r20
    1586:	2c 96       	adiw	r28, 0x0c	; 12
    1588:	e2 e0       	ldi	r30, 0x02	; 2
    158a:	0c 94 dd 0c 	jmp	0x19ba	; 0x19ba <__epilogue_restores__+0x20>

0000158e <__clzsi2>:
    158e:	af 92       	push	r10
    1590:	bf 92       	push	r11
    1592:	cf 92       	push	r12
    1594:	df 92       	push	r13
    1596:	ef 92       	push	r14
    1598:	ff 92       	push	r15
    159a:	0f 93       	push	r16
    159c:	1f 93       	push	r17
    159e:	7b 01       	movw	r14, r22
    15a0:	8c 01       	movw	r16, r24
    15a2:	80 e0       	ldi	r24, 0x00	; 0
    15a4:	e8 16       	cp	r14, r24
    15a6:	80 e0       	ldi	r24, 0x00	; 0
    15a8:	f8 06       	cpc	r15, r24
    15aa:	81 e0       	ldi	r24, 0x01	; 1
    15ac:	08 07       	cpc	r16, r24
    15ae:	80 e0       	ldi	r24, 0x00	; 0
    15b0:	18 07       	cpc	r17, r24
    15b2:	58 f4       	brcc	.+22     	; 0x15ca <__clzsi2+0x3c>
    15b4:	ef ef       	ldi	r30, 0xFF	; 255
    15b6:	ee 16       	cp	r14, r30
    15b8:	f1 04       	cpc	r15, r1
    15ba:	01 05       	cpc	r16, r1
    15bc:	11 05       	cpc	r17, r1
    15be:	09 f0       	breq	.+2      	; 0x15c2 <__clzsi2+0x34>
    15c0:	90 f4       	brcc	.+36     	; 0x15e6 <__clzsi2+0x58>
    15c2:	80 e0       	ldi	r24, 0x00	; 0
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	dc 01       	movw	r26, r24
    15c8:	17 c0       	rjmp	.+46     	; 0x15f8 <__clzsi2+0x6a>
    15ca:	f0 e0       	ldi	r31, 0x00	; 0
    15cc:	ef 16       	cp	r14, r31
    15ce:	f0 e0       	ldi	r31, 0x00	; 0
    15d0:	ff 06       	cpc	r15, r31
    15d2:	f0 e0       	ldi	r31, 0x00	; 0
    15d4:	0f 07       	cpc	r16, r31
    15d6:	f1 e0       	ldi	r31, 0x01	; 1
    15d8:	1f 07       	cpc	r17, r31
    15da:	50 f4       	brcc	.+20     	; 0x15f0 <__clzsi2+0x62>
    15dc:	80 e1       	ldi	r24, 0x10	; 16
    15de:	90 e0       	ldi	r25, 0x00	; 0
    15e0:	a0 e0       	ldi	r26, 0x00	; 0
    15e2:	b0 e0       	ldi	r27, 0x00	; 0
    15e4:	09 c0       	rjmp	.+18     	; 0x15f8 <__clzsi2+0x6a>
    15e6:	88 e0       	ldi	r24, 0x08	; 8
    15e8:	90 e0       	ldi	r25, 0x00	; 0
    15ea:	a0 e0       	ldi	r26, 0x00	; 0
    15ec:	b0 e0       	ldi	r27, 0x00	; 0
    15ee:	04 c0       	rjmp	.+8      	; 0x15f8 <__clzsi2+0x6a>
    15f0:	88 e1       	ldi	r24, 0x18	; 24
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	a0 e0       	ldi	r26, 0x00	; 0
    15f6:	b0 e0       	ldi	r27, 0x00	; 0
    15f8:	20 e2       	ldi	r18, 0x20	; 32
    15fa:	30 e0       	ldi	r19, 0x00	; 0
    15fc:	40 e0       	ldi	r20, 0x00	; 0
    15fe:	50 e0       	ldi	r21, 0x00	; 0
    1600:	28 1b       	sub	r18, r24
    1602:	39 0b       	sbc	r19, r25
    1604:	4a 0b       	sbc	r20, r26
    1606:	5b 0b       	sbc	r21, r27
    1608:	57 01       	movw	r10, r14
    160a:	68 01       	movw	r12, r16
    160c:	04 c0       	rjmp	.+8      	; 0x1616 <__clzsi2+0x88>
    160e:	d6 94       	lsr	r13
    1610:	c7 94       	ror	r12
    1612:	b7 94       	ror	r11
    1614:	a7 94       	ror	r10
    1616:	8a 95       	dec	r24
    1618:	d2 f7       	brpl	.-12     	; 0x160e <__clzsi2+0x80>
    161a:	d6 01       	movw	r26, r12
    161c:	c5 01       	movw	r24, r10
    161e:	88 59       	subi	r24, 0x98	; 152
    1620:	9f 4f       	sbci	r25, 0xFF	; 255
    1622:	fc 01       	movw	r30, r24
    1624:	80 81       	ld	r24, Z
    1626:	28 1b       	sub	r18, r24
    1628:	31 09       	sbc	r19, r1
    162a:	41 09       	sbc	r20, r1
    162c:	51 09       	sbc	r21, r1
    162e:	c9 01       	movw	r24, r18
    1630:	1f 91       	pop	r17
    1632:	0f 91       	pop	r16
    1634:	ff 90       	pop	r15
    1636:	ef 90       	pop	r14
    1638:	df 90       	pop	r13
    163a:	cf 90       	pop	r12
    163c:	bf 90       	pop	r11
    163e:	af 90       	pop	r10
    1640:	08 95       	ret

00001642 <__pack_f>:
    1642:	ef 92       	push	r14
    1644:	ff 92       	push	r15
    1646:	0f 93       	push	r16
    1648:	1f 93       	push	r17
    164a:	cf 93       	push	r28
    164c:	df 93       	push	r29
    164e:	fc 01       	movw	r30, r24
    1650:	24 81       	ldd	r18, Z+4	; 0x04
    1652:	35 81       	ldd	r19, Z+5	; 0x05
    1654:	46 81       	ldd	r20, Z+6	; 0x06
    1656:	57 81       	ldd	r21, Z+7	; 0x07
    1658:	61 81       	ldd	r22, Z+1	; 0x01
    165a:	80 81       	ld	r24, Z
    165c:	82 30       	cpi	r24, 0x02	; 2
    165e:	20 f4       	brcc	.+8      	; 0x1668 <__pack_f+0x26>
    1660:	40 61       	ori	r20, 0x10	; 16
    1662:	ef ef       	ldi	r30, 0xFF	; 255
    1664:	f0 e0       	ldi	r31, 0x00	; 0
    1666:	a3 c0       	rjmp	.+326    	; 0x17ae <__pack_f+0x16c>
    1668:	84 30       	cpi	r24, 0x04	; 4
    166a:	09 f4       	brne	.+2      	; 0x166e <__pack_f+0x2c>
    166c:	9b c0       	rjmp	.+310    	; 0x17a4 <__pack_f+0x162>
    166e:	82 30       	cpi	r24, 0x02	; 2
    1670:	09 f4       	brne	.+2      	; 0x1674 <__pack_f+0x32>
    1672:	92 c0       	rjmp	.+292    	; 0x1798 <__pack_f+0x156>
    1674:	21 15       	cp	r18, r1
    1676:	31 05       	cpc	r19, r1
    1678:	41 05       	cpc	r20, r1
    167a:	51 05       	cpc	r21, r1
    167c:	09 f4       	brne	.+2      	; 0x1680 <__pack_f+0x3e>
    167e:	8f c0       	rjmp	.+286    	; 0x179e <__pack_f+0x15c>
    1680:	02 80       	ldd	r0, Z+2	; 0x02
    1682:	f3 81       	ldd	r31, Z+3	; 0x03
    1684:	e0 2d       	mov	r30, r0
    1686:	8f ef       	ldi	r24, 0xFF	; 255
    1688:	e2 38       	cpi	r30, 0x82	; 130
    168a:	f8 07       	cpc	r31, r24
    168c:	0c f0       	brlt	.+2      	; 0x1690 <__pack_f+0x4e>
    168e:	5a c0       	rjmp	.+180    	; 0x1744 <__pack_f+0x102>
    1690:	c2 e8       	ldi	r28, 0x82	; 130
    1692:	df ef       	ldi	r29, 0xFF	; 255
    1694:	ce 1b       	sub	r28, r30
    1696:	df 0b       	sbc	r29, r31
    1698:	ca 31       	cpi	r28, 0x1A	; 26
    169a:	d1 05       	cpc	r29, r1
    169c:	6c f5       	brge	.+90     	; 0x16f8 <__pack_f+0xb6>
    169e:	79 01       	movw	r14, r18
    16a0:	8a 01       	movw	r16, r20
    16a2:	0c 2e       	mov	r0, r28
    16a4:	04 c0       	rjmp	.+8      	; 0x16ae <__pack_f+0x6c>
    16a6:	16 95       	lsr	r17
    16a8:	07 95       	ror	r16
    16aa:	f7 94       	ror	r15
    16ac:	e7 94       	ror	r14
    16ae:	0a 94       	dec	r0
    16b0:	d2 f7       	brpl	.-12     	; 0x16a6 <__pack_f+0x64>
    16b2:	81 e0       	ldi	r24, 0x01	; 1
    16b4:	90 e0       	ldi	r25, 0x00	; 0
    16b6:	a0 e0       	ldi	r26, 0x00	; 0
    16b8:	b0 e0       	ldi	r27, 0x00	; 0
    16ba:	0c 2e       	mov	r0, r28
    16bc:	04 c0       	rjmp	.+8      	; 0x16c6 <__pack_f+0x84>
    16be:	88 0f       	add	r24, r24
    16c0:	99 1f       	adc	r25, r25
    16c2:	aa 1f       	adc	r26, r26
    16c4:	bb 1f       	adc	r27, r27
    16c6:	0a 94       	dec	r0
    16c8:	d2 f7       	brpl	.-12     	; 0x16be <__pack_f+0x7c>
    16ca:	01 97       	sbiw	r24, 0x01	; 1
    16cc:	a1 09       	sbc	r26, r1
    16ce:	b1 09       	sbc	r27, r1
    16d0:	82 23       	and	r24, r18
    16d2:	93 23       	and	r25, r19
    16d4:	a4 23       	and	r26, r20
    16d6:	b5 23       	and	r27, r21
    16d8:	21 e0       	ldi	r18, 0x01	; 1
    16da:	30 e0       	ldi	r19, 0x00	; 0
    16dc:	40 e0       	ldi	r20, 0x00	; 0
    16de:	50 e0       	ldi	r21, 0x00	; 0
    16e0:	00 97       	sbiw	r24, 0x00	; 0
    16e2:	a1 05       	cpc	r26, r1
    16e4:	b1 05       	cpc	r27, r1
    16e6:	19 f4       	brne	.+6      	; 0x16ee <__pack_f+0xac>
    16e8:	20 e0       	ldi	r18, 0x00	; 0
    16ea:	30 e0       	ldi	r19, 0x00	; 0
    16ec:	a9 01       	movw	r20, r18
    16ee:	2e 29       	or	r18, r14
    16f0:	3f 29       	or	r19, r15
    16f2:	40 2b       	or	r20, r16
    16f4:	51 2b       	or	r21, r17
    16f6:	03 c0       	rjmp	.+6      	; 0x16fe <__pack_f+0xbc>
    16f8:	20 e0       	ldi	r18, 0x00	; 0
    16fa:	30 e0       	ldi	r19, 0x00	; 0
    16fc:	a9 01       	movw	r20, r18
    16fe:	da 01       	movw	r26, r20
    1700:	c9 01       	movw	r24, r18
    1702:	8f 77       	andi	r24, 0x7F	; 127
    1704:	90 70       	andi	r25, 0x00	; 0
    1706:	a0 70       	andi	r26, 0x00	; 0
    1708:	b0 70       	andi	r27, 0x00	; 0
    170a:	80 34       	cpi	r24, 0x40	; 64
    170c:	91 05       	cpc	r25, r1
    170e:	a1 05       	cpc	r26, r1
    1710:	b1 05       	cpc	r27, r1
    1712:	39 f4       	brne	.+14     	; 0x1722 <__pack_f+0xe0>
    1714:	27 ff       	sbrs	r18, 7
    1716:	09 c0       	rjmp	.+18     	; 0x172a <__pack_f+0xe8>
    1718:	20 5c       	subi	r18, 0xC0	; 192
    171a:	3f 4f       	sbci	r19, 0xFF	; 255
    171c:	4f 4f       	sbci	r20, 0xFF	; 255
    171e:	5f 4f       	sbci	r21, 0xFF	; 255
    1720:	04 c0       	rjmp	.+8      	; 0x172a <__pack_f+0xe8>
    1722:	21 5c       	subi	r18, 0xC1	; 193
    1724:	3f 4f       	sbci	r19, 0xFF	; 255
    1726:	4f 4f       	sbci	r20, 0xFF	; 255
    1728:	5f 4f       	sbci	r21, 0xFF	; 255
    172a:	e1 e0       	ldi	r30, 0x01	; 1
    172c:	f0 e0       	ldi	r31, 0x00	; 0
    172e:	20 30       	cpi	r18, 0x00	; 0
    1730:	80 e0       	ldi	r24, 0x00	; 0
    1732:	38 07       	cpc	r19, r24
    1734:	80 e0       	ldi	r24, 0x00	; 0
    1736:	48 07       	cpc	r20, r24
    1738:	80 e4       	ldi	r24, 0x40	; 64
    173a:	58 07       	cpc	r21, r24
    173c:	28 f5       	brcc	.+74     	; 0x1788 <__pack_f+0x146>
    173e:	e0 e0       	ldi	r30, 0x00	; 0
    1740:	f0 e0       	ldi	r31, 0x00	; 0
    1742:	22 c0       	rjmp	.+68     	; 0x1788 <__pack_f+0x146>
    1744:	e0 38       	cpi	r30, 0x80	; 128
    1746:	f1 05       	cpc	r31, r1
    1748:	6c f5       	brge	.+90     	; 0x17a4 <__pack_f+0x162>
    174a:	e1 58       	subi	r30, 0x81	; 129
    174c:	ff 4f       	sbci	r31, 0xFF	; 255
    174e:	da 01       	movw	r26, r20
    1750:	c9 01       	movw	r24, r18
    1752:	8f 77       	andi	r24, 0x7F	; 127
    1754:	90 70       	andi	r25, 0x00	; 0
    1756:	a0 70       	andi	r26, 0x00	; 0
    1758:	b0 70       	andi	r27, 0x00	; 0
    175a:	80 34       	cpi	r24, 0x40	; 64
    175c:	91 05       	cpc	r25, r1
    175e:	a1 05       	cpc	r26, r1
    1760:	b1 05       	cpc	r27, r1
    1762:	39 f4       	brne	.+14     	; 0x1772 <__pack_f+0x130>
    1764:	27 ff       	sbrs	r18, 7
    1766:	09 c0       	rjmp	.+18     	; 0x177a <__pack_f+0x138>
    1768:	20 5c       	subi	r18, 0xC0	; 192
    176a:	3f 4f       	sbci	r19, 0xFF	; 255
    176c:	4f 4f       	sbci	r20, 0xFF	; 255
    176e:	5f 4f       	sbci	r21, 0xFF	; 255
    1770:	04 c0       	rjmp	.+8      	; 0x177a <__pack_f+0x138>
    1772:	21 5c       	subi	r18, 0xC1	; 193
    1774:	3f 4f       	sbci	r19, 0xFF	; 255
    1776:	4f 4f       	sbci	r20, 0xFF	; 255
    1778:	5f 4f       	sbci	r21, 0xFF	; 255
    177a:	57 ff       	sbrs	r21, 7
    177c:	05 c0       	rjmp	.+10     	; 0x1788 <__pack_f+0x146>
    177e:	56 95       	lsr	r21
    1780:	47 95       	ror	r20
    1782:	37 95       	ror	r19
    1784:	27 95       	ror	r18
    1786:	31 96       	adiw	r30, 0x01	; 1
    1788:	87 e0       	ldi	r24, 0x07	; 7
    178a:	56 95       	lsr	r21
    178c:	47 95       	ror	r20
    178e:	37 95       	ror	r19
    1790:	27 95       	ror	r18
    1792:	8a 95       	dec	r24
    1794:	d1 f7       	brne	.-12     	; 0x178a <__pack_f+0x148>
    1796:	0b c0       	rjmp	.+22     	; 0x17ae <__pack_f+0x16c>
    1798:	e0 e0       	ldi	r30, 0x00	; 0
    179a:	f0 e0       	ldi	r31, 0x00	; 0
    179c:	05 c0       	rjmp	.+10     	; 0x17a8 <__pack_f+0x166>
    179e:	e0 e0       	ldi	r30, 0x00	; 0
    17a0:	f0 e0       	ldi	r31, 0x00	; 0
    17a2:	05 c0       	rjmp	.+10     	; 0x17ae <__pack_f+0x16c>
    17a4:	ef ef       	ldi	r30, 0xFF	; 255
    17a6:	f0 e0       	ldi	r31, 0x00	; 0
    17a8:	20 e0       	ldi	r18, 0x00	; 0
    17aa:	30 e0       	ldi	r19, 0x00	; 0
    17ac:	a9 01       	movw	r20, r18
    17ae:	8e 2f       	mov	r24, r30
    17b0:	87 95       	ror	r24
    17b2:	88 27       	eor	r24, r24
    17b4:	87 95       	ror	r24
    17b6:	94 2f       	mov	r25, r20
    17b8:	9f 77       	andi	r25, 0x7F	; 127
    17ba:	67 95       	ror	r22
    17bc:	66 27       	eor	r22, r22
    17be:	67 95       	ror	r22
    17c0:	e6 95       	lsr	r30
    17c2:	e2 2e       	mov	r14, r18
    17c4:	a9 2f       	mov	r26, r25
    17c6:	a8 2b       	or	r26, r24
    17c8:	fe 2f       	mov	r31, r30
    17ca:	f6 2b       	or	r31, r22
    17cc:	62 2f       	mov	r22, r18
    17ce:	73 2f       	mov	r23, r19
    17d0:	8a 2f       	mov	r24, r26
    17d2:	9f 2f       	mov	r25, r31
    17d4:	cd b7       	in	r28, 0x3d	; 61
    17d6:	de b7       	in	r29, 0x3e	; 62
    17d8:	e6 e0       	ldi	r30, 0x06	; 6
    17da:	0c 94 d9 0c 	jmp	0x19b2	; 0x19b2 <__epilogue_restores__+0x18>

000017de <__unpack_f>:
    17de:	dc 01       	movw	r26, r24
    17e0:	fb 01       	movw	r30, r22
    17e2:	2c 91       	ld	r18, X
    17e4:	11 96       	adiw	r26, 0x01	; 1
    17e6:	3c 91       	ld	r19, X
    17e8:	11 97       	sbiw	r26, 0x01	; 1
    17ea:	12 96       	adiw	r26, 0x02	; 2
    17ec:	8c 91       	ld	r24, X
    17ee:	12 97       	sbiw	r26, 0x02	; 2
    17f0:	48 2f       	mov	r20, r24
    17f2:	4f 77       	andi	r20, 0x7F	; 127
    17f4:	50 e0       	ldi	r21, 0x00	; 0
    17f6:	98 2f       	mov	r25, r24
    17f8:	99 1f       	adc	r25, r25
    17fa:	99 27       	eor	r25, r25
    17fc:	99 1f       	adc	r25, r25
    17fe:	13 96       	adiw	r26, 0x03	; 3
    1800:	6c 91       	ld	r22, X
    1802:	13 97       	sbiw	r26, 0x03	; 3
    1804:	86 2f       	mov	r24, r22
    1806:	88 0f       	add	r24, r24
    1808:	89 2b       	or	r24, r25
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	66 1f       	adc	r22, r22
    180e:	66 27       	eor	r22, r22
    1810:	66 1f       	adc	r22, r22
    1812:	61 83       	std	Z+1, r22	; 0x01
    1814:	00 97       	sbiw	r24, 0x00	; 0
    1816:	39 f5       	brne	.+78     	; 0x1866 <__unpack_f+0x88>
    1818:	21 15       	cp	r18, r1
    181a:	31 05       	cpc	r19, r1
    181c:	41 05       	cpc	r20, r1
    181e:	51 05       	cpc	r21, r1
    1820:	11 f4       	brne	.+4      	; 0x1826 <__unpack_f+0x48>
    1822:	82 e0       	ldi	r24, 0x02	; 2
    1824:	29 c0       	rjmp	.+82     	; 0x1878 <__unpack_f+0x9a>
    1826:	82 e8       	ldi	r24, 0x82	; 130
    1828:	9f ef       	ldi	r25, 0xFF	; 255
    182a:	93 83       	std	Z+3, r25	; 0x03
    182c:	82 83       	std	Z+2, r24	; 0x02
    182e:	67 e0       	ldi	r22, 0x07	; 7
    1830:	22 0f       	add	r18, r18
    1832:	33 1f       	adc	r19, r19
    1834:	44 1f       	adc	r20, r20
    1836:	55 1f       	adc	r21, r21
    1838:	6a 95       	dec	r22
    183a:	d1 f7       	brne	.-12     	; 0x1830 <__unpack_f+0x52>
    183c:	83 e0       	ldi	r24, 0x03	; 3
    183e:	80 83       	st	Z, r24
    1840:	09 c0       	rjmp	.+18     	; 0x1854 <__unpack_f+0x76>
    1842:	22 0f       	add	r18, r18
    1844:	33 1f       	adc	r19, r19
    1846:	44 1f       	adc	r20, r20
    1848:	55 1f       	adc	r21, r21
    184a:	82 81       	ldd	r24, Z+2	; 0x02
    184c:	93 81       	ldd	r25, Z+3	; 0x03
    184e:	01 97       	sbiw	r24, 0x01	; 1
    1850:	93 83       	std	Z+3, r25	; 0x03
    1852:	82 83       	std	Z+2, r24	; 0x02
    1854:	20 30       	cpi	r18, 0x00	; 0
    1856:	80 e0       	ldi	r24, 0x00	; 0
    1858:	38 07       	cpc	r19, r24
    185a:	80 e0       	ldi	r24, 0x00	; 0
    185c:	48 07       	cpc	r20, r24
    185e:	80 e4       	ldi	r24, 0x40	; 64
    1860:	58 07       	cpc	r21, r24
    1862:	78 f3       	brcs	.-34     	; 0x1842 <__unpack_f+0x64>
    1864:	20 c0       	rjmp	.+64     	; 0x18a6 <__unpack_f+0xc8>
    1866:	8f 3f       	cpi	r24, 0xFF	; 255
    1868:	91 05       	cpc	r25, r1
    186a:	79 f4       	brne	.+30     	; 0x188a <__unpack_f+0xac>
    186c:	21 15       	cp	r18, r1
    186e:	31 05       	cpc	r19, r1
    1870:	41 05       	cpc	r20, r1
    1872:	51 05       	cpc	r21, r1
    1874:	19 f4       	brne	.+6      	; 0x187c <__unpack_f+0x9e>
    1876:	84 e0       	ldi	r24, 0x04	; 4
    1878:	80 83       	st	Z, r24
    187a:	08 95       	ret
    187c:	44 ff       	sbrs	r20, 4
    187e:	03 c0       	rjmp	.+6      	; 0x1886 <__unpack_f+0xa8>
    1880:	81 e0       	ldi	r24, 0x01	; 1
    1882:	80 83       	st	Z, r24
    1884:	10 c0       	rjmp	.+32     	; 0x18a6 <__unpack_f+0xc8>
    1886:	10 82       	st	Z, r1
    1888:	0e c0       	rjmp	.+28     	; 0x18a6 <__unpack_f+0xc8>
    188a:	8f 57       	subi	r24, 0x7F	; 127
    188c:	90 40       	sbci	r25, 0x00	; 0
    188e:	93 83       	std	Z+3, r25	; 0x03
    1890:	82 83       	std	Z+2, r24	; 0x02
    1892:	83 e0       	ldi	r24, 0x03	; 3
    1894:	80 83       	st	Z, r24
    1896:	87 e0       	ldi	r24, 0x07	; 7
    1898:	22 0f       	add	r18, r18
    189a:	33 1f       	adc	r19, r19
    189c:	44 1f       	adc	r20, r20
    189e:	55 1f       	adc	r21, r21
    18a0:	8a 95       	dec	r24
    18a2:	d1 f7       	brne	.-12     	; 0x1898 <__unpack_f+0xba>
    18a4:	50 64       	ori	r21, 0x40	; 64
    18a6:	24 83       	std	Z+4, r18	; 0x04
    18a8:	35 83       	std	Z+5, r19	; 0x05
    18aa:	46 83       	std	Z+6, r20	; 0x06
    18ac:	57 83       	std	Z+7, r21	; 0x07
    18ae:	08 95       	ret

000018b0 <__fpcmp_parts_f>:
    18b0:	fc 01       	movw	r30, r24
    18b2:	db 01       	movw	r26, r22
    18b4:	90 81       	ld	r25, Z
    18b6:	92 30       	cpi	r25, 0x02	; 2
    18b8:	08 f4       	brcc	.+2      	; 0x18bc <__fpcmp_parts_f+0xc>
    18ba:	49 c0       	rjmp	.+146    	; 0x194e <__fpcmp_parts_f+0x9e>
    18bc:	8c 91       	ld	r24, X
    18be:	82 30       	cpi	r24, 0x02	; 2
    18c0:	08 f4       	brcc	.+2      	; 0x18c4 <__fpcmp_parts_f+0x14>
    18c2:	45 c0       	rjmp	.+138    	; 0x194e <__fpcmp_parts_f+0x9e>
    18c4:	94 30       	cpi	r25, 0x04	; 4
    18c6:	51 f4       	brne	.+20     	; 0x18dc <__fpcmp_parts_f+0x2c>
    18c8:	61 81       	ldd	r22, Z+1	; 0x01
    18ca:	84 30       	cpi	r24, 0x04	; 4
    18cc:	b1 f5       	brne	.+108    	; 0x193a <__fpcmp_parts_f+0x8a>
    18ce:	11 96       	adiw	r26, 0x01	; 1
    18d0:	2c 91       	ld	r18, X
    18d2:	11 97       	sbiw	r26, 0x01	; 1
    18d4:	30 e0       	ldi	r19, 0x00	; 0
    18d6:	26 1b       	sub	r18, r22
    18d8:	31 09       	sbc	r19, r1
    18da:	41 c0       	rjmp	.+130    	; 0x195e <__fpcmp_parts_f+0xae>
    18dc:	84 30       	cpi	r24, 0x04	; 4
    18de:	21 f0       	breq	.+8      	; 0x18e8 <__fpcmp_parts_f+0x38>
    18e0:	92 30       	cpi	r25, 0x02	; 2
    18e2:	41 f4       	brne	.+16     	; 0x18f4 <__fpcmp_parts_f+0x44>
    18e4:	82 30       	cpi	r24, 0x02	; 2
    18e6:	b1 f1       	breq	.+108    	; 0x1954 <__fpcmp_parts_f+0xa4>
    18e8:	11 96       	adiw	r26, 0x01	; 1
    18ea:	8c 91       	ld	r24, X
    18ec:	11 97       	sbiw	r26, 0x01	; 1
    18ee:	88 23       	and	r24, r24
    18f0:	a1 f1       	breq	.+104    	; 0x195a <__fpcmp_parts_f+0xaa>
    18f2:	2d c0       	rjmp	.+90     	; 0x194e <__fpcmp_parts_f+0x9e>
    18f4:	61 81       	ldd	r22, Z+1	; 0x01
    18f6:	82 30       	cpi	r24, 0x02	; 2
    18f8:	01 f1       	breq	.+64     	; 0x193a <__fpcmp_parts_f+0x8a>
    18fa:	11 96       	adiw	r26, 0x01	; 1
    18fc:	8c 91       	ld	r24, X
    18fe:	11 97       	sbiw	r26, 0x01	; 1
    1900:	68 17       	cp	r22, r24
    1902:	d9 f4       	brne	.+54     	; 0x193a <__fpcmp_parts_f+0x8a>
    1904:	22 81       	ldd	r18, Z+2	; 0x02
    1906:	33 81       	ldd	r19, Z+3	; 0x03
    1908:	12 96       	adiw	r26, 0x02	; 2
    190a:	8d 91       	ld	r24, X+
    190c:	9c 91       	ld	r25, X
    190e:	13 97       	sbiw	r26, 0x03	; 3
    1910:	82 17       	cp	r24, r18
    1912:	93 07       	cpc	r25, r19
    1914:	94 f0       	brlt	.+36     	; 0x193a <__fpcmp_parts_f+0x8a>
    1916:	28 17       	cp	r18, r24
    1918:	39 07       	cpc	r19, r25
    191a:	bc f0       	brlt	.+46     	; 0x194a <__fpcmp_parts_f+0x9a>
    191c:	24 81       	ldd	r18, Z+4	; 0x04
    191e:	35 81       	ldd	r19, Z+5	; 0x05
    1920:	46 81       	ldd	r20, Z+6	; 0x06
    1922:	57 81       	ldd	r21, Z+7	; 0x07
    1924:	14 96       	adiw	r26, 0x04	; 4
    1926:	8d 91       	ld	r24, X+
    1928:	9d 91       	ld	r25, X+
    192a:	0d 90       	ld	r0, X+
    192c:	bc 91       	ld	r27, X
    192e:	a0 2d       	mov	r26, r0
    1930:	82 17       	cp	r24, r18
    1932:	93 07       	cpc	r25, r19
    1934:	a4 07       	cpc	r26, r20
    1936:	b5 07       	cpc	r27, r21
    1938:	18 f4       	brcc	.+6      	; 0x1940 <__fpcmp_parts_f+0x90>
    193a:	66 23       	and	r22, r22
    193c:	41 f0       	breq	.+16     	; 0x194e <__fpcmp_parts_f+0x9e>
    193e:	0d c0       	rjmp	.+26     	; 0x195a <__fpcmp_parts_f+0xaa>
    1940:	28 17       	cp	r18, r24
    1942:	39 07       	cpc	r19, r25
    1944:	4a 07       	cpc	r20, r26
    1946:	5b 07       	cpc	r21, r27
    1948:	28 f4       	brcc	.+10     	; 0x1954 <__fpcmp_parts_f+0xa4>
    194a:	66 23       	and	r22, r22
    194c:	31 f0       	breq	.+12     	; 0x195a <__fpcmp_parts_f+0xaa>
    194e:	21 e0       	ldi	r18, 0x01	; 1
    1950:	30 e0       	ldi	r19, 0x00	; 0
    1952:	05 c0       	rjmp	.+10     	; 0x195e <__fpcmp_parts_f+0xae>
    1954:	20 e0       	ldi	r18, 0x00	; 0
    1956:	30 e0       	ldi	r19, 0x00	; 0
    1958:	02 c0       	rjmp	.+4      	; 0x195e <__fpcmp_parts_f+0xae>
    195a:	2f ef       	ldi	r18, 0xFF	; 255
    195c:	3f ef       	ldi	r19, 0xFF	; 255
    195e:	c9 01       	movw	r24, r18
    1960:	08 95       	ret

00001962 <__prologue_saves__>:
    1962:	2f 92       	push	r2
    1964:	3f 92       	push	r3
    1966:	4f 92       	push	r4
    1968:	5f 92       	push	r5
    196a:	6f 92       	push	r6
    196c:	7f 92       	push	r7
    196e:	8f 92       	push	r8
    1970:	9f 92       	push	r9
    1972:	af 92       	push	r10
    1974:	bf 92       	push	r11
    1976:	cf 92       	push	r12
    1978:	df 92       	push	r13
    197a:	ef 92       	push	r14
    197c:	ff 92       	push	r15
    197e:	0f 93       	push	r16
    1980:	1f 93       	push	r17
    1982:	cf 93       	push	r28
    1984:	df 93       	push	r29
    1986:	cd b7       	in	r28, 0x3d	; 61
    1988:	de b7       	in	r29, 0x3e	; 62
    198a:	ca 1b       	sub	r28, r26
    198c:	db 0b       	sbc	r29, r27
    198e:	0f b6       	in	r0, 0x3f	; 63
    1990:	f8 94       	cli
    1992:	de bf       	out	0x3e, r29	; 62
    1994:	0f be       	out	0x3f, r0	; 63
    1996:	cd bf       	out	0x3d, r28	; 61
    1998:	09 94       	ijmp

0000199a <__epilogue_restores__>:
    199a:	2a 88       	ldd	r2, Y+18	; 0x12
    199c:	39 88       	ldd	r3, Y+17	; 0x11
    199e:	48 88       	ldd	r4, Y+16	; 0x10
    19a0:	5f 84       	ldd	r5, Y+15	; 0x0f
    19a2:	6e 84       	ldd	r6, Y+14	; 0x0e
    19a4:	7d 84       	ldd	r7, Y+13	; 0x0d
    19a6:	8c 84       	ldd	r8, Y+12	; 0x0c
    19a8:	9b 84       	ldd	r9, Y+11	; 0x0b
    19aa:	aa 84       	ldd	r10, Y+10	; 0x0a
    19ac:	b9 84       	ldd	r11, Y+9	; 0x09
    19ae:	c8 84       	ldd	r12, Y+8	; 0x08
    19b0:	df 80       	ldd	r13, Y+7	; 0x07
    19b2:	ee 80       	ldd	r14, Y+6	; 0x06
    19b4:	fd 80       	ldd	r15, Y+5	; 0x05
    19b6:	0c 81       	ldd	r16, Y+4	; 0x04
    19b8:	1b 81       	ldd	r17, Y+3	; 0x03
    19ba:	aa 81       	ldd	r26, Y+2	; 0x02
    19bc:	b9 81       	ldd	r27, Y+1	; 0x01
    19be:	ce 0f       	add	r28, r30
    19c0:	d1 1d       	adc	r29, r1
    19c2:	0f b6       	in	r0, 0x3f	; 63
    19c4:	f8 94       	cli
    19c6:	de bf       	out	0x3e, r29	; 62
    19c8:	0f be       	out	0x3f, r0	; 63
    19ca:	cd bf       	out	0x3d, r28	; 61
    19cc:	ed 01       	movw	r28, r26
    19ce:	08 95       	ret

000019d0 <_exit>:
    19d0:	f8 94       	cli

000019d2 <__stop_program>:
    19d2:	ff cf       	rjmp	.-2      	; 0x19d2 <__stop_program>
