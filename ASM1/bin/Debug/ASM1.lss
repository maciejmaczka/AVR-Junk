
bin/Debug/ASM1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001b8a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  00001b8a  00001c1e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .fuse         00000002  00820000  00820000  00001c26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .stab         0000174c  00000000  00000000  00001c28  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000009c9  00000000  00000000  00003374  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e8       	ldi	r30, 0x8A	; 138
      68:	fb e1       	ldi	r31, 0x1B	; 27
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 41 00 	call	0x82	; 0x82 <main>
      7a:	0c 94 c3 0d 	jmp	0x1b86	; 0x1b86 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include <avr/eeprom.h>


uint8_t cyfra(uint8_t _cyfra);
int main(void)
{
      82:	0f 93       	push	r16
      84:	1f 93       	push	r17
      86:	df 93       	push	r29
      88:	cf 93       	push	r28
      8a:	cd b7       	in	r28, 0x3d	; 61
      8c:	de b7       	in	r29, 0x3e	; 62
      8e:	c1 59       	subi	r28, 0x91	; 145
      90:	d0 40       	sbci	r29, 0x00	; 0
      92:	0f b6       	in	r0, 0x3f	; 63
      94:	f8 94       	cli
      96:	de bf       	out	0x3e, r29	; 62
      98:	0f be       	out	0x3f, r0	; 63
      9a:	cd bf       	out	0x3d, r28	; 61
    DDRA = 0xff;  // output
      9c:	8a e3       	ldi	r24, 0x3A	; 58
      9e:	90 e0       	ldi	r25, 0x00	; 0
      a0:	2f ef       	ldi	r18, 0xFF	; 255
      a2:	fc 01       	movw	r30, r24
      a4:	20 83       	st	Z, r18
    DDRB = 0xff;
      a6:	87 e3       	ldi	r24, 0x37	; 55
      a8:	90 e0       	ldi	r25, 0x00	; 0
      aa:	2f ef       	ldi	r18, 0xFF	; 255
      ac:	fc 01       	movw	r30, r24
      ae:	20 83       	st	Z, r18

    DDRD = 0x00; //input
      b0:	81 e3       	ldi	r24, 0x31	; 49
      b2:	90 e0       	ldi	r25, 0x00	; 0
      b4:	fc 01       	movw	r30, r24
      b6:	10 82       	st	Z, r1
    PORTD = 0xff;
      b8:	82 e3       	ldi	r24, 0x32	; 50
      ba:	90 e0       	ldi	r25, 0x00	; 0
      bc:	2f ef       	ldi	r18, 0xFF	; 255
      be:	fc 01       	movw	r30, r24
      c0:	20 83       	st	Z, r18

    uint8_t value;


    PORTA = 0b01010101;
      c2:	8b e3       	ldi	r24, 0x3B	; 59
      c4:	90 e0       	ldi	r25, 0x00	; 0
      c6:	25 e5       	ldi	r18, 0x55	; 85
      c8:	fc 01       	movw	r30, r24
      ca:	20 83       	st	Z, r18
      cc:	80 e0       	ldi	r24, 0x00	; 0
      ce:	90 e0       	ldi	r25, 0x00	; 0
      d0:	a6 e9       	ldi	r26, 0x96	; 150
      d2:	b3 e4       	ldi	r27, 0x43	; 67
      d4:	8e 83       	std	Y+6, r24	; 0x06
      d6:	9f 83       	std	Y+7, r25	; 0x07
      d8:	a8 87       	std	Y+8, r26	; 0x08
      da:	b9 87       	std	Y+9, r27	; 0x09
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
      dc:	6e 81       	ldd	r22, Y+6	; 0x06
      de:	7f 81       	ldd	r23, Y+7	; 0x07
      e0:	88 85       	ldd	r24, Y+8	; 0x08
      e2:	99 85       	ldd	r25, Y+9	; 0x09
      e4:	20 e0       	ldi	r18, 0x00	; 0
      e6:	30 e0       	ldi	r19, 0x00	; 0
      e8:	4a e7       	ldi	r20, 0x7A	; 122
      ea:	53 e4       	ldi	r21, 0x43	; 67
      ec:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
      f0:	dc 01       	movw	r26, r24
      f2:	cb 01       	movw	r24, r22
      f4:	8a 87       	std	Y+10, r24	; 0x0a
      f6:	9b 87       	std	Y+11, r25	; 0x0b
      f8:	ac 87       	std	Y+12, r26	; 0x0c
      fa:	bd 87       	std	Y+13, r27	; 0x0d
	if (__tmp < 1.0)
      fc:	11 e0       	ldi	r17, 0x01	; 1
      fe:	6a 85       	ldd	r22, Y+10	; 0x0a
     100:	7b 85       	ldd	r23, Y+11	; 0x0b
     102:	8c 85       	ldd	r24, Y+12	; 0x0c
     104:	9d 85       	ldd	r25, Y+13	; 0x0d
     106:	20 e0       	ldi	r18, 0x00	; 0
     108:	30 e0       	ldi	r19, 0x00	; 0
     10a:	40 e8       	ldi	r20, 0x80	; 128
     10c:	5f e3       	ldi	r21, 0x3F	; 63
     10e:	0e 94 65 0b 	call	0x16ca	; 0x16ca <__ltsf2>
     112:	88 23       	and	r24, r24
     114:	0c f0       	brlt	.+2      	; 0x118 <main+0x96>
     116:	10 e0       	ldi	r17, 0x00	; 0
     118:	11 23       	and	r17, r17
     11a:	29 f0       	breq	.+10     	; 0x126 <main+0xa4>
		__ticks = 1;
     11c:	81 e0       	ldi	r24, 0x01	; 1
     11e:	90 e0       	ldi	r25, 0x00	; 0
     120:	9f 87       	std	Y+15, r25	; 0x0f
     122:	8e 87       	std	Y+14, r24	; 0x0e
     124:	46 c0       	rjmp	.+140    	; 0x1b2 <main+0x130>
	else if (__tmp > 65535)
     126:	11 e0       	ldi	r17, 0x01	; 1
     128:	6a 85       	ldd	r22, Y+10	; 0x0a
     12a:	7b 85       	ldd	r23, Y+11	; 0x0b
     12c:	8c 85       	ldd	r24, Y+12	; 0x0c
     12e:	9d 85       	ldd	r25, Y+13	; 0x0d
     130:	20 e0       	ldi	r18, 0x00	; 0
     132:	3f ef       	ldi	r19, 0xFF	; 255
     134:	4f e7       	ldi	r20, 0x7F	; 127
     136:	57 e4       	ldi	r21, 0x47	; 71
     138:	0e 94 05 0b 	call	0x160a	; 0x160a <__gtsf2>
     13c:	18 16       	cp	r1, r24
     13e:	0c f0       	brlt	.+2      	; 0x142 <main+0xc0>
     140:	10 e0       	ldi	r17, 0x00	; 0
     142:	11 23       	and	r17, r17
     144:	61 f1       	breq	.+88     	; 0x19e <main+0x11c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     146:	6e 81       	ldd	r22, Y+6	; 0x06
     148:	7f 81       	ldd	r23, Y+7	; 0x07
     14a:	88 85       	ldd	r24, Y+8	; 0x08
     14c:	99 85       	ldd	r25, Y+9	; 0x09
     14e:	20 e0       	ldi	r18, 0x00	; 0
     150:	30 e0       	ldi	r19, 0x00	; 0
     152:	40 e2       	ldi	r20, 0x20	; 32
     154:	51 e4       	ldi	r21, 0x41	; 65
     156:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     15a:	dc 01       	movw	r26, r24
     15c:	cb 01       	movw	r24, r22
     15e:	bc 01       	movw	r22, r24
     160:	cd 01       	movw	r24, r26
     162:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     166:	dc 01       	movw	r26, r24
     168:	cb 01       	movw	r24, r22
     16a:	9f 87       	std	Y+15, r25	; 0x0f
     16c:	8e 87       	std	Y+14, r24	; 0x0e
     16e:	12 c0       	rjmp	.+36     	; 0x194 <main+0x112>
     170:	89 e1       	ldi	r24, 0x19	; 25
     172:	90 e0       	ldi	r25, 0x00	; 0
     174:	99 8b       	std	Y+17, r25	; 0x11
     176:	88 8b       	std	Y+16, r24	; 0x10
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     178:	88 89       	ldd	r24, Y+16	; 0x10
     17a:	99 89       	ldd	r25, Y+17	; 0x11
     17c:	8c 01       	movw	r16, r24
     17e:	c8 01       	movw	r24, r16
     180:	01 97       	sbiw	r24, 0x01	; 1
     182:	f1 f7       	brne	.-4      	; 0x180 <main+0xfe>
     184:	8c 01       	movw	r16, r24
     186:	19 8b       	std	Y+17, r17	; 0x11
     188:	08 8b       	std	Y+16, r16	; 0x10
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     18a:	8e 85       	ldd	r24, Y+14	; 0x0e
     18c:	9f 85       	ldd	r25, Y+15	; 0x0f
     18e:	01 97       	sbiw	r24, 0x01	; 1
     190:	9f 87       	std	Y+15, r25	; 0x0f
     192:	8e 87       	std	Y+14, r24	; 0x0e
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     194:	8e 85       	ldd	r24, Y+14	; 0x0e
     196:	9f 85       	ldd	r25, Y+15	; 0x0f
     198:	00 97       	sbiw	r24, 0x00	; 0
     19a:	51 f7       	brne	.-44     	; 0x170 <main+0xee>
     19c:	17 c0       	rjmp	.+46     	; 0x1cc <main+0x14a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     19e:	6a 85       	ldd	r22, Y+10	; 0x0a
     1a0:	7b 85       	ldd	r23, Y+11	; 0x0b
     1a2:	8c 85       	ldd	r24, Y+12	; 0x0c
     1a4:	9d 85       	ldd	r25, Y+13	; 0x0d
     1a6:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     1aa:	dc 01       	movw	r26, r24
     1ac:	cb 01       	movw	r24, r22
     1ae:	9f 87       	std	Y+15, r25	; 0x0f
     1b0:	8e 87       	std	Y+14, r24	; 0x0e
     1b2:	8e 85       	ldd	r24, Y+14	; 0x0e
     1b4:	9f 85       	ldd	r25, Y+15	; 0x0f
     1b6:	9b 8b       	std	Y+19, r25	; 0x13
     1b8:	8a 8b       	std	Y+18, r24	; 0x12
     1ba:	8a 89       	ldd	r24, Y+18	; 0x12
     1bc:	9b 89       	ldd	r25, Y+19	; 0x13
     1be:	8c 01       	movw	r16, r24
     1c0:	f8 01       	movw	r30, r16
     1c2:	31 97       	sbiw	r30, 0x01	; 1
     1c4:	f1 f7       	brne	.-4      	; 0x1c2 <main+0x140>
     1c6:	8f 01       	movw	r16, r30
     1c8:	1b 8b       	std	Y+19, r17	; 0x13
     1ca:	0a 8b       	std	Y+18, r16	; 0x12
    _delay_ms(300);
    PORTA = 0b10101010;
     1cc:	8b e3       	ldi	r24, 0x3B	; 59
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	2a ea       	ldi	r18, 0xAA	; 170
     1d2:	fc 01       	movw	r30, r24
     1d4:	20 83       	st	Z, r18
     1d6:	80 e0       	ldi	r24, 0x00	; 0
     1d8:	90 e0       	ldi	r25, 0x00	; 0
     1da:	a6 e9       	ldi	r26, 0x96	; 150
     1dc:	b3 e4       	ldi	r27, 0x43	; 67
     1de:	8c 8b       	std	Y+20, r24	; 0x14
     1e0:	9d 8b       	std	Y+21, r25	; 0x15
     1e2:	ae 8b       	std	Y+22, r26	; 0x16
     1e4:	bf 8b       	std	Y+23, r27	; 0x17
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     1e6:	6c 89       	ldd	r22, Y+20	; 0x14
     1e8:	7d 89       	ldd	r23, Y+21	; 0x15
     1ea:	8e 89       	ldd	r24, Y+22	; 0x16
     1ec:	9f 89       	ldd	r25, Y+23	; 0x17
     1ee:	20 e0       	ldi	r18, 0x00	; 0
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	4a e7       	ldi	r20, 0x7A	; 122
     1f4:	53 e4       	ldi	r21, 0x43	; 67
     1f6:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     1fa:	dc 01       	movw	r26, r24
     1fc:	cb 01       	movw	r24, r22
     1fe:	88 8f       	std	Y+24, r24	; 0x18
     200:	99 8f       	std	Y+25, r25	; 0x19
     202:	aa 8f       	std	Y+26, r26	; 0x1a
     204:	bb 8f       	std	Y+27, r27	; 0x1b
	if (__tmp < 1.0)
     206:	11 e0       	ldi	r17, 0x01	; 1
     208:	68 8d       	ldd	r22, Y+24	; 0x18
     20a:	79 8d       	ldd	r23, Y+25	; 0x19
     20c:	8a 8d       	ldd	r24, Y+26	; 0x1a
     20e:	9b 8d       	ldd	r25, Y+27	; 0x1b
     210:	20 e0       	ldi	r18, 0x00	; 0
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e8       	ldi	r20, 0x80	; 128
     216:	5f e3       	ldi	r21, 0x3F	; 63
     218:	0e 94 65 0b 	call	0x16ca	; 0x16ca <__ltsf2>
     21c:	88 23       	and	r24, r24
     21e:	0c f0       	brlt	.+2      	; 0x222 <main+0x1a0>
     220:	10 e0       	ldi	r17, 0x00	; 0
     222:	11 23       	and	r17, r17
     224:	29 f0       	breq	.+10     	; 0x230 <main+0x1ae>
		__ticks = 1;
     226:	81 e0       	ldi	r24, 0x01	; 1
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	9d 8f       	std	Y+29, r25	; 0x1d
     22c:	8c 8f       	std	Y+28, r24	; 0x1c
     22e:	46 c0       	rjmp	.+140    	; 0x2bc <main+0x23a>
	else if (__tmp > 65535)
     230:	11 e0       	ldi	r17, 0x01	; 1
     232:	68 8d       	ldd	r22, Y+24	; 0x18
     234:	79 8d       	ldd	r23, Y+25	; 0x19
     236:	8a 8d       	ldd	r24, Y+26	; 0x1a
     238:	9b 8d       	ldd	r25, Y+27	; 0x1b
     23a:	20 e0       	ldi	r18, 0x00	; 0
     23c:	3f ef       	ldi	r19, 0xFF	; 255
     23e:	4f e7       	ldi	r20, 0x7F	; 127
     240:	57 e4       	ldi	r21, 0x47	; 71
     242:	0e 94 05 0b 	call	0x160a	; 0x160a <__gtsf2>
     246:	18 16       	cp	r1, r24
     248:	0c f0       	brlt	.+2      	; 0x24c <main+0x1ca>
     24a:	10 e0       	ldi	r17, 0x00	; 0
     24c:	11 23       	and	r17, r17
     24e:	61 f1       	breq	.+88     	; 0x2a8 <main+0x226>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     250:	6c 89       	ldd	r22, Y+20	; 0x14
     252:	7d 89       	ldd	r23, Y+21	; 0x15
     254:	8e 89       	ldd	r24, Y+22	; 0x16
     256:	9f 89       	ldd	r25, Y+23	; 0x17
     258:	20 e0       	ldi	r18, 0x00	; 0
     25a:	30 e0       	ldi	r19, 0x00	; 0
     25c:	40 e2       	ldi	r20, 0x20	; 32
     25e:	51 e4       	ldi	r21, 0x41	; 65
     260:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     264:	dc 01       	movw	r26, r24
     266:	cb 01       	movw	r24, r22
     268:	bc 01       	movw	r22, r24
     26a:	cd 01       	movw	r24, r26
     26c:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     270:	dc 01       	movw	r26, r24
     272:	cb 01       	movw	r24, r22
     274:	9d 8f       	std	Y+29, r25	; 0x1d
     276:	8c 8f       	std	Y+28, r24	; 0x1c
     278:	12 c0       	rjmp	.+36     	; 0x29e <main+0x21c>
     27a:	89 e1       	ldi	r24, 0x19	; 25
     27c:	90 e0       	ldi	r25, 0x00	; 0
     27e:	9f 8f       	std	Y+31, r25	; 0x1f
     280:	8e 8f       	std	Y+30, r24	; 0x1e
     282:	8e 8d       	ldd	r24, Y+30	; 0x1e
     284:	9f 8d       	ldd	r25, Y+31	; 0x1f
     286:	8c 01       	movw	r16, r24
     288:	c8 01       	movw	r24, r16
     28a:	01 97       	sbiw	r24, 0x01	; 1
     28c:	f1 f7       	brne	.-4      	; 0x28a <main+0x208>
     28e:	8c 01       	movw	r16, r24
     290:	1f 8f       	std	Y+31, r17	; 0x1f
     292:	0e 8f       	std	Y+30, r16	; 0x1e
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     294:	8c 8d       	ldd	r24, Y+28	; 0x1c
     296:	9d 8d       	ldd	r25, Y+29	; 0x1d
     298:	01 97       	sbiw	r24, 0x01	; 1
     29a:	9d 8f       	std	Y+29, r25	; 0x1d
     29c:	8c 8f       	std	Y+28, r24	; 0x1c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     29e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     2a0:	9d 8d       	ldd	r25, Y+29	; 0x1d
     2a2:	00 97       	sbiw	r24, 0x00	; 0
     2a4:	51 f7       	brne	.-44     	; 0x27a <main+0x1f8>
     2a6:	17 c0       	rjmp	.+46     	; 0x2d6 <main+0x254>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2a8:	68 8d       	ldd	r22, Y+24	; 0x18
     2aa:	79 8d       	ldd	r23, Y+25	; 0x19
     2ac:	8a 8d       	ldd	r24, Y+26	; 0x1a
     2ae:	9b 8d       	ldd	r25, Y+27	; 0x1b
     2b0:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     2b4:	dc 01       	movw	r26, r24
     2b6:	cb 01       	movw	r24, r22
     2b8:	9d 8f       	std	Y+29, r25	; 0x1d
     2ba:	8c 8f       	std	Y+28, r24	; 0x1c
     2bc:	8c 8d       	ldd	r24, Y+28	; 0x1c
     2be:	9d 8d       	ldd	r25, Y+29	; 0x1d
     2c0:	99 a3       	std	Y+33, r25	; 0x21
     2c2:	88 a3       	std	Y+32, r24	; 0x20
     2c4:	88 a1       	ldd	r24, Y+32	; 0x20
     2c6:	99 a1       	ldd	r25, Y+33	; 0x21
     2c8:	8c 01       	movw	r16, r24
     2ca:	f8 01       	movw	r30, r16
     2cc:	31 97       	sbiw	r30, 0x01	; 1
     2ce:	f1 f7       	brne	.-4      	; 0x2cc <main+0x24a>
     2d0:	8f 01       	movw	r16, r30
     2d2:	19 a3       	std	Y+33, r17	; 0x21
     2d4:	08 a3       	std	Y+32, r16	; 0x20
    _delay_ms(300);
    PORTA = 0b00000000;
     2d6:	8b e3       	ldi	r24, 0x3B	; 59
     2d8:	90 e0       	ldi	r25, 0x00	; 0
     2da:	fc 01       	movw	r30, r24
     2dc:	10 82       	st	Z, r1

    int i = 0;
     2de:	1a 82       	std	Y+2, r1	; 0x02
     2e0:	19 82       	std	Y+1, r1	; 0x01
     2e2:	01 c0       	rjmp	.+2      	; 0x2e6 <main+0x264>
        {
            i =0;
            break;
        }

    };
     2e4:	00 00       	nop
    //for ( int i = 0 ; i < 10 ; i++)
    {



        value = (255 - PIND) &0b01111111;
     2e6:	80 e3       	ldi	r24, 0x30	; 48
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	fc 01       	movw	r30, r24
     2ec:	80 81       	ld	r24, Z
     2ee:	80 95       	com	r24
     2f0:	8f 77       	andi	r24, 0x7F	; 127
     2f2:	8d 83       	std	Y+5, r24	; 0x05
        if (value == 0)
     2f4:	8d 81       	ldd	r24, Y+5	; 0x05
     2f6:	88 23       	and	r24, r24
     2f8:	71 f4       	brne	.+28     	; 0x316 <main+0x294>
        {
            PORTA = value;
     2fa:	8b e3       	ldi	r24, 0x3B	; 59
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	2d 81       	ldd	r18, Y+5	; 0x05
     300:	fc 01       	movw	r30, r24
     302:	20 83       	st	Z, r18
            PORTB = cyfra(value);
     304:	08 e3       	ldi	r16, 0x38	; 56
     306:	10 e0       	ldi	r17, 0x00	; 0
     308:	8d 81       	ldd	r24, Y+5	; 0x05
     30a:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <cyfra>
     30e:	f8 01       	movw	r30, r16
     310:	80 83       	st	Z, r24
            continue;
     312:	00 00       	nop
        {
            i =0;
            break;
        }

    };
     314:	e8 cf       	rjmp	.-48     	; 0x2e6 <main+0x264>
            continue;

        }


        PORTA = value;
     316:	8b e3       	ldi	r24, 0x3B	; 59
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	2d 81       	ldd	r18, Y+5	; 0x05
     31c:	fc 01       	movw	r30, r24
     31e:	20 83       	st	Z, r18
        PORTB = cyfra(value);
     320:	08 e3       	ldi	r16, 0x38	; 56
     322:	10 e0       	ldi	r17, 0x00	; 0
     324:	8d 81       	ldd	r24, Y+5	; 0x05
     326:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <cyfra>
     32a:	f8 01       	movw	r30, r16
     32c:	80 83       	st	Z, r24


        eeprom_write_byte((uint8_t*) i , value);
     32e:	89 81       	ldd	r24, Y+1	; 0x01
     330:	9a 81       	ldd	r25, Y+2	; 0x02
     332:	6d 81       	ldd	r22, Y+5	; 0x05
     334:	0e 94 b6 0d 	call	0x1b6c	; 0x1b6c <__eewr_byte_m32>
     338:	80 e0       	ldi	r24, 0x00	; 0
     33a:	90 e0       	ldi	r25, 0x00	; 0
     33c:	a8 ec       	ldi	r26, 0xC8	; 200
     33e:	b3 e4       	ldi	r27, 0x43	; 67
     340:	8a a3       	std	Y+34, r24	; 0x22
     342:	9b a3       	std	Y+35, r25	; 0x23
     344:	ac a3       	std	Y+36, r26	; 0x24
     346:	bd a3       	std	Y+37, r27	; 0x25
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     348:	6a a1       	ldd	r22, Y+34	; 0x22
     34a:	7b a1       	ldd	r23, Y+35	; 0x23
     34c:	8c a1       	ldd	r24, Y+36	; 0x24
     34e:	9d a1       	ldd	r25, Y+37	; 0x25
     350:	20 e0       	ldi	r18, 0x00	; 0
     352:	30 e0       	ldi	r19, 0x00	; 0
     354:	4a e7       	ldi	r20, 0x7A	; 122
     356:	53 e4       	ldi	r21, 0x43	; 67
     358:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     35c:	dc 01       	movw	r26, r24
     35e:	cb 01       	movw	r24, r22
     360:	8e a3       	std	Y+38, r24	; 0x26
     362:	9f a3       	std	Y+39, r25	; 0x27
     364:	a8 a7       	std	Y+40, r26	; 0x28
     366:	b9 a7       	std	Y+41, r27	; 0x29
	if (__tmp < 1.0)
     368:	11 e0       	ldi	r17, 0x01	; 1
     36a:	6e a1       	ldd	r22, Y+38	; 0x26
     36c:	7f a1       	ldd	r23, Y+39	; 0x27
     36e:	88 a5       	ldd	r24, Y+40	; 0x28
     370:	99 a5       	ldd	r25, Y+41	; 0x29
     372:	20 e0       	ldi	r18, 0x00	; 0
     374:	30 e0       	ldi	r19, 0x00	; 0
     376:	40 e8       	ldi	r20, 0x80	; 128
     378:	5f e3       	ldi	r21, 0x3F	; 63
     37a:	0e 94 65 0b 	call	0x16ca	; 0x16ca <__ltsf2>
     37e:	88 23       	and	r24, r24
     380:	0c f0       	brlt	.+2      	; 0x384 <main+0x302>
     382:	10 e0       	ldi	r17, 0x00	; 0
     384:	11 23       	and	r17, r17
     386:	29 f0       	breq	.+10     	; 0x392 <main+0x310>
		__ticks = 1;
     388:	81 e0       	ldi	r24, 0x01	; 1
     38a:	90 e0       	ldi	r25, 0x00	; 0
     38c:	9b a7       	std	Y+43, r25	; 0x2b
     38e:	8a a7       	std	Y+42, r24	; 0x2a
     390:	46 c0       	rjmp	.+140    	; 0x41e <main+0x39c>
	else if (__tmp > 65535)
     392:	11 e0       	ldi	r17, 0x01	; 1
     394:	6e a1       	ldd	r22, Y+38	; 0x26
     396:	7f a1       	ldd	r23, Y+39	; 0x27
     398:	88 a5       	ldd	r24, Y+40	; 0x28
     39a:	99 a5       	ldd	r25, Y+41	; 0x29
     39c:	20 e0       	ldi	r18, 0x00	; 0
     39e:	3f ef       	ldi	r19, 0xFF	; 255
     3a0:	4f e7       	ldi	r20, 0x7F	; 127
     3a2:	57 e4       	ldi	r21, 0x47	; 71
     3a4:	0e 94 05 0b 	call	0x160a	; 0x160a <__gtsf2>
     3a8:	18 16       	cp	r1, r24
     3aa:	0c f0       	brlt	.+2      	; 0x3ae <main+0x32c>
     3ac:	10 e0       	ldi	r17, 0x00	; 0
     3ae:	11 23       	and	r17, r17
     3b0:	61 f1       	breq	.+88     	; 0x40a <main+0x388>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3b2:	6a a1       	ldd	r22, Y+34	; 0x22
     3b4:	7b a1       	ldd	r23, Y+35	; 0x23
     3b6:	8c a1       	ldd	r24, Y+36	; 0x24
     3b8:	9d a1       	ldd	r25, Y+37	; 0x25
     3ba:	20 e0       	ldi	r18, 0x00	; 0
     3bc:	30 e0       	ldi	r19, 0x00	; 0
     3be:	40 e2       	ldi	r20, 0x20	; 32
     3c0:	51 e4       	ldi	r21, 0x41	; 65
     3c2:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     3c6:	dc 01       	movw	r26, r24
     3c8:	cb 01       	movw	r24, r22
     3ca:	bc 01       	movw	r22, r24
     3cc:	cd 01       	movw	r24, r26
     3ce:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     3d2:	dc 01       	movw	r26, r24
     3d4:	cb 01       	movw	r24, r22
     3d6:	9b a7       	std	Y+43, r25	; 0x2b
     3d8:	8a a7       	std	Y+42, r24	; 0x2a
     3da:	12 c0       	rjmp	.+36     	; 0x400 <main+0x37e>
     3dc:	89 e1       	ldi	r24, 0x19	; 25
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	9d a7       	std	Y+45, r25	; 0x2d
     3e2:	8c a7       	std	Y+44, r24	; 0x2c
     3e4:	8c a5       	ldd	r24, Y+44	; 0x2c
     3e6:	9d a5       	ldd	r25, Y+45	; 0x2d
     3e8:	8c 01       	movw	r16, r24
     3ea:	c8 01       	movw	r24, r16
     3ec:	01 97       	sbiw	r24, 0x01	; 1
     3ee:	f1 f7       	brne	.-4      	; 0x3ec <main+0x36a>
     3f0:	8c 01       	movw	r16, r24
     3f2:	1d a7       	std	Y+45, r17	; 0x2d
     3f4:	0c a7       	std	Y+44, r16	; 0x2c
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3f6:	8a a5       	ldd	r24, Y+42	; 0x2a
     3f8:	9b a5       	ldd	r25, Y+43	; 0x2b
     3fa:	01 97       	sbiw	r24, 0x01	; 1
     3fc:	9b a7       	std	Y+43, r25	; 0x2b
     3fe:	8a a7       	std	Y+42, r24	; 0x2a
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     400:	8a a5       	ldd	r24, Y+42	; 0x2a
     402:	9b a5       	ldd	r25, Y+43	; 0x2b
     404:	00 97       	sbiw	r24, 0x00	; 0
     406:	51 f7       	brne	.-44     	; 0x3dc <main+0x35a>
     408:	17 c0       	rjmp	.+46     	; 0x438 <main+0x3b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     40a:	6e a1       	ldd	r22, Y+38	; 0x26
     40c:	7f a1       	ldd	r23, Y+39	; 0x27
     40e:	88 a5       	ldd	r24, Y+40	; 0x28
     410:	99 a5       	ldd	r25, Y+41	; 0x29
     412:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     416:	dc 01       	movw	r26, r24
     418:	cb 01       	movw	r24, r22
     41a:	9b a7       	std	Y+43, r25	; 0x2b
     41c:	8a a7       	std	Y+42, r24	; 0x2a
     41e:	8a a5       	ldd	r24, Y+42	; 0x2a
     420:	9b a5       	ldd	r25, Y+43	; 0x2b
     422:	9f a7       	std	Y+47, r25	; 0x2f
     424:	8e a7       	std	Y+46, r24	; 0x2e
     426:	8e a5       	ldd	r24, Y+46	; 0x2e
     428:	9f a5       	ldd	r25, Y+47	; 0x2f
     42a:	8c 01       	movw	r16, r24
     42c:	f8 01       	movw	r30, r16
     42e:	31 97       	sbiw	r30, 0x01	; 1
     430:	f1 f7       	brne	.-4      	; 0x42e <main+0x3ac>
     432:	8f 01       	movw	r16, r30
     434:	1f a7       	std	Y+47, r17	; 0x2f
     436:	0e a7       	std	Y+46, r16	; 0x2e

        _delay_ms(400);
        i++;
     438:	89 81       	ldd	r24, Y+1	; 0x01
     43a:	9a 81       	ldd	r25, Y+2	; 0x02
     43c:	01 96       	adiw	r24, 0x01	; 1
     43e:	9a 83       	std	Y+2, r25	; 0x02
     440:	89 83       	std	Y+1, r24	; 0x01
        if ( i == 10)
     442:	89 81       	ldd	r24, Y+1	; 0x01
     444:	9a 81       	ldd	r25, Y+2	; 0x02
     446:	8a 30       	cpi	r24, 0x0A	; 10
     448:	91 05       	cpc	r25, r1
     44a:	09 f0       	breq	.+2      	; 0x44e <main+0x3cc>
     44c:	4b cf       	rjmp	.-362    	; 0x2e4 <main+0x262>
        {
            i =0;
     44e:	1a 82       	std	Y+2, r1	; 0x02
     450:	19 82       	std	Y+1, r1	; 0x01
            break;
        }

    };

    PORTB = 0b11111111;
     452:	88 e3       	ldi	r24, 0x38	; 56
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	2f ef       	ldi	r18, 0xFF	; 255
     458:	fc 01       	movw	r30, r24
     45a:	20 83       	st	Z, r18
    PORTA = 0b01010101;
     45c:	8b e3       	ldi	r24, 0x3B	; 59
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	25 e5       	ldi	r18, 0x55	; 85
     462:	fc 01       	movw	r30, r24
     464:	20 83       	st	Z, r18
     466:	80 e0       	ldi	r24, 0x00	; 0
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	a6 e9       	ldi	r26, 0x96	; 150
     46c:	b3 e4       	ldi	r27, 0x43	; 67
     46e:	88 ab       	std	Y+48, r24	; 0x30
     470:	99 ab       	std	Y+49, r25	; 0x31
     472:	aa ab       	std	Y+50, r26	; 0x32
     474:	bb ab       	std	Y+51, r27	; 0x33
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     476:	68 a9       	ldd	r22, Y+48	; 0x30
     478:	79 a9       	ldd	r23, Y+49	; 0x31
     47a:	8a a9       	ldd	r24, Y+50	; 0x32
     47c:	9b a9       	ldd	r25, Y+51	; 0x33
     47e:	20 e0       	ldi	r18, 0x00	; 0
     480:	30 e0       	ldi	r19, 0x00	; 0
     482:	4a e7       	ldi	r20, 0x7A	; 122
     484:	53 e4       	ldi	r21, 0x43	; 67
     486:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     48a:	dc 01       	movw	r26, r24
     48c:	cb 01       	movw	r24, r22
     48e:	8c ab       	std	Y+52, r24	; 0x34
     490:	9d ab       	std	Y+53, r25	; 0x35
     492:	ae ab       	std	Y+54, r26	; 0x36
     494:	bf ab       	std	Y+55, r27	; 0x37
	if (__tmp < 1.0)
     496:	11 e0       	ldi	r17, 0x01	; 1
     498:	6c a9       	ldd	r22, Y+52	; 0x34
     49a:	7d a9       	ldd	r23, Y+53	; 0x35
     49c:	8e a9       	ldd	r24, Y+54	; 0x36
     49e:	9f a9       	ldd	r25, Y+55	; 0x37
     4a0:	20 e0       	ldi	r18, 0x00	; 0
     4a2:	30 e0       	ldi	r19, 0x00	; 0
     4a4:	40 e8       	ldi	r20, 0x80	; 128
     4a6:	5f e3       	ldi	r21, 0x3F	; 63
     4a8:	0e 94 65 0b 	call	0x16ca	; 0x16ca <__ltsf2>
     4ac:	88 23       	and	r24, r24
     4ae:	0c f0       	brlt	.+2      	; 0x4b2 <main+0x430>
     4b0:	10 e0       	ldi	r17, 0x00	; 0
     4b2:	11 23       	and	r17, r17
     4b4:	29 f0       	breq	.+10     	; 0x4c0 <main+0x43e>
		__ticks = 1;
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	99 af       	std	Y+57, r25	; 0x39
     4bc:	88 af       	std	Y+56, r24	; 0x38
     4be:	46 c0       	rjmp	.+140    	; 0x54c <main+0x4ca>
	else if (__tmp > 65535)
     4c0:	11 e0       	ldi	r17, 0x01	; 1
     4c2:	6c a9       	ldd	r22, Y+52	; 0x34
     4c4:	7d a9       	ldd	r23, Y+53	; 0x35
     4c6:	8e a9       	ldd	r24, Y+54	; 0x36
     4c8:	9f a9       	ldd	r25, Y+55	; 0x37
     4ca:	20 e0       	ldi	r18, 0x00	; 0
     4cc:	3f ef       	ldi	r19, 0xFF	; 255
     4ce:	4f e7       	ldi	r20, 0x7F	; 127
     4d0:	57 e4       	ldi	r21, 0x47	; 71
     4d2:	0e 94 05 0b 	call	0x160a	; 0x160a <__gtsf2>
     4d6:	18 16       	cp	r1, r24
     4d8:	0c f0       	brlt	.+2      	; 0x4dc <main+0x45a>
     4da:	10 e0       	ldi	r17, 0x00	; 0
     4dc:	11 23       	and	r17, r17
     4de:	61 f1       	breq	.+88     	; 0x538 <main+0x4b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4e0:	68 a9       	ldd	r22, Y+48	; 0x30
     4e2:	79 a9       	ldd	r23, Y+49	; 0x31
     4e4:	8a a9       	ldd	r24, Y+50	; 0x32
     4e6:	9b a9       	ldd	r25, Y+51	; 0x33
     4e8:	20 e0       	ldi	r18, 0x00	; 0
     4ea:	30 e0       	ldi	r19, 0x00	; 0
     4ec:	40 e2       	ldi	r20, 0x20	; 32
     4ee:	51 e4       	ldi	r21, 0x41	; 65
     4f0:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     4f4:	dc 01       	movw	r26, r24
     4f6:	cb 01       	movw	r24, r22
     4f8:	bc 01       	movw	r22, r24
     4fa:	cd 01       	movw	r24, r26
     4fc:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     500:	dc 01       	movw	r26, r24
     502:	cb 01       	movw	r24, r22
     504:	99 af       	std	Y+57, r25	; 0x39
     506:	88 af       	std	Y+56, r24	; 0x38
     508:	12 c0       	rjmp	.+36     	; 0x52e <main+0x4ac>
     50a:	89 e1       	ldi	r24, 0x19	; 25
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	9b af       	std	Y+59, r25	; 0x3b
     510:	8a af       	std	Y+58, r24	; 0x3a
     512:	8a ad       	ldd	r24, Y+58	; 0x3a
     514:	9b ad       	ldd	r25, Y+59	; 0x3b
     516:	8c 01       	movw	r16, r24
     518:	c8 01       	movw	r24, r16
     51a:	01 97       	sbiw	r24, 0x01	; 1
     51c:	f1 f7       	brne	.-4      	; 0x51a <main+0x498>
     51e:	8c 01       	movw	r16, r24
     520:	1b af       	std	Y+59, r17	; 0x3b
     522:	0a af       	std	Y+58, r16	; 0x3a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     524:	88 ad       	ldd	r24, Y+56	; 0x38
     526:	99 ad       	ldd	r25, Y+57	; 0x39
     528:	01 97       	sbiw	r24, 0x01	; 1
     52a:	99 af       	std	Y+57, r25	; 0x39
     52c:	88 af       	std	Y+56, r24	; 0x38
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     52e:	88 ad       	ldd	r24, Y+56	; 0x38
     530:	99 ad       	ldd	r25, Y+57	; 0x39
     532:	00 97       	sbiw	r24, 0x00	; 0
     534:	51 f7       	brne	.-44     	; 0x50a <main+0x488>
     536:	17 c0       	rjmp	.+46     	; 0x566 <main+0x4e4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     538:	6c a9       	ldd	r22, Y+52	; 0x34
     53a:	7d a9       	ldd	r23, Y+53	; 0x35
     53c:	8e a9       	ldd	r24, Y+54	; 0x36
     53e:	9f a9       	ldd	r25, Y+55	; 0x37
     540:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     544:	dc 01       	movw	r26, r24
     546:	cb 01       	movw	r24, r22
     548:	99 af       	std	Y+57, r25	; 0x39
     54a:	88 af       	std	Y+56, r24	; 0x38
     54c:	88 ad       	ldd	r24, Y+56	; 0x38
     54e:	99 ad       	ldd	r25, Y+57	; 0x39
     550:	9d af       	std	Y+61, r25	; 0x3d
     552:	8c af       	std	Y+60, r24	; 0x3c
     554:	8c ad       	ldd	r24, Y+60	; 0x3c
     556:	9d ad       	ldd	r25, Y+61	; 0x3d
     558:	8c 01       	movw	r16, r24
     55a:	f8 01       	movw	r30, r16
     55c:	31 97       	sbiw	r30, 0x01	; 1
     55e:	f1 f7       	brne	.-4      	; 0x55c <main+0x4da>
     560:	8f 01       	movw	r16, r30
     562:	1d af       	std	Y+61, r17	; 0x3d
     564:	0c af       	std	Y+60, r16	; 0x3c
    _delay_ms(300);
    PORTA = 0b10101010;
     566:	8b e3       	ldi	r24, 0x3B	; 59
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	2a ea       	ldi	r18, 0xAA	; 170
     56c:	fc 01       	movw	r30, r24
     56e:	20 83       	st	Z, r18
     570:	9e 01       	movw	r18, r28
     572:	22 5c       	subi	r18, 0xC2	; 194
     574:	3f 4f       	sbci	r19, 0xFF	; 255
     576:	80 e0       	ldi	r24, 0x00	; 0
     578:	90 e0       	ldi	r25, 0x00	; 0
     57a:	a6 e9       	ldi	r26, 0x96	; 150
     57c:	b3 e4       	ldi	r27, 0x43	; 67
     57e:	f9 01       	movw	r30, r18
     580:	80 83       	st	Z, r24
     582:	91 83       	std	Z+1, r25	; 0x01
     584:	a2 83       	std	Z+2, r26	; 0x02
     586:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     588:	8e 01       	movw	r16, r28
     58a:	0e 5b       	subi	r16, 0xBE	; 190
     58c:	1f 4f       	sbci	r17, 0xFF	; 255
     58e:	ce 01       	movw	r24, r28
     590:	ce 96       	adiw	r24, 0x3e	; 62
     592:	fc 01       	movw	r30, r24
     594:	60 81       	ld	r22, Z
     596:	71 81       	ldd	r23, Z+1	; 0x01
     598:	82 81       	ldd	r24, Z+2	; 0x02
     59a:	93 81       	ldd	r25, Z+3	; 0x03
     59c:	20 e0       	ldi	r18, 0x00	; 0
     59e:	30 e0       	ldi	r19, 0x00	; 0
     5a0:	4a e7       	ldi	r20, 0x7A	; 122
     5a2:	53 e4       	ldi	r21, 0x43	; 67
     5a4:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     5a8:	dc 01       	movw	r26, r24
     5aa:	cb 01       	movw	r24, r22
     5ac:	f8 01       	movw	r30, r16
     5ae:	80 83       	st	Z, r24
     5b0:	91 83       	std	Z+1, r25	; 0x01
     5b2:	a2 83       	std	Z+2, r26	; 0x02
     5b4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     5b6:	ce 01       	movw	r24, r28
     5b8:	8e 5b       	subi	r24, 0xBE	; 190
     5ba:	9f 4f       	sbci	r25, 0xFF	; 255
     5bc:	11 e0       	ldi	r17, 0x01	; 1
     5be:	fc 01       	movw	r30, r24
     5c0:	60 81       	ld	r22, Z
     5c2:	71 81       	ldd	r23, Z+1	; 0x01
     5c4:	82 81       	ldd	r24, Z+2	; 0x02
     5c6:	93 81       	ldd	r25, Z+3	; 0x03
     5c8:	20 e0       	ldi	r18, 0x00	; 0
     5ca:	30 e0       	ldi	r19, 0x00	; 0
     5cc:	40 e8       	ldi	r20, 0x80	; 128
     5ce:	5f e3       	ldi	r21, 0x3F	; 63
     5d0:	0e 94 65 0b 	call	0x16ca	; 0x16ca <__ltsf2>
     5d4:	88 23       	and	r24, r24
     5d6:	0c f0       	brlt	.+2      	; 0x5da <main+0x558>
     5d8:	10 e0       	ldi	r17, 0x00	; 0
     5da:	11 23       	and	r17, r17
     5dc:	49 f0       	breq	.+18     	; 0x5f0 <main+0x56e>
		__ticks = 1;
     5de:	ce 01       	movw	r24, r28
     5e0:	8a 5b       	subi	r24, 0xBA	; 186
     5e2:	9f 4f       	sbci	r25, 0xFF	; 255
     5e4:	21 e0       	ldi	r18, 0x01	; 1
     5e6:	30 e0       	ldi	r19, 0x00	; 0
     5e8:	fc 01       	movw	r30, r24
     5ea:	31 83       	std	Z+1, r19	; 0x01
     5ec:	20 83       	st	Z, r18
     5ee:	73 c0       	rjmp	.+230    	; 0x6d6 <main+0x654>
	else if (__tmp > 65535)
     5f0:	ce 01       	movw	r24, r28
     5f2:	8e 5b       	subi	r24, 0xBE	; 190
     5f4:	9f 4f       	sbci	r25, 0xFF	; 255
     5f6:	11 e0       	ldi	r17, 0x01	; 1
     5f8:	fc 01       	movw	r30, r24
     5fa:	60 81       	ld	r22, Z
     5fc:	71 81       	ldd	r23, Z+1	; 0x01
     5fe:	82 81       	ldd	r24, Z+2	; 0x02
     600:	93 81       	ldd	r25, Z+3	; 0x03
     602:	20 e0       	ldi	r18, 0x00	; 0
     604:	3f ef       	ldi	r19, 0xFF	; 255
     606:	4f e7       	ldi	r20, 0x7F	; 127
     608:	57 e4       	ldi	r21, 0x47	; 71
     60a:	0e 94 05 0b 	call	0x160a	; 0x160a <__gtsf2>
     60e:	18 16       	cp	r1, r24
     610:	0c f0       	brlt	.+2      	; 0x614 <main+0x592>
     612:	10 e0       	ldi	r17, 0x00	; 0
     614:	11 23       	and	r17, r17
     616:	09 f4       	brne	.+2      	; 0x61a <main+0x598>
     618:	4c c0       	rjmp	.+152    	; 0x6b2 <main+0x630>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     61a:	ce 01       	movw	r24, r28
     61c:	ce 96       	adiw	r24, 0x3e	; 62
     61e:	fc 01       	movw	r30, r24
     620:	60 81       	ld	r22, Z
     622:	71 81       	ldd	r23, Z+1	; 0x01
     624:	82 81       	ldd	r24, Z+2	; 0x02
     626:	93 81       	ldd	r25, Z+3	; 0x03
     628:	20 e0       	ldi	r18, 0x00	; 0
     62a:	30 e0       	ldi	r19, 0x00	; 0
     62c:	40 e2       	ldi	r20, 0x20	; 32
     62e:	51 e4       	ldi	r21, 0x41	; 65
     630:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     634:	dc 01       	movw	r26, r24
     636:	cb 01       	movw	r24, r22
     638:	8e 01       	movw	r16, r28
     63a:	0a 5b       	subi	r16, 0xBA	; 186
     63c:	1f 4f       	sbci	r17, 0xFF	; 255
     63e:	bc 01       	movw	r22, r24
     640:	cd 01       	movw	r24, r26
     642:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     646:	dc 01       	movw	r26, r24
     648:	cb 01       	movw	r24, r22
     64a:	f8 01       	movw	r30, r16
     64c:	91 83       	std	Z+1, r25	; 0x01
     64e:	80 83       	st	Z, r24
     650:	27 c0       	rjmp	.+78     	; 0x6a0 <main+0x61e>
     652:	ce 01       	movw	r24, r28
     654:	88 5b       	subi	r24, 0xB8	; 184
     656:	9f 4f       	sbci	r25, 0xFF	; 255
     658:	29 e1       	ldi	r18, 0x19	; 25
     65a:	30 e0       	ldi	r19, 0x00	; 0
     65c:	fc 01       	movw	r30, r24
     65e:	31 83       	std	Z+1, r19	; 0x01
     660:	20 83       	st	Z, r18
     662:	ce 01       	movw	r24, r28
     664:	88 5b       	subi	r24, 0xB8	; 184
     666:	9f 4f       	sbci	r25, 0xFF	; 255
     668:	fc 01       	movw	r30, r24
     66a:	80 81       	ld	r24, Z
     66c:	91 81       	ldd	r25, Z+1	; 0x01
     66e:	8c 01       	movw	r16, r24
     670:	c8 01       	movw	r24, r16
     672:	01 97       	sbiw	r24, 0x01	; 1
     674:	f1 f7       	brne	.-4      	; 0x672 <main+0x5f0>
     676:	8c 01       	movw	r16, r24
     678:	ce 01       	movw	r24, r28
     67a:	88 5b       	subi	r24, 0xB8	; 184
     67c:	9f 4f       	sbci	r25, 0xFF	; 255
     67e:	fc 01       	movw	r30, r24
     680:	11 83       	std	Z+1, r17	; 0x01
     682:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     684:	ce 01       	movw	r24, r28
     686:	8a 5b       	subi	r24, 0xBA	; 186
     688:	9f 4f       	sbci	r25, 0xFF	; 255
     68a:	9e 01       	movw	r18, r28
     68c:	2a 5b       	subi	r18, 0xBA	; 186
     68e:	3f 4f       	sbci	r19, 0xFF	; 255
     690:	f9 01       	movw	r30, r18
     692:	20 81       	ld	r18, Z
     694:	31 81       	ldd	r19, Z+1	; 0x01
     696:	21 50       	subi	r18, 0x01	; 1
     698:	30 40       	sbci	r19, 0x00	; 0
     69a:	fc 01       	movw	r30, r24
     69c:	31 83       	std	Z+1, r19	; 0x01
     69e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     6a0:	ce 01       	movw	r24, r28
     6a2:	8a 5b       	subi	r24, 0xBA	; 186
     6a4:	9f 4f       	sbci	r25, 0xFF	; 255
     6a6:	fc 01       	movw	r30, r24
     6a8:	80 81       	ld	r24, Z
     6aa:	91 81       	ldd	r25, Z+1	; 0x01
     6ac:	00 97       	sbiw	r24, 0x00	; 0
     6ae:	89 f6       	brne	.-94     	; 0x652 <main+0x5d0>
     6b0:	2f c0       	rjmp	.+94     	; 0x710 <main+0x68e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     6b2:	8e 01       	movw	r16, r28
     6b4:	0a 5b       	subi	r16, 0xBA	; 186
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	8e 5b       	subi	r24, 0xBE	; 190
     6bc:	9f 4f       	sbci	r25, 0xFF	; 255
     6be:	fc 01       	movw	r30, r24
     6c0:	60 81       	ld	r22, Z
     6c2:	71 81       	ldd	r23, Z+1	; 0x01
     6c4:	82 81       	ldd	r24, Z+2	; 0x02
     6c6:	93 81       	ldd	r25, Z+3	; 0x03
     6c8:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     6cc:	dc 01       	movw	r26, r24
     6ce:	cb 01       	movw	r24, r22
     6d0:	f8 01       	movw	r30, r16
     6d2:	91 83       	std	Z+1, r25	; 0x01
     6d4:	80 83       	st	Z, r24
     6d6:	ce 01       	movw	r24, r28
     6d8:	86 5b       	subi	r24, 0xB6	; 182
     6da:	9f 4f       	sbci	r25, 0xFF	; 255
     6dc:	9e 01       	movw	r18, r28
     6de:	2a 5b       	subi	r18, 0xBA	; 186
     6e0:	3f 4f       	sbci	r19, 0xFF	; 255
     6e2:	f9 01       	movw	r30, r18
     6e4:	20 81       	ld	r18, Z
     6e6:	31 81       	ldd	r19, Z+1	; 0x01
     6e8:	fc 01       	movw	r30, r24
     6ea:	31 83       	std	Z+1, r19	; 0x01
     6ec:	20 83       	st	Z, r18
     6ee:	ce 01       	movw	r24, r28
     6f0:	86 5b       	subi	r24, 0xB6	; 182
     6f2:	9f 4f       	sbci	r25, 0xFF	; 255
     6f4:	fc 01       	movw	r30, r24
     6f6:	80 81       	ld	r24, Z
     6f8:	91 81       	ldd	r25, Z+1	; 0x01
     6fa:	8c 01       	movw	r16, r24
     6fc:	c8 01       	movw	r24, r16
     6fe:	01 97       	sbiw	r24, 0x01	; 1
     700:	f1 f7       	brne	.-4      	; 0x6fe <main+0x67c>
     702:	8c 01       	movw	r16, r24
     704:	ce 01       	movw	r24, r28
     706:	86 5b       	subi	r24, 0xB6	; 182
     708:	9f 4f       	sbci	r25, 0xFF	; 255
     70a:	fc 01       	movw	r30, r24
     70c:	11 83       	std	Z+1, r17	; 0x01
     70e:	00 83       	st	Z, r16
    _delay_ms(300);
    PORTA = 0b11111111;
     710:	8b e3       	ldi	r24, 0x3B	; 59
     712:	90 e0       	ldi	r25, 0x00	; 0
     714:	2f ef       	ldi	r18, 0xFF	; 255
     716:	fc 01       	movw	r30, r24
     718:	20 83       	st	Z, r18
     71a:	9e 01       	movw	r18, r28
     71c:	24 5b       	subi	r18, 0xB4	; 180
     71e:	3f 4f       	sbci	r19, 0xFF	; 255
     720:	80 e0       	ldi	r24, 0x00	; 0
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	a6 e9       	ldi	r26, 0x96	; 150
     726:	b3 e4       	ldi	r27, 0x43	; 67
     728:	f9 01       	movw	r30, r18
     72a:	80 83       	st	Z, r24
     72c:	91 83       	std	Z+1, r25	; 0x01
     72e:	a2 83       	std	Z+2, r26	; 0x02
     730:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     732:	8e 01       	movw	r16, r28
     734:	00 5b       	subi	r16, 0xB0	; 176
     736:	1f 4f       	sbci	r17, 0xFF	; 255
     738:	ce 01       	movw	r24, r28
     73a:	84 5b       	subi	r24, 0xB4	; 180
     73c:	9f 4f       	sbci	r25, 0xFF	; 255
     73e:	fc 01       	movw	r30, r24
     740:	60 81       	ld	r22, Z
     742:	71 81       	ldd	r23, Z+1	; 0x01
     744:	82 81       	ldd	r24, Z+2	; 0x02
     746:	93 81       	ldd	r25, Z+3	; 0x03
     748:	20 e0       	ldi	r18, 0x00	; 0
     74a:	30 e0       	ldi	r19, 0x00	; 0
     74c:	4a e7       	ldi	r20, 0x7A	; 122
     74e:	53 e4       	ldi	r21, 0x43	; 67
     750:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     754:	dc 01       	movw	r26, r24
     756:	cb 01       	movw	r24, r22
     758:	f8 01       	movw	r30, r16
     75a:	80 83       	st	Z, r24
     75c:	91 83       	std	Z+1, r25	; 0x01
     75e:	a2 83       	std	Z+2, r26	; 0x02
     760:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     762:	ce 01       	movw	r24, r28
     764:	80 5b       	subi	r24, 0xB0	; 176
     766:	9f 4f       	sbci	r25, 0xFF	; 255
     768:	11 e0       	ldi	r17, 0x01	; 1
     76a:	fc 01       	movw	r30, r24
     76c:	60 81       	ld	r22, Z
     76e:	71 81       	ldd	r23, Z+1	; 0x01
     770:	82 81       	ldd	r24, Z+2	; 0x02
     772:	93 81       	ldd	r25, Z+3	; 0x03
     774:	20 e0       	ldi	r18, 0x00	; 0
     776:	30 e0       	ldi	r19, 0x00	; 0
     778:	40 e8       	ldi	r20, 0x80	; 128
     77a:	5f e3       	ldi	r21, 0x3F	; 63
     77c:	0e 94 65 0b 	call	0x16ca	; 0x16ca <__ltsf2>
     780:	88 23       	and	r24, r24
     782:	0c f0       	brlt	.+2      	; 0x786 <main+0x704>
     784:	10 e0       	ldi	r17, 0x00	; 0
     786:	11 23       	and	r17, r17
     788:	49 f0       	breq	.+18     	; 0x79c <main+0x71a>
		__ticks = 1;
     78a:	ce 01       	movw	r24, r28
     78c:	8c 5a       	subi	r24, 0xAC	; 172
     78e:	9f 4f       	sbci	r25, 0xFF	; 255
     790:	21 e0       	ldi	r18, 0x01	; 1
     792:	30 e0       	ldi	r19, 0x00	; 0
     794:	fc 01       	movw	r30, r24
     796:	31 83       	std	Z+1, r19	; 0x01
     798:	20 83       	st	Z, r18
     79a:	74 c0       	rjmp	.+232    	; 0x884 <__stack+0x25>
	else if (__tmp > 65535)
     79c:	ce 01       	movw	r24, r28
     79e:	80 5b       	subi	r24, 0xB0	; 176
     7a0:	9f 4f       	sbci	r25, 0xFF	; 255
     7a2:	11 e0       	ldi	r17, 0x01	; 1
     7a4:	fc 01       	movw	r30, r24
     7a6:	60 81       	ld	r22, Z
     7a8:	71 81       	ldd	r23, Z+1	; 0x01
     7aa:	82 81       	ldd	r24, Z+2	; 0x02
     7ac:	93 81       	ldd	r25, Z+3	; 0x03
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	3f ef       	ldi	r19, 0xFF	; 255
     7b2:	4f e7       	ldi	r20, 0x7F	; 127
     7b4:	57 e4       	ldi	r21, 0x47	; 71
     7b6:	0e 94 05 0b 	call	0x160a	; 0x160a <__gtsf2>
     7ba:	18 16       	cp	r1, r24
     7bc:	0c f0       	brlt	.+2      	; 0x7c0 <main+0x73e>
     7be:	10 e0       	ldi	r17, 0x00	; 0
     7c0:	11 23       	and	r17, r17
     7c2:	09 f4       	brne	.+2      	; 0x7c6 <main+0x744>
     7c4:	4d c0       	rjmp	.+154    	; 0x860 <__stack+0x1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7c6:	ce 01       	movw	r24, r28
     7c8:	84 5b       	subi	r24, 0xB4	; 180
     7ca:	9f 4f       	sbci	r25, 0xFF	; 255
     7cc:	fc 01       	movw	r30, r24
     7ce:	60 81       	ld	r22, Z
     7d0:	71 81       	ldd	r23, Z+1	; 0x01
     7d2:	82 81       	ldd	r24, Z+2	; 0x02
     7d4:	93 81       	ldd	r25, Z+3	; 0x03
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e2       	ldi	r20, 0x20	; 32
     7dc:	51 e4       	ldi	r21, 0x41	; 65
     7de:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     7e2:	dc 01       	movw	r26, r24
     7e4:	cb 01       	movw	r24, r22
     7e6:	8e 01       	movw	r16, r28
     7e8:	0c 5a       	subi	r16, 0xAC	; 172
     7ea:	1f 4f       	sbci	r17, 0xFF	; 255
     7ec:	bc 01       	movw	r22, r24
     7ee:	cd 01       	movw	r24, r26
     7f0:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     7f4:	dc 01       	movw	r26, r24
     7f6:	cb 01       	movw	r24, r22
     7f8:	f8 01       	movw	r30, r16
     7fa:	91 83       	std	Z+1, r25	; 0x01
     7fc:	80 83       	st	Z, r24
     7fe:	27 c0       	rjmp	.+78     	; 0x84e <main+0x7cc>
     800:	ce 01       	movw	r24, r28
     802:	8a 5a       	subi	r24, 0xAA	; 170
     804:	9f 4f       	sbci	r25, 0xFF	; 255
     806:	29 e1       	ldi	r18, 0x19	; 25
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	fc 01       	movw	r30, r24
     80c:	31 83       	std	Z+1, r19	; 0x01
     80e:	20 83       	st	Z, r18
     810:	ce 01       	movw	r24, r28
     812:	8a 5a       	subi	r24, 0xAA	; 170
     814:	9f 4f       	sbci	r25, 0xFF	; 255
     816:	fc 01       	movw	r30, r24
     818:	80 81       	ld	r24, Z
     81a:	91 81       	ldd	r25, Z+1	; 0x01
     81c:	8c 01       	movw	r16, r24
     81e:	c8 01       	movw	r24, r16
     820:	01 97       	sbiw	r24, 0x01	; 1
     822:	f1 f7       	brne	.-4      	; 0x820 <main+0x79e>
     824:	8c 01       	movw	r16, r24
     826:	ce 01       	movw	r24, r28
     828:	8a 5a       	subi	r24, 0xAA	; 170
     82a:	9f 4f       	sbci	r25, 0xFF	; 255
     82c:	fc 01       	movw	r30, r24
     82e:	11 83       	std	Z+1, r17	; 0x01
     830:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     832:	ce 01       	movw	r24, r28
     834:	8c 5a       	subi	r24, 0xAC	; 172
     836:	9f 4f       	sbci	r25, 0xFF	; 255
     838:	9e 01       	movw	r18, r28
     83a:	2c 5a       	subi	r18, 0xAC	; 172
     83c:	3f 4f       	sbci	r19, 0xFF	; 255
     83e:	f9 01       	movw	r30, r18
     840:	20 81       	ld	r18, Z
     842:	31 81       	ldd	r19, Z+1	; 0x01
     844:	21 50       	subi	r18, 0x01	; 1
     846:	30 40       	sbci	r19, 0x00	; 0
     848:	fc 01       	movw	r30, r24
     84a:	31 83       	std	Z+1, r19	; 0x01
     84c:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     84e:	ce 01       	movw	r24, r28
     850:	8c 5a       	subi	r24, 0xAC	; 172
     852:	9f 4f       	sbci	r25, 0xFF	; 255
     854:	fc 01       	movw	r30, r24
     856:	80 81       	ld	r24, Z
     858:	91 81       	ldd	r25, Z+1	; 0x01
     85a:	00 97       	sbiw	r24, 0x00	; 0
     85c:	89 f6       	brne	.-94     	; 0x800 <main+0x77e>
     85e:	2f c0       	rjmp	.+94     	; 0x8be <__stack+0x5f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     860:	8e 01       	movw	r16, r28
     862:	0c 5a       	subi	r16, 0xAC	; 172
     864:	1f 4f       	sbci	r17, 0xFF	; 255
     866:	ce 01       	movw	r24, r28
     868:	80 5b       	subi	r24, 0xB0	; 176
     86a:	9f 4f       	sbci	r25, 0xFF	; 255
     86c:	fc 01       	movw	r30, r24
     86e:	60 81       	ld	r22, Z
     870:	71 81       	ldd	r23, Z+1	; 0x01
     872:	82 81       	ldd	r24, Z+2	; 0x02
     874:	93 81       	ldd	r25, Z+3	; 0x03
     876:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     87a:	dc 01       	movw	r26, r24
     87c:	cb 01       	movw	r24, r22
     87e:	f8 01       	movw	r30, r16
     880:	91 83       	std	Z+1, r25	; 0x01
     882:	80 83       	st	Z, r24
     884:	ce 01       	movw	r24, r28
     886:	88 5a       	subi	r24, 0xA8	; 168
     888:	9f 4f       	sbci	r25, 0xFF	; 255
     88a:	9e 01       	movw	r18, r28
     88c:	2c 5a       	subi	r18, 0xAC	; 172
     88e:	3f 4f       	sbci	r19, 0xFF	; 255
     890:	f9 01       	movw	r30, r18
     892:	20 81       	ld	r18, Z
     894:	31 81       	ldd	r19, Z+1	; 0x01
     896:	fc 01       	movw	r30, r24
     898:	31 83       	std	Z+1, r19	; 0x01
     89a:	20 83       	st	Z, r18
     89c:	ce 01       	movw	r24, r28
     89e:	88 5a       	subi	r24, 0xA8	; 168
     8a0:	9f 4f       	sbci	r25, 0xFF	; 255
     8a2:	fc 01       	movw	r30, r24
     8a4:	80 81       	ld	r24, Z
     8a6:	91 81       	ldd	r25, Z+1	; 0x01
     8a8:	8c 01       	movw	r16, r24
     8aa:	c8 01       	movw	r24, r16
     8ac:	01 97       	sbiw	r24, 0x01	; 1
     8ae:	f1 f7       	brne	.-4      	; 0x8ac <__stack+0x4d>
     8b0:	8c 01       	movw	r16, r24
     8b2:	ce 01       	movw	r24, r28
     8b4:	88 5a       	subi	r24, 0xA8	; 168
     8b6:	9f 4f       	sbci	r25, 0xFF	; 255
     8b8:	fc 01       	movw	r30, r24
     8ba:	11 83       	std	Z+1, r17	; 0x01
     8bc:	00 83       	st	Z, r16
    _delay_ms(300);
    PORTA = 0b00000000;
     8be:	8b e3       	ldi	r24, 0x3B	; 59
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	fc 01       	movw	r30, r24
     8c4:	10 82       	st	Z, r1
     8c6:	9e 01       	movw	r18, r28
     8c8:	26 5a       	subi	r18, 0xA6	; 166
     8ca:	3f 4f       	sbci	r19, 0xFF	; 255
     8cc:	80 e0       	ldi	r24, 0x00	; 0
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	a6 e9       	ldi	r26, 0x96	; 150
     8d2:	b3 e4       	ldi	r27, 0x43	; 67
     8d4:	f9 01       	movw	r30, r18
     8d6:	80 83       	st	Z, r24
     8d8:	91 83       	std	Z+1, r25	; 0x01
     8da:	a2 83       	std	Z+2, r26	; 0x02
     8dc:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     8de:	8e 01       	movw	r16, r28
     8e0:	02 5a       	subi	r16, 0xA2	; 162
     8e2:	1f 4f       	sbci	r17, 0xFF	; 255
     8e4:	ce 01       	movw	r24, r28
     8e6:	86 5a       	subi	r24, 0xA6	; 166
     8e8:	9f 4f       	sbci	r25, 0xFF	; 255
     8ea:	fc 01       	movw	r30, r24
     8ec:	60 81       	ld	r22, Z
     8ee:	71 81       	ldd	r23, Z+1	; 0x01
     8f0:	82 81       	ldd	r24, Z+2	; 0x02
     8f2:	93 81       	ldd	r25, Z+3	; 0x03
     8f4:	20 e0       	ldi	r18, 0x00	; 0
     8f6:	30 e0       	ldi	r19, 0x00	; 0
     8f8:	4a e7       	ldi	r20, 0x7A	; 122
     8fa:	53 e4       	ldi	r21, 0x43	; 67
     8fc:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     900:	dc 01       	movw	r26, r24
     902:	cb 01       	movw	r24, r22
     904:	f8 01       	movw	r30, r16
     906:	80 83       	st	Z, r24
     908:	91 83       	std	Z+1, r25	; 0x01
     90a:	a2 83       	std	Z+2, r26	; 0x02
     90c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     90e:	ce 01       	movw	r24, r28
     910:	82 5a       	subi	r24, 0xA2	; 162
     912:	9f 4f       	sbci	r25, 0xFF	; 255
     914:	11 e0       	ldi	r17, 0x01	; 1
     916:	fc 01       	movw	r30, r24
     918:	60 81       	ld	r22, Z
     91a:	71 81       	ldd	r23, Z+1	; 0x01
     91c:	82 81       	ldd	r24, Z+2	; 0x02
     91e:	93 81       	ldd	r25, Z+3	; 0x03
     920:	20 e0       	ldi	r18, 0x00	; 0
     922:	30 e0       	ldi	r19, 0x00	; 0
     924:	40 e8       	ldi	r20, 0x80	; 128
     926:	5f e3       	ldi	r21, 0x3F	; 63
     928:	0e 94 65 0b 	call	0x16ca	; 0x16ca <__ltsf2>
     92c:	88 23       	and	r24, r24
     92e:	0c f0       	brlt	.+2      	; 0x932 <__stack+0xd3>
     930:	10 e0       	ldi	r17, 0x00	; 0
     932:	11 23       	and	r17, r17
     934:	49 f0       	breq	.+18     	; 0x948 <__stack+0xe9>
		__ticks = 1;
     936:	ce 01       	movw	r24, r28
     938:	8e 59       	subi	r24, 0x9E	; 158
     93a:	9f 4f       	sbci	r25, 0xFF	; 255
     93c:	21 e0       	ldi	r18, 0x01	; 1
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	fc 01       	movw	r30, r24
     942:	31 83       	std	Z+1, r19	; 0x01
     944:	20 83       	st	Z, r18
     946:	74 c0       	rjmp	.+232    	; 0xa30 <__stack+0x1d1>
	else if (__tmp > 65535)
     948:	ce 01       	movw	r24, r28
     94a:	82 5a       	subi	r24, 0xA2	; 162
     94c:	9f 4f       	sbci	r25, 0xFF	; 255
     94e:	11 e0       	ldi	r17, 0x01	; 1
     950:	fc 01       	movw	r30, r24
     952:	60 81       	ld	r22, Z
     954:	71 81       	ldd	r23, Z+1	; 0x01
     956:	82 81       	ldd	r24, Z+2	; 0x02
     958:	93 81       	ldd	r25, Z+3	; 0x03
     95a:	20 e0       	ldi	r18, 0x00	; 0
     95c:	3f ef       	ldi	r19, 0xFF	; 255
     95e:	4f e7       	ldi	r20, 0x7F	; 127
     960:	57 e4       	ldi	r21, 0x47	; 71
     962:	0e 94 05 0b 	call	0x160a	; 0x160a <__gtsf2>
     966:	18 16       	cp	r1, r24
     968:	0c f0       	brlt	.+2      	; 0x96c <__stack+0x10d>
     96a:	10 e0       	ldi	r17, 0x00	; 0
     96c:	11 23       	and	r17, r17
     96e:	09 f4       	brne	.+2      	; 0x972 <__stack+0x113>
     970:	4d c0       	rjmp	.+154    	; 0xa0c <__stack+0x1ad>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     972:	ce 01       	movw	r24, r28
     974:	86 5a       	subi	r24, 0xA6	; 166
     976:	9f 4f       	sbci	r25, 0xFF	; 255
     978:	fc 01       	movw	r30, r24
     97a:	60 81       	ld	r22, Z
     97c:	71 81       	ldd	r23, Z+1	; 0x01
     97e:	82 81       	ldd	r24, Z+2	; 0x02
     980:	93 81       	ldd	r25, Z+3	; 0x03
     982:	20 e0       	ldi	r18, 0x00	; 0
     984:	30 e0       	ldi	r19, 0x00	; 0
     986:	40 e2       	ldi	r20, 0x20	; 32
     988:	51 e4       	ldi	r21, 0x41	; 65
     98a:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     98e:	dc 01       	movw	r26, r24
     990:	cb 01       	movw	r24, r22
     992:	8e 01       	movw	r16, r28
     994:	0e 59       	subi	r16, 0x9E	; 158
     996:	1f 4f       	sbci	r17, 0xFF	; 255
     998:	bc 01       	movw	r22, r24
     99a:	cd 01       	movw	r24, r26
     99c:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     9a0:	dc 01       	movw	r26, r24
     9a2:	cb 01       	movw	r24, r22
     9a4:	f8 01       	movw	r30, r16
     9a6:	91 83       	std	Z+1, r25	; 0x01
     9a8:	80 83       	st	Z, r24
     9aa:	27 c0       	rjmp	.+78     	; 0x9fa <__stack+0x19b>
     9ac:	ce 01       	movw	r24, r28
     9ae:	8c 59       	subi	r24, 0x9C	; 156
     9b0:	9f 4f       	sbci	r25, 0xFF	; 255
     9b2:	29 e1       	ldi	r18, 0x19	; 25
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	fc 01       	movw	r30, r24
     9b8:	31 83       	std	Z+1, r19	; 0x01
     9ba:	20 83       	st	Z, r18
     9bc:	ce 01       	movw	r24, r28
     9be:	8c 59       	subi	r24, 0x9C	; 156
     9c0:	9f 4f       	sbci	r25, 0xFF	; 255
     9c2:	fc 01       	movw	r30, r24
     9c4:	80 81       	ld	r24, Z
     9c6:	91 81       	ldd	r25, Z+1	; 0x01
     9c8:	8c 01       	movw	r16, r24
     9ca:	c8 01       	movw	r24, r16
     9cc:	01 97       	sbiw	r24, 0x01	; 1
     9ce:	f1 f7       	brne	.-4      	; 0x9cc <__stack+0x16d>
     9d0:	8c 01       	movw	r16, r24
     9d2:	ce 01       	movw	r24, r28
     9d4:	8c 59       	subi	r24, 0x9C	; 156
     9d6:	9f 4f       	sbci	r25, 0xFF	; 255
     9d8:	fc 01       	movw	r30, r24
     9da:	11 83       	std	Z+1, r17	; 0x01
     9dc:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9de:	ce 01       	movw	r24, r28
     9e0:	8e 59       	subi	r24, 0x9E	; 158
     9e2:	9f 4f       	sbci	r25, 0xFF	; 255
     9e4:	9e 01       	movw	r18, r28
     9e6:	2e 59       	subi	r18, 0x9E	; 158
     9e8:	3f 4f       	sbci	r19, 0xFF	; 255
     9ea:	f9 01       	movw	r30, r18
     9ec:	20 81       	ld	r18, Z
     9ee:	31 81       	ldd	r19, Z+1	; 0x01
     9f0:	21 50       	subi	r18, 0x01	; 1
     9f2:	30 40       	sbci	r19, 0x00	; 0
     9f4:	fc 01       	movw	r30, r24
     9f6:	31 83       	std	Z+1, r19	; 0x01
     9f8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9fa:	ce 01       	movw	r24, r28
     9fc:	8e 59       	subi	r24, 0x9E	; 158
     9fe:	9f 4f       	sbci	r25, 0xFF	; 255
     a00:	fc 01       	movw	r30, r24
     a02:	80 81       	ld	r24, Z
     a04:	91 81       	ldd	r25, Z+1	; 0x01
     a06:	00 97       	sbiw	r24, 0x00	; 0
     a08:	89 f6       	brne	.-94     	; 0x9ac <__stack+0x14d>
     a0a:	2f c0       	rjmp	.+94     	; 0xa6a <__stack+0x20b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     a0c:	8e 01       	movw	r16, r28
     a0e:	0e 59       	subi	r16, 0x9E	; 158
     a10:	1f 4f       	sbci	r17, 0xFF	; 255
     a12:	ce 01       	movw	r24, r28
     a14:	82 5a       	subi	r24, 0xA2	; 162
     a16:	9f 4f       	sbci	r25, 0xFF	; 255
     a18:	fc 01       	movw	r30, r24
     a1a:	60 81       	ld	r22, Z
     a1c:	71 81       	ldd	r23, Z+1	; 0x01
     a1e:	82 81       	ldd	r24, Z+2	; 0x02
     a20:	93 81       	ldd	r25, Z+3	; 0x03
     a22:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     a26:	dc 01       	movw	r26, r24
     a28:	cb 01       	movw	r24, r22
     a2a:	f8 01       	movw	r30, r16
     a2c:	91 83       	std	Z+1, r25	; 0x01
     a2e:	80 83       	st	Z, r24
     a30:	ce 01       	movw	r24, r28
     a32:	8a 59       	subi	r24, 0x9A	; 154
     a34:	9f 4f       	sbci	r25, 0xFF	; 255
     a36:	9e 01       	movw	r18, r28
     a38:	2e 59       	subi	r18, 0x9E	; 158
     a3a:	3f 4f       	sbci	r19, 0xFF	; 255
     a3c:	f9 01       	movw	r30, r18
     a3e:	20 81       	ld	r18, Z
     a40:	31 81       	ldd	r19, Z+1	; 0x01
     a42:	fc 01       	movw	r30, r24
     a44:	31 83       	std	Z+1, r19	; 0x01
     a46:	20 83       	st	Z, r18
     a48:	ce 01       	movw	r24, r28
     a4a:	8a 59       	subi	r24, 0x9A	; 154
     a4c:	9f 4f       	sbci	r25, 0xFF	; 255
     a4e:	fc 01       	movw	r30, r24
     a50:	80 81       	ld	r24, Z
     a52:	91 81       	ldd	r25, Z+1	; 0x01
     a54:	8c 01       	movw	r16, r24
     a56:	c8 01       	movw	r24, r16
     a58:	01 97       	sbiw	r24, 0x01	; 1
     a5a:	f1 f7       	brne	.-4      	; 0xa58 <__stack+0x1f9>
     a5c:	8c 01       	movw	r16, r24
     a5e:	ce 01       	movw	r24, r28
     a60:	8a 59       	subi	r24, 0x9A	; 154
     a62:	9f 4f       	sbci	r25, 0xFF	; 255
     a64:	fc 01       	movw	r30, r24
     a66:	11 83       	std	Z+1, r17	; 0x01
     a68:	00 83       	st	Z, r16
    _delay_ms(300);


    for ( int i = 0 ; i < 10 ; i++)
     a6a:	1c 82       	std	Y+4, r1	; 0x04
     a6c:	1b 82       	std	Y+3, r1	; 0x03
     a6e:	e8 c0       	rjmp	.+464    	; 0xc40 <__stack+0x3e1>
    {


        value = eeprom_read_byte((uint8_t*) i);
     a70:	8b 81       	ldd	r24, Y+3	; 0x03
     a72:	9c 81       	ldd	r25, Y+4	; 0x04
     a74:	0e 94 ae 0d 	call	0x1b5c	; 0x1b5c <__eerd_byte_m32>
     a78:	8d 83       	std	Y+5, r24	; 0x05
        PORTA = value;
     a7a:	8b e3       	ldi	r24, 0x3B	; 59
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	2d 81       	ldd	r18, Y+5	; 0x05
     a80:	fc 01       	movw	r30, r24
     a82:	20 83       	st	Z, r18
        PORTB = cyfra(value);//cyfra(temp);
     a84:	08 e3       	ldi	r16, 0x38	; 56
     a86:	10 e0       	ldi	r17, 0x00	; 0
     a88:	8d 81       	ldd	r24, Y+5	; 0x05
     a8a:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <cyfra>
     a8e:	f8 01       	movw	r30, r16
     a90:	80 83       	st	Z, r24
     a92:	9e 01       	movw	r18, r28
     a94:	28 59       	subi	r18, 0x98	; 152
     a96:	3f 4f       	sbci	r19, 0xFF	; 255
     a98:	80 e0       	ldi	r24, 0x00	; 0
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	a6 e9       	ldi	r26, 0x96	; 150
     a9e:	b3 e4       	ldi	r27, 0x43	; 67
     aa0:	f9 01       	movw	r30, r18
     aa2:	80 83       	st	Z, r24
     aa4:	91 83       	std	Z+1, r25	; 0x01
     aa6:	a2 83       	std	Z+2, r26	; 0x02
     aa8:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     aaa:	8e 01       	movw	r16, r28
     aac:	04 59       	subi	r16, 0x94	; 148
     aae:	1f 4f       	sbci	r17, 0xFF	; 255
     ab0:	ce 01       	movw	r24, r28
     ab2:	88 59       	subi	r24, 0x98	; 152
     ab4:	9f 4f       	sbci	r25, 0xFF	; 255
     ab6:	fc 01       	movw	r30, r24
     ab8:	60 81       	ld	r22, Z
     aba:	71 81       	ldd	r23, Z+1	; 0x01
     abc:	82 81       	ldd	r24, Z+2	; 0x02
     abe:	93 81       	ldd	r25, Z+3	; 0x03
     ac0:	20 e0       	ldi	r18, 0x00	; 0
     ac2:	30 e0       	ldi	r19, 0x00	; 0
     ac4:	4a e7       	ldi	r20, 0x7A	; 122
     ac6:	53 e4       	ldi	r21, 0x43	; 67
     ac8:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     acc:	dc 01       	movw	r26, r24
     ace:	cb 01       	movw	r24, r22
     ad0:	f8 01       	movw	r30, r16
     ad2:	80 83       	st	Z, r24
     ad4:	91 83       	std	Z+1, r25	; 0x01
     ad6:	a2 83       	std	Z+2, r26	; 0x02
     ad8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ada:	ce 01       	movw	r24, r28
     adc:	84 59       	subi	r24, 0x94	; 148
     ade:	9f 4f       	sbci	r25, 0xFF	; 255
     ae0:	11 e0       	ldi	r17, 0x01	; 1
     ae2:	fc 01       	movw	r30, r24
     ae4:	60 81       	ld	r22, Z
     ae6:	71 81       	ldd	r23, Z+1	; 0x01
     ae8:	82 81       	ldd	r24, Z+2	; 0x02
     aea:	93 81       	ldd	r25, Z+3	; 0x03
     aec:	20 e0       	ldi	r18, 0x00	; 0
     aee:	30 e0       	ldi	r19, 0x00	; 0
     af0:	40 e8       	ldi	r20, 0x80	; 128
     af2:	5f e3       	ldi	r21, 0x3F	; 63
     af4:	0e 94 65 0b 	call	0x16ca	; 0x16ca <__ltsf2>
     af8:	88 23       	and	r24, r24
     afa:	0c f0       	brlt	.+2      	; 0xafe <__stack+0x29f>
     afc:	10 e0       	ldi	r17, 0x00	; 0
     afe:	11 23       	and	r17, r17
     b00:	49 f0       	breq	.+18     	; 0xb14 <__stack+0x2b5>
		__ticks = 1;
     b02:	ce 01       	movw	r24, r28
     b04:	80 59       	subi	r24, 0x90	; 144
     b06:	9f 4f       	sbci	r25, 0xFF	; 255
     b08:	21 e0       	ldi	r18, 0x01	; 1
     b0a:	30 e0       	ldi	r19, 0x00	; 0
     b0c:	fc 01       	movw	r30, r24
     b0e:	31 83       	std	Z+1, r19	; 0x01
     b10:	20 83       	st	Z, r18
     b12:	74 c0       	rjmp	.+232    	; 0xbfc <__stack+0x39d>
	else if (__tmp > 65535)
     b14:	ce 01       	movw	r24, r28
     b16:	84 59       	subi	r24, 0x94	; 148
     b18:	9f 4f       	sbci	r25, 0xFF	; 255
     b1a:	11 e0       	ldi	r17, 0x01	; 1
     b1c:	fc 01       	movw	r30, r24
     b1e:	60 81       	ld	r22, Z
     b20:	71 81       	ldd	r23, Z+1	; 0x01
     b22:	82 81       	ldd	r24, Z+2	; 0x02
     b24:	93 81       	ldd	r25, Z+3	; 0x03
     b26:	20 e0       	ldi	r18, 0x00	; 0
     b28:	3f ef       	ldi	r19, 0xFF	; 255
     b2a:	4f e7       	ldi	r20, 0x7F	; 127
     b2c:	57 e4       	ldi	r21, 0x47	; 71
     b2e:	0e 94 05 0b 	call	0x160a	; 0x160a <__gtsf2>
     b32:	18 16       	cp	r1, r24
     b34:	0c f0       	brlt	.+2      	; 0xb38 <__stack+0x2d9>
     b36:	10 e0       	ldi	r17, 0x00	; 0
     b38:	11 23       	and	r17, r17
     b3a:	09 f4       	brne	.+2      	; 0xb3e <__stack+0x2df>
     b3c:	4d c0       	rjmp	.+154    	; 0xbd8 <__stack+0x379>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b3e:	ce 01       	movw	r24, r28
     b40:	88 59       	subi	r24, 0x98	; 152
     b42:	9f 4f       	sbci	r25, 0xFF	; 255
     b44:	fc 01       	movw	r30, r24
     b46:	60 81       	ld	r22, Z
     b48:	71 81       	ldd	r23, Z+1	; 0x01
     b4a:	82 81       	ldd	r24, Z+2	; 0x02
     b4c:	93 81       	ldd	r25, Z+3	; 0x03
     b4e:	20 e0       	ldi	r18, 0x00	; 0
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	40 e2       	ldi	r20, 0x20	; 32
     b54:	51 e4       	ldi	r21, 0x41	; 65
     b56:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     b5a:	dc 01       	movw	r26, r24
     b5c:	cb 01       	movw	r24, r22
     b5e:	8e 01       	movw	r16, r28
     b60:	00 59       	subi	r16, 0x90	; 144
     b62:	1f 4f       	sbci	r17, 0xFF	; 255
     b64:	bc 01       	movw	r22, r24
     b66:	cd 01       	movw	r24, r26
     b68:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     b6c:	dc 01       	movw	r26, r24
     b6e:	cb 01       	movw	r24, r22
     b70:	f8 01       	movw	r30, r16
     b72:	91 83       	std	Z+1, r25	; 0x01
     b74:	80 83       	st	Z, r24
     b76:	27 c0       	rjmp	.+78     	; 0xbc6 <__stack+0x367>
     b78:	ce 01       	movw	r24, r28
     b7a:	8e 58       	subi	r24, 0x8E	; 142
     b7c:	9f 4f       	sbci	r25, 0xFF	; 255
     b7e:	29 e1       	ldi	r18, 0x19	; 25
     b80:	30 e0       	ldi	r19, 0x00	; 0
     b82:	fc 01       	movw	r30, r24
     b84:	31 83       	std	Z+1, r19	; 0x01
     b86:	20 83       	st	Z, r18
     b88:	ce 01       	movw	r24, r28
     b8a:	8e 58       	subi	r24, 0x8E	; 142
     b8c:	9f 4f       	sbci	r25, 0xFF	; 255
     b8e:	fc 01       	movw	r30, r24
     b90:	80 81       	ld	r24, Z
     b92:	91 81       	ldd	r25, Z+1	; 0x01
     b94:	8c 01       	movw	r16, r24
     b96:	c8 01       	movw	r24, r16
     b98:	01 97       	sbiw	r24, 0x01	; 1
     b9a:	f1 f7       	brne	.-4      	; 0xb98 <__stack+0x339>
     b9c:	8c 01       	movw	r16, r24
     b9e:	ce 01       	movw	r24, r28
     ba0:	8e 58       	subi	r24, 0x8E	; 142
     ba2:	9f 4f       	sbci	r25, 0xFF	; 255
     ba4:	fc 01       	movw	r30, r24
     ba6:	11 83       	std	Z+1, r17	; 0x01
     ba8:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     baa:	ce 01       	movw	r24, r28
     bac:	80 59       	subi	r24, 0x90	; 144
     bae:	9f 4f       	sbci	r25, 0xFF	; 255
     bb0:	9e 01       	movw	r18, r28
     bb2:	20 59       	subi	r18, 0x90	; 144
     bb4:	3f 4f       	sbci	r19, 0xFF	; 255
     bb6:	f9 01       	movw	r30, r18
     bb8:	20 81       	ld	r18, Z
     bba:	31 81       	ldd	r19, Z+1	; 0x01
     bbc:	21 50       	subi	r18, 0x01	; 1
     bbe:	30 40       	sbci	r19, 0x00	; 0
     bc0:	fc 01       	movw	r30, r24
     bc2:	31 83       	std	Z+1, r19	; 0x01
     bc4:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     bc6:	ce 01       	movw	r24, r28
     bc8:	80 59       	subi	r24, 0x90	; 144
     bca:	9f 4f       	sbci	r25, 0xFF	; 255
     bcc:	fc 01       	movw	r30, r24
     bce:	80 81       	ld	r24, Z
     bd0:	91 81       	ldd	r25, Z+1	; 0x01
     bd2:	00 97       	sbiw	r24, 0x00	; 0
     bd4:	89 f6       	brne	.-94     	; 0xb78 <__stack+0x319>
     bd6:	2f c0       	rjmp	.+94     	; 0xc36 <__stack+0x3d7>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     bd8:	8e 01       	movw	r16, r28
     bda:	00 59       	subi	r16, 0x90	; 144
     bdc:	1f 4f       	sbci	r17, 0xFF	; 255
     bde:	ce 01       	movw	r24, r28
     be0:	84 59       	subi	r24, 0x94	; 148
     be2:	9f 4f       	sbci	r25, 0xFF	; 255
     be4:	fc 01       	movw	r30, r24
     be6:	60 81       	ld	r22, Z
     be8:	71 81       	ldd	r23, Z+1	; 0x01
     bea:	82 81       	ldd	r24, Z+2	; 0x02
     bec:	93 81       	ldd	r25, Z+3	; 0x03
     bee:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     bf2:	dc 01       	movw	r26, r24
     bf4:	cb 01       	movw	r24, r22
     bf6:	f8 01       	movw	r30, r16
     bf8:	91 83       	std	Z+1, r25	; 0x01
     bfa:	80 83       	st	Z, r24
     bfc:	ce 01       	movw	r24, r28
     bfe:	8c 58       	subi	r24, 0x8C	; 140
     c00:	9f 4f       	sbci	r25, 0xFF	; 255
     c02:	9e 01       	movw	r18, r28
     c04:	20 59       	subi	r18, 0x90	; 144
     c06:	3f 4f       	sbci	r19, 0xFF	; 255
     c08:	f9 01       	movw	r30, r18
     c0a:	20 81       	ld	r18, Z
     c0c:	31 81       	ldd	r19, Z+1	; 0x01
     c0e:	fc 01       	movw	r30, r24
     c10:	31 83       	std	Z+1, r19	; 0x01
     c12:	20 83       	st	Z, r18
     c14:	ce 01       	movw	r24, r28
     c16:	8c 58       	subi	r24, 0x8C	; 140
     c18:	9f 4f       	sbci	r25, 0xFF	; 255
     c1a:	fc 01       	movw	r30, r24
     c1c:	80 81       	ld	r24, Z
     c1e:	91 81       	ldd	r25, Z+1	; 0x01
     c20:	8c 01       	movw	r16, r24
     c22:	c8 01       	movw	r24, r16
     c24:	01 97       	sbiw	r24, 0x01	; 1
     c26:	f1 f7       	brne	.-4      	; 0xc24 <__stack+0x3c5>
     c28:	8c 01       	movw	r16, r24
     c2a:	ce 01       	movw	r24, r28
     c2c:	8c 58       	subi	r24, 0x8C	; 140
     c2e:	9f 4f       	sbci	r25, 0xFF	; 255
     c30:	fc 01       	movw	r30, r24
     c32:	11 83       	std	Z+1, r17	; 0x01
     c34:	00 83       	st	Z, r16
    _delay_ms(300);
    PORTA = 0b00000000;
    _delay_ms(300);


    for ( int i = 0 ; i < 10 ; i++)
     c36:	8b 81       	ldd	r24, Y+3	; 0x03
     c38:	9c 81       	ldd	r25, Y+4	; 0x04
     c3a:	01 96       	adiw	r24, 0x01	; 1
     c3c:	9c 83       	std	Y+4, r25	; 0x04
     c3e:	8b 83       	std	Y+3, r24	; 0x03
     c40:	8b 81       	ldd	r24, Y+3	; 0x03
     c42:	9c 81       	ldd	r25, Y+4	; 0x04
     c44:	8a 30       	cpi	r24, 0x0A	; 10
     c46:	91 05       	cpc	r25, r1
     c48:	0c f4       	brge	.+2      	; 0xc4c <__stack+0x3ed>
     c4a:	12 cf       	rjmp	.-476    	; 0xa70 <__stack+0x211>
        _delay_ms(300);

    }


    PORTA = 0b01010101;
     c4c:	8b e3       	ldi	r24, 0x3B	; 59
     c4e:	90 e0       	ldi	r25, 0x00	; 0
     c50:	25 e5       	ldi	r18, 0x55	; 85
     c52:	fc 01       	movw	r30, r24
     c54:	20 83       	st	Z, r18
     c56:	9e 01       	movw	r18, r28
     c58:	2a 58       	subi	r18, 0x8A	; 138
     c5a:	3f 4f       	sbci	r19, 0xFF	; 255
     c5c:	80 e0       	ldi	r24, 0x00	; 0
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	a6 e9       	ldi	r26, 0x96	; 150
     c62:	b3 e4       	ldi	r27, 0x43	; 67
     c64:	f9 01       	movw	r30, r18
     c66:	80 83       	st	Z, r24
     c68:	91 83       	std	Z+1, r25	; 0x01
     c6a:	a2 83       	std	Z+2, r26	; 0x02
     c6c:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     c6e:	8e 01       	movw	r16, r28
     c70:	06 58       	subi	r16, 0x86	; 134
     c72:	1f 4f       	sbci	r17, 0xFF	; 255
     c74:	ce 01       	movw	r24, r28
     c76:	8a 58       	subi	r24, 0x8A	; 138
     c78:	9f 4f       	sbci	r25, 0xFF	; 255
     c7a:	fc 01       	movw	r30, r24
     c7c:	60 81       	ld	r22, Z
     c7e:	71 81       	ldd	r23, Z+1	; 0x01
     c80:	82 81       	ldd	r24, Z+2	; 0x02
     c82:	93 81       	ldd	r25, Z+3	; 0x03
     c84:	20 e0       	ldi	r18, 0x00	; 0
     c86:	30 e0       	ldi	r19, 0x00	; 0
     c88:	4a e7       	ldi	r20, 0x7A	; 122
     c8a:	53 e4       	ldi	r21, 0x43	; 67
     c8c:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     c90:	dc 01       	movw	r26, r24
     c92:	cb 01       	movw	r24, r22
     c94:	f8 01       	movw	r30, r16
     c96:	80 83       	st	Z, r24
     c98:	91 83       	std	Z+1, r25	; 0x01
     c9a:	a2 83       	std	Z+2, r26	; 0x02
     c9c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     c9e:	ce 01       	movw	r24, r28
     ca0:	86 58       	subi	r24, 0x86	; 134
     ca2:	9f 4f       	sbci	r25, 0xFF	; 255
     ca4:	11 e0       	ldi	r17, 0x01	; 1
     ca6:	fc 01       	movw	r30, r24
     ca8:	60 81       	ld	r22, Z
     caa:	71 81       	ldd	r23, Z+1	; 0x01
     cac:	82 81       	ldd	r24, Z+2	; 0x02
     cae:	93 81       	ldd	r25, Z+3	; 0x03
     cb0:	20 e0       	ldi	r18, 0x00	; 0
     cb2:	30 e0       	ldi	r19, 0x00	; 0
     cb4:	40 e8       	ldi	r20, 0x80	; 128
     cb6:	5f e3       	ldi	r21, 0x3F	; 63
     cb8:	0e 94 65 0b 	call	0x16ca	; 0x16ca <__ltsf2>
     cbc:	88 23       	and	r24, r24
     cbe:	0c f0       	brlt	.+2      	; 0xcc2 <__stack+0x463>
     cc0:	10 e0       	ldi	r17, 0x00	; 0
     cc2:	11 23       	and	r17, r17
     cc4:	49 f0       	breq	.+18     	; 0xcd8 <__stack+0x479>
		__ticks = 1;
     cc6:	ce 01       	movw	r24, r28
     cc8:	82 58       	subi	r24, 0x82	; 130
     cca:	9f 4f       	sbci	r25, 0xFF	; 255
     ccc:	21 e0       	ldi	r18, 0x01	; 1
     cce:	30 e0       	ldi	r19, 0x00	; 0
     cd0:	fc 01       	movw	r30, r24
     cd2:	31 83       	std	Z+1, r19	; 0x01
     cd4:	20 83       	st	Z, r18
     cd6:	74 c0       	rjmp	.+232    	; 0xdc0 <__stack+0x561>
	else if (__tmp > 65535)
     cd8:	ce 01       	movw	r24, r28
     cda:	86 58       	subi	r24, 0x86	; 134
     cdc:	9f 4f       	sbci	r25, 0xFF	; 255
     cde:	11 e0       	ldi	r17, 0x01	; 1
     ce0:	fc 01       	movw	r30, r24
     ce2:	60 81       	ld	r22, Z
     ce4:	71 81       	ldd	r23, Z+1	; 0x01
     ce6:	82 81       	ldd	r24, Z+2	; 0x02
     ce8:	93 81       	ldd	r25, Z+3	; 0x03
     cea:	20 e0       	ldi	r18, 0x00	; 0
     cec:	3f ef       	ldi	r19, 0xFF	; 255
     cee:	4f e7       	ldi	r20, 0x7F	; 127
     cf0:	57 e4       	ldi	r21, 0x47	; 71
     cf2:	0e 94 05 0b 	call	0x160a	; 0x160a <__gtsf2>
     cf6:	18 16       	cp	r1, r24
     cf8:	0c f0       	brlt	.+2      	; 0xcfc <__stack+0x49d>
     cfa:	10 e0       	ldi	r17, 0x00	; 0
     cfc:	11 23       	and	r17, r17
     cfe:	09 f4       	brne	.+2      	; 0xd02 <__stack+0x4a3>
     d00:	4d c0       	rjmp	.+154    	; 0xd9c <__stack+0x53d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d02:	ce 01       	movw	r24, r28
     d04:	8a 58       	subi	r24, 0x8A	; 138
     d06:	9f 4f       	sbci	r25, 0xFF	; 255
     d08:	fc 01       	movw	r30, r24
     d0a:	60 81       	ld	r22, Z
     d0c:	71 81       	ldd	r23, Z+1	; 0x01
     d0e:	82 81       	ldd	r24, Z+2	; 0x02
     d10:	93 81       	ldd	r25, Z+3	; 0x03
     d12:	20 e0       	ldi	r18, 0x00	; 0
     d14:	30 e0       	ldi	r19, 0x00	; 0
     d16:	40 e2       	ldi	r20, 0x20	; 32
     d18:	51 e4       	ldi	r21, 0x41	; 65
     d1a:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     d1e:	dc 01       	movw	r26, r24
     d20:	cb 01       	movw	r24, r22
     d22:	8e 01       	movw	r16, r28
     d24:	02 58       	subi	r16, 0x82	; 130
     d26:	1f 4f       	sbci	r17, 0xFF	; 255
     d28:	bc 01       	movw	r22, r24
     d2a:	cd 01       	movw	r24, r26
     d2c:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     d30:	dc 01       	movw	r26, r24
     d32:	cb 01       	movw	r24, r22
     d34:	f8 01       	movw	r30, r16
     d36:	91 83       	std	Z+1, r25	; 0x01
     d38:	80 83       	st	Z, r24
     d3a:	27 c0       	rjmp	.+78     	; 0xd8a <__stack+0x52b>
     d3c:	ce 01       	movw	r24, r28
     d3e:	80 58       	subi	r24, 0x80	; 128
     d40:	9f 4f       	sbci	r25, 0xFF	; 255
     d42:	29 e1       	ldi	r18, 0x19	; 25
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	fc 01       	movw	r30, r24
     d48:	31 83       	std	Z+1, r19	; 0x01
     d4a:	20 83       	st	Z, r18
     d4c:	ce 01       	movw	r24, r28
     d4e:	80 58       	subi	r24, 0x80	; 128
     d50:	9f 4f       	sbci	r25, 0xFF	; 255
     d52:	fc 01       	movw	r30, r24
     d54:	80 81       	ld	r24, Z
     d56:	91 81       	ldd	r25, Z+1	; 0x01
     d58:	8c 01       	movw	r16, r24
     d5a:	c8 01       	movw	r24, r16
     d5c:	01 97       	sbiw	r24, 0x01	; 1
     d5e:	f1 f7       	brne	.-4      	; 0xd5c <__stack+0x4fd>
     d60:	8c 01       	movw	r16, r24
     d62:	ce 01       	movw	r24, r28
     d64:	80 58       	subi	r24, 0x80	; 128
     d66:	9f 4f       	sbci	r25, 0xFF	; 255
     d68:	fc 01       	movw	r30, r24
     d6a:	11 83       	std	Z+1, r17	; 0x01
     d6c:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d6e:	ce 01       	movw	r24, r28
     d70:	82 58       	subi	r24, 0x82	; 130
     d72:	9f 4f       	sbci	r25, 0xFF	; 255
     d74:	9e 01       	movw	r18, r28
     d76:	22 58       	subi	r18, 0x82	; 130
     d78:	3f 4f       	sbci	r19, 0xFF	; 255
     d7a:	f9 01       	movw	r30, r18
     d7c:	20 81       	ld	r18, Z
     d7e:	31 81       	ldd	r19, Z+1	; 0x01
     d80:	21 50       	subi	r18, 0x01	; 1
     d82:	30 40       	sbci	r19, 0x00	; 0
     d84:	fc 01       	movw	r30, r24
     d86:	31 83       	std	Z+1, r19	; 0x01
     d88:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d8a:	ce 01       	movw	r24, r28
     d8c:	82 58       	subi	r24, 0x82	; 130
     d8e:	9f 4f       	sbci	r25, 0xFF	; 255
     d90:	fc 01       	movw	r30, r24
     d92:	80 81       	ld	r24, Z
     d94:	91 81       	ldd	r25, Z+1	; 0x01
     d96:	00 97       	sbiw	r24, 0x00	; 0
     d98:	89 f6       	brne	.-94     	; 0xd3c <__stack+0x4dd>
     d9a:	2f c0       	rjmp	.+94     	; 0xdfa <__stack+0x59b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d9c:	8e 01       	movw	r16, r28
     d9e:	02 58       	subi	r16, 0x82	; 130
     da0:	1f 4f       	sbci	r17, 0xFF	; 255
     da2:	ce 01       	movw	r24, r28
     da4:	86 58       	subi	r24, 0x86	; 134
     da6:	9f 4f       	sbci	r25, 0xFF	; 255
     da8:	fc 01       	movw	r30, r24
     daa:	60 81       	ld	r22, Z
     dac:	71 81       	ldd	r23, Z+1	; 0x01
     dae:	82 81       	ldd	r24, Z+2	; 0x02
     db0:	93 81       	ldd	r25, Z+3	; 0x03
     db2:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     db6:	dc 01       	movw	r26, r24
     db8:	cb 01       	movw	r24, r22
     dba:	f8 01       	movw	r30, r16
     dbc:	91 83       	std	Z+1, r25	; 0x01
     dbe:	80 83       	st	Z, r24
     dc0:	ce 01       	movw	r24, r28
     dc2:	8e 57       	subi	r24, 0x7E	; 126
     dc4:	9f 4f       	sbci	r25, 0xFF	; 255
     dc6:	9e 01       	movw	r18, r28
     dc8:	22 58       	subi	r18, 0x82	; 130
     dca:	3f 4f       	sbci	r19, 0xFF	; 255
     dcc:	f9 01       	movw	r30, r18
     dce:	20 81       	ld	r18, Z
     dd0:	31 81       	ldd	r19, Z+1	; 0x01
     dd2:	fc 01       	movw	r30, r24
     dd4:	31 83       	std	Z+1, r19	; 0x01
     dd6:	20 83       	st	Z, r18
     dd8:	ce 01       	movw	r24, r28
     dda:	8e 57       	subi	r24, 0x7E	; 126
     ddc:	9f 4f       	sbci	r25, 0xFF	; 255
     dde:	fc 01       	movw	r30, r24
     de0:	80 81       	ld	r24, Z
     de2:	91 81       	ldd	r25, Z+1	; 0x01
     de4:	8c 01       	movw	r16, r24
     de6:	c8 01       	movw	r24, r16
     de8:	01 97       	sbiw	r24, 0x01	; 1
     dea:	f1 f7       	brne	.-4      	; 0xde8 <__stack+0x589>
     dec:	8c 01       	movw	r16, r24
     dee:	ce 01       	movw	r24, r28
     df0:	8e 57       	subi	r24, 0x7E	; 126
     df2:	9f 4f       	sbci	r25, 0xFF	; 255
     df4:	fc 01       	movw	r30, r24
     df6:	11 83       	std	Z+1, r17	; 0x01
     df8:	00 83       	st	Z, r16
    _delay_ms(300);
    PORTA = 0b10101010;
     dfa:	8b e3       	ldi	r24, 0x3B	; 59
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	2a ea       	ldi	r18, 0xAA	; 170
     e00:	fc 01       	movw	r30, r24
     e02:	20 83       	st	Z, r18
     e04:	9e 01       	movw	r18, r28
     e06:	2c 57       	subi	r18, 0x7C	; 124
     e08:	3f 4f       	sbci	r19, 0xFF	; 255
     e0a:	80 e0       	ldi	r24, 0x00	; 0
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	a6 e9       	ldi	r26, 0x96	; 150
     e10:	b3 e4       	ldi	r27, 0x43	; 67
     e12:	f9 01       	movw	r30, r18
     e14:	80 83       	st	Z, r24
     e16:	91 83       	std	Z+1, r25	; 0x01
     e18:	a2 83       	std	Z+2, r26	; 0x02
     e1a:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     e1c:	8e 01       	movw	r16, r28
     e1e:	08 57       	subi	r16, 0x78	; 120
     e20:	1f 4f       	sbci	r17, 0xFF	; 255
     e22:	ce 01       	movw	r24, r28
     e24:	8c 57       	subi	r24, 0x7C	; 124
     e26:	9f 4f       	sbci	r25, 0xFF	; 255
     e28:	fc 01       	movw	r30, r24
     e2a:	60 81       	ld	r22, Z
     e2c:	71 81       	ldd	r23, Z+1	; 0x01
     e2e:	82 81       	ldd	r24, Z+2	; 0x02
     e30:	93 81       	ldd	r25, Z+3	; 0x03
     e32:	20 e0       	ldi	r18, 0x00	; 0
     e34:	30 e0       	ldi	r19, 0x00	; 0
     e36:	4a e7       	ldi	r20, 0x7A	; 122
     e38:	53 e4       	ldi	r21, 0x43	; 67
     e3a:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     e3e:	dc 01       	movw	r26, r24
     e40:	cb 01       	movw	r24, r22
     e42:	f8 01       	movw	r30, r16
     e44:	80 83       	st	Z, r24
     e46:	91 83       	std	Z+1, r25	; 0x01
     e48:	a2 83       	std	Z+2, r26	; 0x02
     e4a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e4c:	ce 01       	movw	r24, r28
     e4e:	88 57       	subi	r24, 0x78	; 120
     e50:	9f 4f       	sbci	r25, 0xFF	; 255
     e52:	11 e0       	ldi	r17, 0x01	; 1
     e54:	fc 01       	movw	r30, r24
     e56:	60 81       	ld	r22, Z
     e58:	71 81       	ldd	r23, Z+1	; 0x01
     e5a:	82 81       	ldd	r24, Z+2	; 0x02
     e5c:	93 81       	ldd	r25, Z+3	; 0x03
     e5e:	20 e0       	ldi	r18, 0x00	; 0
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	40 e8       	ldi	r20, 0x80	; 128
     e64:	5f e3       	ldi	r21, 0x3F	; 63
     e66:	0e 94 65 0b 	call	0x16ca	; 0x16ca <__ltsf2>
     e6a:	88 23       	and	r24, r24
     e6c:	0c f0       	brlt	.+2      	; 0xe70 <__stack+0x611>
     e6e:	10 e0       	ldi	r17, 0x00	; 0
     e70:	11 23       	and	r17, r17
     e72:	49 f0       	breq	.+18     	; 0xe86 <__stack+0x627>
		__ticks = 1;
     e74:	ce 01       	movw	r24, r28
     e76:	84 57       	subi	r24, 0x74	; 116
     e78:	9f 4f       	sbci	r25, 0xFF	; 255
     e7a:	21 e0       	ldi	r18, 0x01	; 1
     e7c:	30 e0       	ldi	r19, 0x00	; 0
     e7e:	fc 01       	movw	r30, r24
     e80:	31 83       	std	Z+1, r19	; 0x01
     e82:	20 83       	st	Z, r18
     e84:	74 c0       	rjmp	.+232    	; 0xf6e <__stack+0x70f>
	else if (__tmp > 65535)
     e86:	ce 01       	movw	r24, r28
     e88:	88 57       	subi	r24, 0x78	; 120
     e8a:	9f 4f       	sbci	r25, 0xFF	; 255
     e8c:	11 e0       	ldi	r17, 0x01	; 1
     e8e:	fc 01       	movw	r30, r24
     e90:	60 81       	ld	r22, Z
     e92:	71 81       	ldd	r23, Z+1	; 0x01
     e94:	82 81       	ldd	r24, Z+2	; 0x02
     e96:	93 81       	ldd	r25, Z+3	; 0x03
     e98:	20 e0       	ldi	r18, 0x00	; 0
     e9a:	3f ef       	ldi	r19, 0xFF	; 255
     e9c:	4f e7       	ldi	r20, 0x7F	; 127
     e9e:	57 e4       	ldi	r21, 0x47	; 71
     ea0:	0e 94 05 0b 	call	0x160a	; 0x160a <__gtsf2>
     ea4:	18 16       	cp	r1, r24
     ea6:	0c f0       	brlt	.+2      	; 0xeaa <__stack+0x64b>
     ea8:	10 e0       	ldi	r17, 0x00	; 0
     eaa:	11 23       	and	r17, r17
     eac:	09 f4       	brne	.+2      	; 0xeb0 <__stack+0x651>
     eae:	4d c0       	rjmp	.+154    	; 0xf4a <__stack+0x6eb>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     eb0:	ce 01       	movw	r24, r28
     eb2:	8c 57       	subi	r24, 0x7C	; 124
     eb4:	9f 4f       	sbci	r25, 0xFF	; 255
     eb6:	fc 01       	movw	r30, r24
     eb8:	60 81       	ld	r22, Z
     eba:	71 81       	ldd	r23, Z+1	; 0x01
     ebc:	82 81       	ldd	r24, Z+2	; 0x02
     ebe:	93 81       	ldd	r25, Z+3	; 0x03
     ec0:	20 e0       	ldi	r18, 0x00	; 0
     ec2:	30 e0       	ldi	r19, 0x00	; 0
     ec4:	40 e2       	ldi	r20, 0x20	; 32
     ec6:	51 e4       	ldi	r21, 0x41	; 65
     ec8:	0e 94 0b 0a 	call	0x1416	; 0x1416 <__mulsf3>
     ecc:	dc 01       	movw	r26, r24
     ece:	cb 01       	movw	r24, r22
     ed0:	8e 01       	movw	r16, r28
     ed2:	04 57       	subi	r16, 0x74	; 116
     ed4:	1f 4f       	sbci	r17, 0xFF	; 255
     ed6:	bc 01       	movw	r22, r24
     ed8:	cd 01       	movw	r24, r26
     eda:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     ede:	dc 01       	movw	r26, r24
     ee0:	cb 01       	movw	r24, r22
     ee2:	f8 01       	movw	r30, r16
     ee4:	91 83       	std	Z+1, r25	; 0x01
     ee6:	80 83       	st	Z, r24
     ee8:	27 c0       	rjmp	.+78     	; 0xf38 <__stack+0x6d9>
     eea:	ce 01       	movw	r24, r28
     eec:	82 57       	subi	r24, 0x72	; 114
     eee:	9f 4f       	sbci	r25, 0xFF	; 255
     ef0:	29 e1       	ldi	r18, 0x19	; 25
     ef2:	30 e0       	ldi	r19, 0x00	; 0
     ef4:	fc 01       	movw	r30, r24
     ef6:	31 83       	std	Z+1, r19	; 0x01
     ef8:	20 83       	st	Z, r18
     efa:	ce 01       	movw	r24, r28
     efc:	82 57       	subi	r24, 0x72	; 114
     efe:	9f 4f       	sbci	r25, 0xFF	; 255
     f00:	fc 01       	movw	r30, r24
     f02:	80 81       	ld	r24, Z
     f04:	91 81       	ldd	r25, Z+1	; 0x01
     f06:	8c 01       	movw	r16, r24
     f08:	c8 01       	movw	r24, r16
     f0a:	01 97       	sbiw	r24, 0x01	; 1
     f0c:	f1 f7       	brne	.-4      	; 0xf0a <__stack+0x6ab>
     f0e:	8c 01       	movw	r16, r24
     f10:	ce 01       	movw	r24, r28
     f12:	82 57       	subi	r24, 0x72	; 114
     f14:	9f 4f       	sbci	r25, 0xFF	; 255
     f16:	fc 01       	movw	r30, r24
     f18:	11 83       	std	Z+1, r17	; 0x01
     f1a:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f1c:	ce 01       	movw	r24, r28
     f1e:	84 57       	subi	r24, 0x74	; 116
     f20:	9f 4f       	sbci	r25, 0xFF	; 255
     f22:	9e 01       	movw	r18, r28
     f24:	24 57       	subi	r18, 0x74	; 116
     f26:	3f 4f       	sbci	r19, 0xFF	; 255
     f28:	f9 01       	movw	r30, r18
     f2a:	20 81       	ld	r18, Z
     f2c:	31 81       	ldd	r19, Z+1	; 0x01
     f2e:	21 50       	subi	r18, 0x01	; 1
     f30:	30 40       	sbci	r19, 0x00	; 0
     f32:	fc 01       	movw	r30, r24
     f34:	31 83       	std	Z+1, r19	; 0x01
     f36:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f38:	ce 01       	movw	r24, r28
     f3a:	84 57       	subi	r24, 0x74	; 116
     f3c:	9f 4f       	sbci	r25, 0xFF	; 255
     f3e:	fc 01       	movw	r30, r24
     f40:	80 81       	ld	r24, Z
     f42:	91 81       	ldd	r25, Z+1	; 0x01
     f44:	00 97       	sbiw	r24, 0x00	; 0
     f46:	89 f6       	brne	.-94     	; 0xeea <__stack+0x68b>
     f48:	2f c0       	rjmp	.+94     	; 0xfa8 <__stack+0x749>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f4a:	8e 01       	movw	r16, r28
     f4c:	04 57       	subi	r16, 0x74	; 116
     f4e:	1f 4f       	sbci	r17, 0xFF	; 255
     f50:	ce 01       	movw	r24, r28
     f52:	88 57       	subi	r24, 0x78	; 120
     f54:	9f 4f       	sbci	r25, 0xFF	; 255
     f56:	fc 01       	movw	r30, r24
     f58:	60 81       	ld	r22, Z
     f5a:	71 81       	ldd	r23, Z+1	; 0x01
     f5c:	82 81       	ldd	r24, Z+2	; 0x02
     f5e:	93 81       	ldd	r25, Z+3	; 0x03
     f60:	0e 94 37 08 	call	0x106e	; 0x106e <__fixunssfsi>
     f64:	dc 01       	movw	r26, r24
     f66:	cb 01       	movw	r24, r22
     f68:	f8 01       	movw	r30, r16
     f6a:	91 83       	std	Z+1, r25	; 0x01
     f6c:	80 83       	st	Z, r24
     f6e:	ce 01       	movw	r24, r28
     f70:	80 57       	subi	r24, 0x70	; 112
     f72:	9f 4f       	sbci	r25, 0xFF	; 255
     f74:	9e 01       	movw	r18, r28
     f76:	24 57       	subi	r18, 0x74	; 116
     f78:	3f 4f       	sbci	r19, 0xFF	; 255
     f7a:	f9 01       	movw	r30, r18
     f7c:	20 81       	ld	r18, Z
     f7e:	31 81       	ldd	r19, Z+1	; 0x01
     f80:	fc 01       	movw	r30, r24
     f82:	31 83       	std	Z+1, r19	; 0x01
     f84:	20 83       	st	Z, r18
     f86:	ce 01       	movw	r24, r28
     f88:	80 57       	subi	r24, 0x70	; 112
     f8a:	9f 4f       	sbci	r25, 0xFF	; 255
     f8c:	fc 01       	movw	r30, r24
     f8e:	80 81       	ld	r24, Z
     f90:	91 81       	ldd	r25, Z+1	; 0x01
     f92:	8c 01       	movw	r16, r24
     f94:	c8 01       	movw	r24, r16
     f96:	01 97       	sbiw	r24, 0x01	; 1
     f98:	f1 f7       	brne	.-4      	; 0xf96 <__stack+0x737>
     f9a:	8c 01       	movw	r16, r24
     f9c:	ce 01       	movw	r24, r28
     f9e:	80 57       	subi	r24, 0x70	; 112
     fa0:	9f 4f       	sbci	r25, 0xFF	; 255
     fa2:	fc 01       	movw	r30, r24
     fa4:	11 83       	std	Z+1, r17	; 0x01
     fa6:	00 83       	st	Z, r16
    _delay_ms(300);
    PORTA = 0b00000000;
     fa8:	8b e3       	ldi	r24, 0x3B	; 59
     faa:	90 e0       	ldi	r25, 0x00	; 0
     fac:	fc 01       	movw	r30, r24
     fae:	10 82       	st	Z, r1
    PORTB = 0b11111111;
     fb0:	88 e3       	ldi	r24, 0x38	; 56
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	2f ef       	ldi	r18, 0xFF	; 255
     fb6:	fc 01       	movw	r30, r24
     fb8:	20 83       	st	Z, r18



    return 0;
     fba:	80 e0       	ldi	r24, 0x00	; 0
     fbc:	90 e0       	ldi	r25, 0x00	; 0
}
     fbe:	cf 56       	subi	r28, 0x6F	; 111
     fc0:	df 4f       	sbci	r29, 0xFF	; 255
     fc2:	0f b6       	in	r0, 0x3f	; 63
     fc4:	f8 94       	cli
     fc6:	de bf       	out	0x3e, r29	; 62
     fc8:	0f be       	out	0x3f, r0	; 63
     fca:	cd bf       	out	0x3d, r28	; 61
     fcc:	cf 91       	pop	r28
     fce:	df 91       	pop	r29
     fd0:	1f 91       	pop	r17
     fd2:	0f 91       	pop	r16
     fd4:	08 95       	ret

00000fd6 <cyfra>:

uint8_t cyfra(uint8_t _cyfra)
{
     fd6:	df 93       	push	r29
     fd8:	cf 93       	push	r28
     fda:	0f 92       	push	r0
     fdc:	cd b7       	in	r28, 0x3d	; 61
     fde:	de b7       	in	r29, 0x3e	; 62
     fe0:	89 83       	std	Y+1, r24	; 0x01

		switch(_cyfra)
     fe2:	89 81       	ldd	r24, Y+1	; 0x01
     fe4:	88 2f       	mov	r24, r24
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	84 30       	cpi	r24, 0x04	; 4
     fea:	91 05       	cpc	r25, r1
     fec:	79 f1       	breq	.+94     	; 0x104c <cyfra+0x76>
     fee:	85 30       	cpi	r24, 0x05	; 5
     ff0:	91 05       	cpc	r25, r1
     ff2:	84 f4       	brge	.+32     	; 0x1014 <cyfra+0x3e>
     ff4:	81 30       	cpi	r24, 0x01	; 1
     ff6:	91 05       	cpc	r25, r1
     ff8:	19 f1       	breq	.+70     	; 0x1040 <cyfra+0x6a>
     ffa:	82 30       	cpi	r24, 0x02	; 2
     ffc:	91 05       	cpc	r25, r1
     ffe:	1c f4       	brge	.+6      	; 0x1006 <cyfra+0x30>
    1000:	00 97       	sbiw	r24, 0x00	; 0
    1002:	e1 f0       	breq	.+56     	; 0x103c <cyfra+0x66>
    1004:	2f c0       	rjmp	.+94     	; 0x1064 <cyfra+0x8e>
    1006:	82 30       	cpi	r24, 0x02	; 2
    1008:	91 05       	cpc	r25, r1
    100a:	e1 f0       	breq	.+56     	; 0x1044 <cyfra+0x6e>
    100c:	83 30       	cpi	r24, 0x03	; 3
    100e:	91 05       	cpc	r25, r1
    1010:	d9 f0       	breq	.+54     	; 0x1048 <cyfra+0x72>
    1012:	28 c0       	rjmp	.+80     	; 0x1064 <cyfra+0x8e>
    1014:	87 30       	cpi	r24, 0x07	; 7
    1016:	91 05       	cpc	r25, r1
    1018:	f9 f0       	breq	.+62     	; 0x1058 <cyfra+0x82>
    101a:	88 30       	cpi	r24, 0x08	; 8
    101c:	91 05       	cpc	r25, r1
    101e:	3c f4       	brge	.+14     	; 0x102e <cyfra+0x58>
    1020:	85 30       	cpi	r24, 0x05	; 5
    1022:	91 05       	cpc	r25, r1
    1024:	a9 f0       	breq	.+42     	; 0x1050 <cyfra+0x7a>
    1026:	86 30       	cpi	r24, 0x06	; 6
    1028:	91 05       	cpc	r25, r1
    102a:	a1 f0       	breq	.+40     	; 0x1054 <cyfra+0x7e>
    102c:	1b c0       	rjmp	.+54     	; 0x1064 <cyfra+0x8e>
    102e:	88 30       	cpi	r24, 0x08	; 8
    1030:	91 05       	cpc	r25, r1
    1032:	a1 f0       	breq	.+40     	; 0x105c <cyfra+0x86>
    1034:	89 30       	cpi	r24, 0x09	; 9
    1036:	91 05       	cpc	r25, r1
    1038:	99 f0       	breq	.+38     	; 0x1060 <cyfra+0x8a>
    103a:	14 c0       	rjmp	.+40     	; 0x1064 <cyfra+0x8e>
		{
		case 0:
		return 0b11000000; //0
    103c:	80 ec       	ldi	r24, 0xC0	; 192
    103e:	13 c0       	rjmp	.+38     	; 0x1066 <cyfra+0x90>

		case 1:
		return 0b11111001; //1
    1040:	89 ef       	ldi	r24, 0xF9	; 249
    1042:	11 c0       	rjmp	.+34     	; 0x1066 <cyfra+0x90>

		case 2:
		return 0b10100100; //2
    1044:	84 ea       	ldi	r24, 0xA4	; 164
    1046:	0f c0       	rjmp	.+30     	; 0x1066 <cyfra+0x90>

		case 3:
		return 0b10110000; //3
    1048:	80 eb       	ldi	r24, 0xB0	; 176
    104a:	0d c0       	rjmp	.+26     	; 0x1066 <cyfra+0x90>

		case 4:
		return 0b10011001; //4
    104c:	89 e9       	ldi	r24, 0x99	; 153
    104e:	0b c0       	rjmp	.+22     	; 0x1066 <cyfra+0x90>

		case 5:
		return 0b10010010; //5
    1050:	82 e9       	ldi	r24, 0x92	; 146
    1052:	09 c0       	rjmp	.+18     	; 0x1066 <cyfra+0x90>

		case 6:
		return 0b10000010; //6
    1054:	82 e8       	ldi	r24, 0x82	; 130
    1056:	07 c0       	rjmp	.+14     	; 0x1066 <cyfra+0x90>

		case 7:
		return 0b11111000; //7
    1058:	88 ef       	ldi	r24, 0xF8	; 248
    105a:	05 c0       	rjmp	.+10     	; 0x1066 <cyfra+0x90>

		case 8:
		return 0b10000000; //8
    105c:	80 e8       	ldi	r24, 0x80	; 128
    105e:	03 c0       	rjmp	.+6      	; 0x1066 <cyfra+0x90>

		case 9:
		return 0b10010000; //9
    1060:	80 e9       	ldi	r24, 0x90	; 144
    1062:	01 c0       	rjmp	.+2      	; 0x1066 <cyfra+0x90>

        default:
        return 0b10101010; // wszystko
    1064:	8a ea       	ldi	r24, 0xAA	; 170

		}
}
    1066:	0f 90       	pop	r0
    1068:	cf 91       	pop	r28
    106a:	df 91       	pop	r29
    106c:	08 95       	ret

0000106e <__fixunssfsi>:
    106e:	ef 92       	push	r14
    1070:	ff 92       	push	r15
    1072:	0f 93       	push	r16
    1074:	1f 93       	push	r17
    1076:	7b 01       	movw	r14, r22
    1078:	8c 01       	movw	r16, r24
    107a:	20 e0       	ldi	r18, 0x00	; 0
    107c:	30 e0       	ldi	r19, 0x00	; 0
    107e:	40 e0       	ldi	r20, 0x00	; 0
    1080:	5f e4       	ldi	r21, 0x4F	; 79
    1082:	0e 94 35 0b 	call	0x166a	; 0x166a <__gesf2>
    1086:	87 fd       	sbrc	r24, 7
    1088:	11 c0       	rjmp	.+34     	; 0x10ac <__fixunssfsi+0x3e>
    108a:	c8 01       	movw	r24, r16
    108c:	b7 01       	movw	r22, r14
    108e:	20 e0       	ldi	r18, 0x00	; 0
    1090:	30 e0       	ldi	r19, 0x00	; 0
    1092:	40 e0       	ldi	r20, 0x00	; 0
    1094:	5f e4       	ldi	r21, 0x4F	; 79
    1096:	0e 94 da 09 	call	0x13b4	; 0x13b4 <__subsf3>
    109a:	0e 94 95 0b 	call	0x172a	; 0x172a <__fixsfsi>
    109e:	9b 01       	movw	r18, r22
    10a0:	ac 01       	movw	r20, r24
    10a2:	20 50       	subi	r18, 0x00	; 0
    10a4:	30 40       	sbci	r19, 0x00	; 0
    10a6:	40 40       	sbci	r20, 0x00	; 0
    10a8:	50 48       	sbci	r21, 0x80	; 128
    10aa:	06 c0       	rjmp	.+12     	; 0x10b8 <__fixunssfsi+0x4a>
    10ac:	c8 01       	movw	r24, r16
    10ae:	b7 01       	movw	r22, r14
    10b0:	0e 94 95 0b 	call	0x172a	; 0x172a <__fixsfsi>
    10b4:	9b 01       	movw	r18, r22
    10b6:	ac 01       	movw	r20, r24
    10b8:	b9 01       	movw	r22, r18
    10ba:	ca 01       	movw	r24, r20
    10bc:	1f 91       	pop	r17
    10be:	0f 91       	pop	r16
    10c0:	ff 90       	pop	r15
    10c2:	ef 90       	pop	r14
    10c4:	08 95       	ret

000010c6 <_fpadd_parts>:
    10c6:	a0 e0       	ldi	r26, 0x00	; 0
    10c8:	b0 e0       	ldi	r27, 0x00	; 0
    10ca:	e9 e6       	ldi	r30, 0x69	; 105
    10cc:	f8 e0       	ldi	r31, 0x08	; 8
    10ce:	0c 94 7b 0d 	jmp	0x1af6	; 0x1af6 <__prologue_saves__+0x8>
    10d2:	fc 01       	movw	r30, r24
    10d4:	ea 01       	movw	r28, r20
    10d6:	80 81       	ld	r24, Z
    10d8:	82 30       	cpi	r24, 0x02	; 2
    10da:	08 f4       	brcc	.+2      	; 0x10de <_fpadd_parts+0x18>
    10dc:	38 c1       	rjmp	.+624    	; 0x134e <_fpadd_parts+0x288>
    10de:	db 01       	movw	r26, r22
    10e0:	9c 91       	ld	r25, X
    10e2:	92 30       	cpi	r25, 0x02	; 2
    10e4:	08 f4       	brcc	.+2      	; 0x10e8 <_fpadd_parts+0x22>
    10e6:	30 c1       	rjmp	.+608    	; 0x1348 <_fpadd_parts+0x282>
    10e8:	84 30       	cpi	r24, 0x04	; 4
    10ea:	59 f4       	brne	.+22     	; 0x1102 <_fpadd_parts+0x3c>
    10ec:	94 30       	cpi	r25, 0x04	; 4
    10ee:	09 f0       	breq	.+2      	; 0x10f2 <_fpadd_parts+0x2c>
    10f0:	2e c1       	rjmp	.+604    	; 0x134e <_fpadd_parts+0x288>
    10f2:	91 81       	ldd	r25, Z+1	; 0x01
    10f4:	11 96       	adiw	r26, 0x01	; 1
    10f6:	8c 91       	ld	r24, X
    10f8:	11 97       	sbiw	r26, 0x01	; 1
    10fa:	98 17       	cp	r25, r24
    10fc:	09 f0       	breq	.+2      	; 0x1100 <_fpadd_parts+0x3a>
    10fe:	21 c1       	rjmp	.+578    	; 0x1342 <_fpadd_parts+0x27c>
    1100:	26 c1       	rjmp	.+588    	; 0x134e <_fpadd_parts+0x288>
    1102:	94 30       	cpi	r25, 0x04	; 4
    1104:	09 f4       	brne	.+2      	; 0x1108 <_fpadd_parts+0x42>
    1106:	20 c1       	rjmp	.+576    	; 0x1348 <_fpadd_parts+0x282>
    1108:	92 30       	cpi	r25, 0x02	; 2
    110a:	b1 f4       	brne	.+44     	; 0x1138 <_fpadd_parts+0x72>
    110c:	82 30       	cpi	r24, 0x02	; 2
    110e:	09 f0       	breq	.+2      	; 0x1112 <_fpadd_parts+0x4c>
    1110:	1e c1       	rjmp	.+572    	; 0x134e <_fpadd_parts+0x288>
    1112:	ca 01       	movw	r24, r20
    1114:	af 01       	movw	r20, r30
    1116:	28 e0       	ldi	r18, 0x08	; 8
    1118:	da 01       	movw	r26, r20
    111a:	0d 90       	ld	r0, X+
    111c:	ad 01       	movw	r20, r26
    111e:	dc 01       	movw	r26, r24
    1120:	0d 92       	st	X+, r0
    1122:	cd 01       	movw	r24, r26
    1124:	21 50       	subi	r18, 0x01	; 1
    1126:	c1 f7       	brne	.-16     	; 0x1118 <_fpadd_parts+0x52>
    1128:	db 01       	movw	r26, r22
    112a:	11 96       	adiw	r26, 0x01	; 1
    112c:	8c 91       	ld	r24, X
    112e:	11 97       	sbiw	r26, 0x01	; 1
    1130:	91 81       	ldd	r25, Z+1	; 0x01
    1132:	89 23       	and	r24, r25
    1134:	89 83       	std	Y+1, r24	; 0x01
    1136:	0a c1       	rjmp	.+532    	; 0x134c <_fpadd_parts+0x286>
    1138:	82 30       	cpi	r24, 0x02	; 2
    113a:	09 f4       	brne	.+2      	; 0x113e <_fpadd_parts+0x78>
    113c:	05 c1       	rjmp	.+522    	; 0x1348 <_fpadd_parts+0x282>
    113e:	c2 80       	ldd	r12, Z+2	; 0x02
    1140:	d3 80       	ldd	r13, Z+3	; 0x03
    1142:	db 01       	movw	r26, r22
    1144:	12 96       	adiw	r26, 0x02	; 2
    1146:	6d 90       	ld	r6, X+
    1148:	7c 90       	ld	r7, X
    114a:	13 97       	sbiw	r26, 0x03	; 3
    114c:	24 81       	ldd	r18, Z+4	; 0x04
    114e:	35 81       	ldd	r19, Z+5	; 0x05
    1150:	46 81       	ldd	r20, Z+6	; 0x06
    1152:	57 81       	ldd	r21, Z+7	; 0x07
    1154:	14 96       	adiw	r26, 0x04	; 4
    1156:	ed 90       	ld	r14, X+
    1158:	fd 90       	ld	r15, X+
    115a:	0d 91       	ld	r16, X+
    115c:	1c 91       	ld	r17, X
    115e:	17 97       	sbiw	r26, 0x07	; 7
    1160:	c6 01       	movw	r24, r12
    1162:	86 19       	sub	r24, r6
    1164:	97 09       	sbc	r25, r7
    1166:	5c 01       	movw	r10, r24
    1168:	97 ff       	sbrs	r25, 7
    116a:	04 c0       	rjmp	.+8      	; 0x1174 <_fpadd_parts+0xae>
    116c:	aa 24       	eor	r10, r10
    116e:	bb 24       	eor	r11, r11
    1170:	a8 1a       	sub	r10, r24
    1172:	b9 0a       	sbc	r11, r25
    1174:	b0 e2       	ldi	r27, 0x20	; 32
    1176:	ab 16       	cp	r10, r27
    1178:	b1 04       	cpc	r11, r1
    117a:	0c f0       	brlt	.+2      	; 0x117e <_fpadd_parts+0xb8>
    117c:	61 c0       	rjmp	.+194    	; 0x1240 <_fpadd_parts+0x17a>
    117e:	18 16       	cp	r1, r24
    1180:	19 06       	cpc	r1, r25
    1182:	6c f5       	brge	.+90     	; 0x11de <_fpadd_parts+0x118>
    1184:	37 01       	movw	r6, r14
    1186:	48 01       	movw	r8, r16
    1188:	0a 2c       	mov	r0, r10
    118a:	04 c0       	rjmp	.+8      	; 0x1194 <_fpadd_parts+0xce>
    118c:	96 94       	lsr	r9
    118e:	87 94       	ror	r8
    1190:	77 94       	ror	r7
    1192:	67 94       	ror	r6
    1194:	0a 94       	dec	r0
    1196:	d2 f7       	brpl	.-12     	; 0x118c <_fpadd_parts+0xc6>
    1198:	81 e0       	ldi	r24, 0x01	; 1
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	a0 e0       	ldi	r26, 0x00	; 0
    119e:	b0 e0       	ldi	r27, 0x00	; 0
    11a0:	0a 2c       	mov	r0, r10
    11a2:	04 c0       	rjmp	.+8      	; 0x11ac <_fpadd_parts+0xe6>
    11a4:	88 0f       	add	r24, r24
    11a6:	99 1f       	adc	r25, r25
    11a8:	aa 1f       	adc	r26, r26
    11aa:	bb 1f       	adc	r27, r27
    11ac:	0a 94       	dec	r0
    11ae:	d2 f7       	brpl	.-12     	; 0x11a4 <_fpadd_parts+0xde>
    11b0:	01 97       	sbiw	r24, 0x01	; 1
    11b2:	a1 09       	sbc	r26, r1
    11b4:	b1 09       	sbc	r27, r1
    11b6:	8e 21       	and	r24, r14
    11b8:	9f 21       	and	r25, r15
    11ba:	a0 23       	and	r26, r16
    11bc:	b1 23       	and	r27, r17
    11be:	ee 24       	eor	r14, r14
    11c0:	ff 24       	eor	r15, r15
    11c2:	87 01       	movw	r16, r14
    11c4:	e3 94       	inc	r14
    11c6:	00 97       	sbiw	r24, 0x00	; 0
    11c8:	a1 05       	cpc	r26, r1
    11ca:	b1 05       	cpc	r27, r1
    11cc:	19 f4       	brne	.+6      	; 0x11d4 <_fpadd_parts+0x10e>
    11ce:	ee 24       	eor	r14, r14
    11d0:	ff 24       	eor	r15, r15
    11d2:	87 01       	movw	r16, r14
    11d4:	e6 28       	or	r14, r6
    11d6:	f7 28       	or	r15, r7
    11d8:	08 29       	or	r16, r8
    11da:	19 29       	or	r17, r9
    11dc:	3c c0       	rjmp	.+120    	; 0x1256 <_fpadd_parts+0x190>
    11de:	00 97       	sbiw	r24, 0x00	; 0
    11e0:	d1 f1       	breq	.+116    	; 0x1256 <_fpadd_parts+0x190>
    11e2:	ca 0c       	add	r12, r10
    11e4:	db 1c       	adc	r13, r11
    11e6:	39 01       	movw	r6, r18
    11e8:	4a 01       	movw	r8, r20
    11ea:	0a 2c       	mov	r0, r10
    11ec:	04 c0       	rjmp	.+8      	; 0x11f6 <_fpadd_parts+0x130>
    11ee:	96 94       	lsr	r9
    11f0:	87 94       	ror	r8
    11f2:	77 94       	ror	r7
    11f4:	67 94       	ror	r6
    11f6:	0a 94       	dec	r0
    11f8:	d2 f7       	brpl	.-12     	; 0x11ee <_fpadd_parts+0x128>
    11fa:	81 e0       	ldi	r24, 0x01	; 1
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	a0 e0       	ldi	r26, 0x00	; 0
    1200:	b0 e0       	ldi	r27, 0x00	; 0
    1202:	0a 2c       	mov	r0, r10
    1204:	04 c0       	rjmp	.+8      	; 0x120e <_fpadd_parts+0x148>
    1206:	88 0f       	add	r24, r24
    1208:	99 1f       	adc	r25, r25
    120a:	aa 1f       	adc	r26, r26
    120c:	bb 1f       	adc	r27, r27
    120e:	0a 94       	dec	r0
    1210:	d2 f7       	brpl	.-12     	; 0x1206 <_fpadd_parts+0x140>
    1212:	01 97       	sbiw	r24, 0x01	; 1
    1214:	a1 09       	sbc	r26, r1
    1216:	b1 09       	sbc	r27, r1
    1218:	82 23       	and	r24, r18
    121a:	93 23       	and	r25, r19
    121c:	a4 23       	and	r26, r20
    121e:	b5 23       	and	r27, r21
    1220:	21 e0       	ldi	r18, 0x01	; 1
    1222:	30 e0       	ldi	r19, 0x00	; 0
    1224:	40 e0       	ldi	r20, 0x00	; 0
    1226:	50 e0       	ldi	r21, 0x00	; 0
    1228:	00 97       	sbiw	r24, 0x00	; 0
    122a:	a1 05       	cpc	r26, r1
    122c:	b1 05       	cpc	r27, r1
    122e:	19 f4       	brne	.+6      	; 0x1236 <_fpadd_parts+0x170>
    1230:	20 e0       	ldi	r18, 0x00	; 0
    1232:	30 e0       	ldi	r19, 0x00	; 0
    1234:	a9 01       	movw	r20, r18
    1236:	26 29       	or	r18, r6
    1238:	37 29       	or	r19, r7
    123a:	48 29       	or	r20, r8
    123c:	59 29       	or	r21, r9
    123e:	0b c0       	rjmp	.+22     	; 0x1256 <_fpadd_parts+0x190>
    1240:	6c 14       	cp	r6, r12
    1242:	7d 04       	cpc	r7, r13
    1244:	24 f4       	brge	.+8      	; 0x124e <_fpadd_parts+0x188>
    1246:	ee 24       	eor	r14, r14
    1248:	ff 24       	eor	r15, r15
    124a:	87 01       	movw	r16, r14
    124c:	04 c0       	rjmp	.+8      	; 0x1256 <_fpadd_parts+0x190>
    124e:	63 01       	movw	r12, r6
    1250:	20 e0       	ldi	r18, 0x00	; 0
    1252:	30 e0       	ldi	r19, 0x00	; 0
    1254:	a9 01       	movw	r20, r18
    1256:	81 81       	ldd	r24, Z+1	; 0x01
    1258:	fb 01       	movw	r30, r22
    125a:	91 81       	ldd	r25, Z+1	; 0x01
    125c:	89 17       	cp	r24, r25
    125e:	09 f4       	brne	.+2      	; 0x1262 <_fpadd_parts+0x19c>
    1260:	45 c0       	rjmp	.+138    	; 0x12ec <_fpadd_parts+0x226>
    1262:	88 23       	and	r24, r24
    1264:	49 f0       	breq	.+18     	; 0x1278 <_fpadd_parts+0x1b2>
    1266:	d8 01       	movw	r26, r16
    1268:	c7 01       	movw	r24, r14
    126a:	82 1b       	sub	r24, r18
    126c:	93 0b       	sbc	r25, r19
    126e:	a4 0b       	sbc	r26, r20
    1270:	b5 0b       	sbc	r27, r21
    1272:	9c 01       	movw	r18, r24
    1274:	ad 01       	movw	r20, r26
    1276:	04 c0       	rjmp	.+8      	; 0x1280 <_fpadd_parts+0x1ba>
    1278:	2e 19       	sub	r18, r14
    127a:	3f 09       	sbc	r19, r15
    127c:	40 0b       	sbc	r20, r16
    127e:	51 0b       	sbc	r21, r17
    1280:	57 fd       	sbrc	r21, 7
    1282:	04 c0       	rjmp	.+8      	; 0x128c <_fpadd_parts+0x1c6>
    1284:	19 82       	std	Y+1, r1	; 0x01
    1286:	db 82       	std	Y+3, r13	; 0x03
    1288:	ca 82       	std	Y+2, r12	; 0x02
    128a:	0b c0       	rjmp	.+22     	; 0x12a2 <_fpadd_parts+0x1dc>
    128c:	81 e0       	ldi	r24, 0x01	; 1
    128e:	89 83       	std	Y+1, r24	; 0x01
    1290:	db 82       	std	Y+3, r13	; 0x03
    1292:	ca 82       	std	Y+2, r12	; 0x02
    1294:	50 95       	com	r21
    1296:	40 95       	com	r20
    1298:	30 95       	com	r19
    129a:	21 95       	neg	r18
    129c:	3f 4f       	sbci	r19, 0xFF	; 255
    129e:	4f 4f       	sbci	r20, 0xFF	; 255
    12a0:	5f 4f       	sbci	r21, 0xFF	; 255
    12a2:	2c 83       	std	Y+4, r18	; 0x04
    12a4:	3d 83       	std	Y+5, r19	; 0x05
    12a6:	4e 83       	std	Y+6, r20	; 0x06
    12a8:	5f 83       	std	Y+7, r21	; 0x07
    12aa:	0d c0       	rjmp	.+26     	; 0x12c6 <_fpadd_parts+0x200>
    12ac:	88 0f       	add	r24, r24
    12ae:	99 1f       	adc	r25, r25
    12b0:	aa 1f       	adc	r26, r26
    12b2:	bb 1f       	adc	r27, r27
    12b4:	8c 83       	std	Y+4, r24	; 0x04
    12b6:	9d 83       	std	Y+5, r25	; 0x05
    12b8:	ae 83       	std	Y+6, r26	; 0x06
    12ba:	bf 83       	std	Y+7, r27	; 0x07
    12bc:	8a 81       	ldd	r24, Y+2	; 0x02
    12be:	9b 81       	ldd	r25, Y+3	; 0x03
    12c0:	01 97       	sbiw	r24, 0x01	; 1
    12c2:	9b 83       	std	Y+3, r25	; 0x03
    12c4:	8a 83       	std	Y+2, r24	; 0x02
    12c6:	8c 81       	ldd	r24, Y+4	; 0x04
    12c8:	9d 81       	ldd	r25, Y+5	; 0x05
    12ca:	ae 81       	ldd	r26, Y+6	; 0x06
    12cc:	bf 81       	ldd	r27, Y+7	; 0x07
    12ce:	9c 01       	movw	r18, r24
    12d0:	ad 01       	movw	r20, r26
    12d2:	21 50       	subi	r18, 0x01	; 1
    12d4:	30 40       	sbci	r19, 0x00	; 0
    12d6:	40 40       	sbci	r20, 0x00	; 0
    12d8:	50 40       	sbci	r21, 0x00	; 0
    12da:	2f 3f       	cpi	r18, 0xFF	; 255
    12dc:	ef ef       	ldi	r30, 0xFF	; 255
    12de:	3e 07       	cpc	r19, r30
    12e0:	ef ef       	ldi	r30, 0xFF	; 255
    12e2:	4e 07       	cpc	r20, r30
    12e4:	ef e3       	ldi	r30, 0x3F	; 63
    12e6:	5e 07       	cpc	r21, r30
    12e8:	08 f3       	brcs	.-62     	; 0x12ac <_fpadd_parts+0x1e6>
    12ea:	0b c0       	rjmp	.+22     	; 0x1302 <_fpadd_parts+0x23c>
    12ec:	89 83       	std	Y+1, r24	; 0x01
    12ee:	db 82       	std	Y+3, r13	; 0x03
    12f0:	ca 82       	std	Y+2, r12	; 0x02
    12f2:	2e 0d       	add	r18, r14
    12f4:	3f 1d       	adc	r19, r15
    12f6:	40 1f       	adc	r20, r16
    12f8:	51 1f       	adc	r21, r17
    12fa:	2c 83       	std	Y+4, r18	; 0x04
    12fc:	3d 83       	std	Y+5, r19	; 0x05
    12fe:	4e 83       	std	Y+6, r20	; 0x06
    1300:	5f 83       	std	Y+7, r21	; 0x07
    1302:	83 e0       	ldi	r24, 0x03	; 3
    1304:	88 83       	st	Y, r24
    1306:	2c 81       	ldd	r18, Y+4	; 0x04
    1308:	3d 81       	ldd	r19, Y+5	; 0x05
    130a:	4e 81       	ldd	r20, Y+6	; 0x06
    130c:	5f 81       	ldd	r21, Y+7	; 0x07
    130e:	57 ff       	sbrs	r21, 7
    1310:	1d c0       	rjmp	.+58     	; 0x134c <_fpadd_parts+0x286>
    1312:	da 01       	movw	r26, r20
    1314:	c9 01       	movw	r24, r18
    1316:	81 70       	andi	r24, 0x01	; 1
    1318:	90 70       	andi	r25, 0x00	; 0
    131a:	a0 70       	andi	r26, 0x00	; 0
    131c:	b0 70       	andi	r27, 0x00	; 0
    131e:	56 95       	lsr	r21
    1320:	47 95       	ror	r20
    1322:	37 95       	ror	r19
    1324:	27 95       	ror	r18
    1326:	82 2b       	or	r24, r18
    1328:	93 2b       	or	r25, r19
    132a:	a4 2b       	or	r26, r20
    132c:	b5 2b       	or	r27, r21
    132e:	8c 83       	std	Y+4, r24	; 0x04
    1330:	9d 83       	std	Y+5, r25	; 0x05
    1332:	ae 83       	std	Y+6, r26	; 0x06
    1334:	bf 83       	std	Y+7, r27	; 0x07
    1336:	8a 81       	ldd	r24, Y+2	; 0x02
    1338:	9b 81       	ldd	r25, Y+3	; 0x03
    133a:	01 96       	adiw	r24, 0x01	; 1
    133c:	9b 83       	std	Y+3, r25	; 0x03
    133e:	8a 83       	std	Y+2, r24	; 0x02
    1340:	05 c0       	rjmp	.+10     	; 0x134c <_fpadd_parts+0x286>
    1342:	e0 e6       	ldi	r30, 0x60	; 96
    1344:	f0 e0       	ldi	r31, 0x00	; 0
    1346:	03 c0       	rjmp	.+6      	; 0x134e <_fpadd_parts+0x288>
    1348:	fb 01       	movw	r30, r22
    134a:	01 c0       	rjmp	.+2      	; 0x134e <_fpadd_parts+0x288>
    134c:	fe 01       	movw	r30, r28
    134e:	cf 01       	movw	r24, r30
    1350:	cd b7       	in	r28, 0x3d	; 61
    1352:	de b7       	in	r29, 0x3e	; 62
    1354:	ee e0       	ldi	r30, 0x0E	; 14
    1356:	0c 94 97 0d 	jmp	0x1b2e	; 0x1b2e <__epilogue_restores__+0x8>

0000135a <__addsf3>:
    135a:	a0 e2       	ldi	r26, 0x20	; 32
    135c:	b0 e0       	ldi	r27, 0x00	; 0
    135e:	e3 eb       	ldi	r30, 0xB3	; 179
    1360:	f9 e0       	ldi	r31, 0x09	; 9
    1362:	0c 94 83 0d 	jmp	0x1b06	; 0x1b06 <__prologue_saves__+0x18>
    1366:	69 83       	std	Y+1, r22	; 0x01
    1368:	7a 83       	std	Y+2, r23	; 0x02
    136a:	8b 83       	std	Y+3, r24	; 0x03
    136c:	9c 83       	std	Y+4, r25	; 0x04
    136e:	2d 83       	std	Y+5, r18	; 0x05
    1370:	3e 83       	std	Y+6, r19	; 0x06
    1372:	4f 83       	std	Y+7, r20	; 0x07
    1374:	58 87       	std	Y+8, r21	; 0x08
    1376:	89 e0       	ldi	r24, 0x09	; 9
    1378:	e8 2e       	mov	r14, r24
    137a:	f1 2c       	mov	r15, r1
    137c:	ec 0e       	add	r14, r28
    137e:	fd 1e       	adc	r15, r29
    1380:	ce 01       	movw	r24, r28
    1382:	01 96       	adiw	r24, 0x01	; 1
    1384:	b7 01       	movw	r22, r14
    1386:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    138a:	8e 01       	movw	r16, r28
    138c:	0f 5e       	subi	r16, 0xEF	; 239
    138e:	1f 4f       	sbci	r17, 0xFF	; 255
    1390:	ce 01       	movw	r24, r28
    1392:	05 96       	adiw	r24, 0x05	; 5
    1394:	b8 01       	movw	r22, r16
    1396:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    139a:	c7 01       	movw	r24, r14
    139c:	b8 01       	movw	r22, r16
    139e:	ae 01       	movw	r20, r28
    13a0:	47 5e       	subi	r20, 0xE7	; 231
    13a2:	5f 4f       	sbci	r21, 0xFF	; 255
    13a4:	0e 94 63 08 	call	0x10c6	; 0x10c6 <_fpadd_parts>
    13a8:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__pack_f>
    13ac:	a0 96       	adiw	r28, 0x20	; 32
    13ae:	e6 e0       	ldi	r30, 0x06	; 6
    13b0:	0c 94 9f 0d 	jmp	0x1b3e	; 0x1b3e <__epilogue_restores__+0x18>

000013b4 <__subsf3>:
    13b4:	a0 e2       	ldi	r26, 0x20	; 32
    13b6:	b0 e0       	ldi	r27, 0x00	; 0
    13b8:	e0 ee       	ldi	r30, 0xE0	; 224
    13ba:	f9 e0       	ldi	r31, 0x09	; 9
    13bc:	0c 94 83 0d 	jmp	0x1b06	; 0x1b06 <__prologue_saves__+0x18>
    13c0:	69 83       	std	Y+1, r22	; 0x01
    13c2:	7a 83       	std	Y+2, r23	; 0x02
    13c4:	8b 83       	std	Y+3, r24	; 0x03
    13c6:	9c 83       	std	Y+4, r25	; 0x04
    13c8:	2d 83       	std	Y+5, r18	; 0x05
    13ca:	3e 83       	std	Y+6, r19	; 0x06
    13cc:	4f 83       	std	Y+7, r20	; 0x07
    13ce:	58 87       	std	Y+8, r21	; 0x08
    13d0:	8e 01       	movw	r16, r28
    13d2:	07 5f       	subi	r16, 0xF7	; 247
    13d4:	1f 4f       	sbci	r17, 0xFF	; 255
    13d6:	ce 01       	movw	r24, r28
    13d8:	01 96       	adiw	r24, 0x01	; 1
    13da:	b8 01       	movw	r22, r16
    13dc:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    13e0:	91 e1       	ldi	r25, 0x11	; 17
    13e2:	e9 2e       	mov	r14, r25
    13e4:	f1 2c       	mov	r15, r1
    13e6:	ec 0e       	add	r14, r28
    13e8:	fd 1e       	adc	r15, r29
    13ea:	ce 01       	movw	r24, r28
    13ec:	05 96       	adiw	r24, 0x05	; 5
    13ee:	b7 01       	movw	r22, r14
    13f0:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    13f4:	8a 89       	ldd	r24, Y+18	; 0x12
    13f6:	91 e0       	ldi	r25, 0x01	; 1
    13f8:	89 27       	eor	r24, r25
    13fa:	8a 8b       	std	Y+18, r24	; 0x12
    13fc:	c8 01       	movw	r24, r16
    13fe:	b7 01       	movw	r22, r14
    1400:	ae 01       	movw	r20, r28
    1402:	47 5e       	subi	r20, 0xE7	; 231
    1404:	5f 4f       	sbci	r21, 0xFF	; 255
    1406:	0e 94 63 08 	call	0x10c6	; 0x10c6 <_fpadd_parts>
    140a:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__pack_f>
    140e:	a0 96       	adiw	r28, 0x20	; 32
    1410:	e6 e0       	ldi	r30, 0x06	; 6
    1412:	0c 94 9f 0d 	jmp	0x1b3e	; 0x1b3e <__epilogue_restores__+0x18>

00001416 <__mulsf3>:
    1416:	a0 e2       	ldi	r26, 0x20	; 32
    1418:	b0 e0       	ldi	r27, 0x00	; 0
    141a:	e1 e1       	ldi	r30, 0x11	; 17
    141c:	fa e0       	ldi	r31, 0x0A	; 10
    141e:	0c 94 77 0d 	jmp	0x1aee	; 0x1aee <__prologue_saves__>
    1422:	69 83       	std	Y+1, r22	; 0x01
    1424:	7a 83       	std	Y+2, r23	; 0x02
    1426:	8b 83       	std	Y+3, r24	; 0x03
    1428:	9c 83       	std	Y+4, r25	; 0x04
    142a:	2d 83       	std	Y+5, r18	; 0x05
    142c:	3e 83       	std	Y+6, r19	; 0x06
    142e:	4f 83       	std	Y+7, r20	; 0x07
    1430:	58 87       	std	Y+8, r21	; 0x08
    1432:	ce 01       	movw	r24, r28
    1434:	01 96       	adiw	r24, 0x01	; 1
    1436:	be 01       	movw	r22, r28
    1438:	67 5f       	subi	r22, 0xF7	; 247
    143a:	7f 4f       	sbci	r23, 0xFF	; 255
    143c:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    1440:	ce 01       	movw	r24, r28
    1442:	05 96       	adiw	r24, 0x05	; 5
    1444:	be 01       	movw	r22, r28
    1446:	6f 5e       	subi	r22, 0xEF	; 239
    1448:	7f 4f       	sbci	r23, 0xFF	; 255
    144a:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    144e:	99 85       	ldd	r25, Y+9	; 0x09
    1450:	92 30       	cpi	r25, 0x02	; 2
    1452:	78 f0       	brcs	.+30     	; 0x1472 <__mulsf3+0x5c>
    1454:	89 89       	ldd	r24, Y+17	; 0x11
    1456:	82 30       	cpi	r24, 0x02	; 2
    1458:	c0 f0       	brcs	.+48     	; 0x148a <__mulsf3+0x74>
    145a:	94 30       	cpi	r25, 0x04	; 4
    145c:	19 f4       	brne	.+6      	; 0x1464 <__mulsf3+0x4e>
    145e:	82 30       	cpi	r24, 0x02	; 2
    1460:	41 f4       	brne	.+16     	; 0x1472 <__mulsf3+0x5c>
    1462:	cb c0       	rjmp	.+406    	; 0x15fa <__mulsf3+0x1e4>
    1464:	84 30       	cpi	r24, 0x04	; 4
    1466:	19 f4       	brne	.+6      	; 0x146e <__mulsf3+0x58>
    1468:	92 30       	cpi	r25, 0x02	; 2
    146a:	79 f4       	brne	.+30     	; 0x148a <__mulsf3+0x74>
    146c:	c6 c0       	rjmp	.+396    	; 0x15fa <__mulsf3+0x1e4>
    146e:	92 30       	cpi	r25, 0x02	; 2
    1470:	51 f4       	brne	.+20     	; 0x1486 <__mulsf3+0x70>
    1472:	81 e0       	ldi	r24, 0x01	; 1
    1474:	2a 85       	ldd	r18, Y+10	; 0x0a
    1476:	9a 89       	ldd	r25, Y+18	; 0x12
    1478:	29 17       	cp	r18, r25
    147a:	09 f4       	brne	.+2      	; 0x147e <__mulsf3+0x68>
    147c:	80 e0       	ldi	r24, 0x00	; 0
    147e:	8a 87       	std	Y+10, r24	; 0x0a
    1480:	ce 01       	movw	r24, r28
    1482:	09 96       	adiw	r24, 0x09	; 9
    1484:	bc c0       	rjmp	.+376    	; 0x15fe <__mulsf3+0x1e8>
    1486:	82 30       	cpi	r24, 0x02	; 2
    1488:	51 f4       	brne	.+20     	; 0x149e <__mulsf3+0x88>
    148a:	81 e0       	ldi	r24, 0x01	; 1
    148c:	2a 85       	ldd	r18, Y+10	; 0x0a
    148e:	9a 89       	ldd	r25, Y+18	; 0x12
    1490:	29 17       	cp	r18, r25
    1492:	09 f4       	brne	.+2      	; 0x1496 <__mulsf3+0x80>
    1494:	80 e0       	ldi	r24, 0x00	; 0
    1496:	8a 8b       	std	Y+18, r24	; 0x12
    1498:	ce 01       	movw	r24, r28
    149a:	41 96       	adiw	r24, 0x11	; 17
    149c:	b0 c0       	rjmp	.+352    	; 0x15fe <__mulsf3+0x1e8>
    149e:	6d 84       	ldd	r6, Y+13	; 0x0d
    14a0:	7e 84       	ldd	r7, Y+14	; 0x0e
    14a2:	8f 84       	ldd	r8, Y+15	; 0x0f
    14a4:	98 88       	ldd	r9, Y+16	; 0x10
    14a6:	ed 88       	ldd	r14, Y+21	; 0x15
    14a8:	fe 88       	ldd	r15, Y+22	; 0x16
    14aa:	0f 89       	ldd	r16, Y+23	; 0x17
    14ac:	18 8d       	ldd	r17, Y+24	; 0x18
    14ae:	e0 e2       	ldi	r30, 0x20	; 32
    14b0:	f0 e0       	ldi	r31, 0x00	; 0
    14b2:	80 e0       	ldi	r24, 0x00	; 0
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	dc 01       	movw	r26, r24
    14b8:	aa 24       	eor	r10, r10
    14ba:	bb 24       	eor	r11, r11
    14bc:	65 01       	movw	r12, r10
    14be:	20 e0       	ldi	r18, 0x00	; 0
    14c0:	30 e0       	ldi	r19, 0x00	; 0
    14c2:	a9 01       	movw	r20, r18
    14c4:	b3 01       	movw	r22, r6
    14c6:	61 70       	andi	r22, 0x01	; 1
    14c8:	70 70       	andi	r23, 0x00	; 0
    14ca:	61 15       	cp	r22, r1
    14cc:	71 05       	cpc	r23, r1
    14ce:	d1 f0       	breq	.+52     	; 0x1504 <__mulsf3+0xee>
    14d0:	2e 0d       	add	r18, r14
    14d2:	3f 1d       	adc	r19, r15
    14d4:	40 1f       	adc	r20, r16
    14d6:	51 1f       	adc	r21, r17
    14d8:	15 01       	movw	r2, r10
    14da:	26 01       	movw	r4, r12
    14dc:	28 0e       	add	r2, r24
    14de:	39 1e       	adc	r3, r25
    14e0:	4a 1e       	adc	r4, r26
    14e2:	5b 1e       	adc	r5, r27
    14e4:	81 e0       	ldi	r24, 0x01	; 1
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	a0 e0       	ldi	r26, 0x00	; 0
    14ea:	b0 e0       	ldi	r27, 0x00	; 0
    14ec:	2e 15       	cp	r18, r14
    14ee:	3f 05       	cpc	r19, r15
    14f0:	40 07       	cpc	r20, r16
    14f2:	51 07       	cpc	r21, r17
    14f4:	18 f0       	brcs	.+6      	; 0x14fc <__mulsf3+0xe6>
    14f6:	80 e0       	ldi	r24, 0x00	; 0
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	dc 01       	movw	r26, r24
    14fc:	82 0d       	add	r24, r2
    14fe:	93 1d       	adc	r25, r3
    1500:	a4 1d       	adc	r26, r4
    1502:	b5 1d       	adc	r27, r5
    1504:	aa 0c       	add	r10, r10
    1506:	bb 1c       	adc	r11, r11
    1508:	cc 1c       	adc	r12, r12
    150a:	dd 1c       	adc	r13, r13
    150c:	17 ff       	sbrs	r17, 7
    150e:	09 c0       	rjmp	.+18     	; 0x1522 <__mulsf3+0x10c>
    1510:	61 e0       	ldi	r22, 0x01	; 1
    1512:	26 2e       	mov	r2, r22
    1514:	31 2c       	mov	r3, r1
    1516:	41 2c       	mov	r4, r1
    1518:	51 2c       	mov	r5, r1
    151a:	a2 28       	or	r10, r2
    151c:	b3 28       	or	r11, r3
    151e:	c4 28       	or	r12, r4
    1520:	d5 28       	or	r13, r5
    1522:	31 97       	sbiw	r30, 0x01	; 1
    1524:	49 f0       	breq	.+18     	; 0x1538 <__mulsf3+0x122>
    1526:	ee 0c       	add	r14, r14
    1528:	ff 1c       	adc	r15, r15
    152a:	00 1f       	adc	r16, r16
    152c:	11 1f       	adc	r17, r17
    152e:	96 94       	lsr	r9
    1530:	87 94       	ror	r8
    1532:	77 94       	ror	r7
    1534:	67 94       	ror	r6
    1536:	c6 cf       	rjmp	.-116    	; 0x14c4 <__mulsf3+0xae>
    1538:	6b 89       	ldd	r22, Y+19	; 0x13
    153a:	7c 89       	ldd	r23, Y+20	; 0x14
    153c:	eb 85       	ldd	r30, Y+11	; 0x0b
    153e:	fc 85       	ldd	r31, Y+12	; 0x0c
    1540:	6e 0f       	add	r22, r30
    1542:	7f 1f       	adc	r23, r31
    1544:	6e 5f       	subi	r22, 0xFE	; 254
    1546:	7f 4f       	sbci	r23, 0xFF	; 255
    1548:	7c 8f       	std	Y+28, r23	; 0x1c
    154a:	6b 8f       	std	Y+27, r22	; 0x1b
    154c:	61 e0       	ldi	r22, 0x01	; 1
    154e:	ea 85       	ldd	r30, Y+10	; 0x0a
    1550:	7a 89       	ldd	r23, Y+18	; 0x12
    1552:	e7 17       	cp	r30, r23
    1554:	09 f4       	brne	.+2      	; 0x1558 <__mulsf3+0x142>
    1556:	60 e0       	ldi	r22, 0x00	; 0
    1558:	6a 8f       	std	Y+26, r22	; 0x1a
    155a:	6b 8d       	ldd	r22, Y+27	; 0x1b
    155c:	7c 8d       	ldd	r23, Y+28	; 0x1c
    155e:	10 c0       	rjmp	.+32     	; 0x1580 <__mulsf3+0x16a>
    1560:	fc 01       	movw	r30, r24
    1562:	e1 70       	andi	r30, 0x01	; 1
    1564:	f0 70       	andi	r31, 0x00	; 0
    1566:	30 97       	sbiw	r30, 0x00	; 0
    1568:	29 f0       	breq	.+10     	; 0x1574 <__mulsf3+0x15e>
    156a:	56 95       	lsr	r21
    156c:	47 95       	ror	r20
    156e:	37 95       	ror	r19
    1570:	27 95       	ror	r18
    1572:	50 68       	ori	r21, 0x80	; 128
    1574:	b6 95       	lsr	r27
    1576:	a7 95       	ror	r26
    1578:	97 95       	ror	r25
    157a:	87 95       	ror	r24
    157c:	6f 5f       	subi	r22, 0xFF	; 255
    157e:	7f 4f       	sbci	r23, 0xFF	; 255
    1580:	b7 fd       	sbrc	r27, 7
    1582:	ee cf       	rjmp	.-36     	; 0x1560 <__mulsf3+0x14a>
    1584:	0c c0       	rjmp	.+24     	; 0x159e <__mulsf3+0x188>
    1586:	88 0f       	add	r24, r24
    1588:	99 1f       	adc	r25, r25
    158a:	aa 1f       	adc	r26, r26
    158c:	bb 1f       	adc	r27, r27
    158e:	57 fd       	sbrc	r21, 7
    1590:	81 60       	ori	r24, 0x01	; 1
    1592:	22 0f       	add	r18, r18
    1594:	33 1f       	adc	r19, r19
    1596:	44 1f       	adc	r20, r20
    1598:	55 1f       	adc	r21, r21
    159a:	61 50       	subi	r22, 0x01	; 1
    159c:	70 40       	sbci	r23, 0x00	; 0
    159e:	80 30       	cpi	r24, 0x00	; 0
    15a0:	e0 e0       	ldi	r30, 0x00	; 0
    15a2:	9e 07       	cpc	r25, r30
    15a4:	e0 e0       	ldi	r30, 0x00	; 0
    15a6:	ae 07       	cpc	r26, r30
    15a8:	e0 e4       	ldi	r30, 0x40	; 64
    15aa:	be 07       	cpc	r27, r30
    15ac:	60 f3       	brcs	.-40     	; 0x1586 <__mulsf3+0x170>
    15ae:	6b 8f       	std	Y+27, r22	; 0x1b
    15b0:	7c 8f       	std	Y+28, r23	; 0x1c
    15b2:	6f e7       	ldi	r22, 0x7F	; 127
    15b4:	e6 2e       	mov	r14, r22
    15b6:	f1 2c       	mov	r15, r1
    15b8:	01 2d       	mov	r16, r1
    15ba:	11 2d       	mov	r17, r1
    15bc:	e8 22       	and	r14, r24
    15be:	f9 22       	and	r15, r25
    15c0:	0a 23       	and	r16, r26
    15c2:	1b 23       	and	r17, r27
    15c4:	60 e4       	ldi	r22, 0x40	; 64
    15c6:	e6 16       	cp	r14, r22
    15c8:	f1 04       	cpc	r15, r1
    15ca:	01 05       	cpc	r16, r1
    15cc:	11 05       	cpc	r17, r1
    15ce:	61 f4       	brne	.+24     	; 0x15e8 <__mulsf3+0x1d2>
    15d0:	87 fd       	sbrc	r24, 7
    15d2:	0a c0       	rjmp	.+20     	; 0x15e8 <__mulsf3+0x1d2>
    15d4:	21 15       	cp	r18, r1
    15d6:	31 05       	cpc	r19, r1
    15d8:	41 05       	cpc	r20, r1
    15da:	51 05       	cpc	r21, r1
    15dc:	29 f0       	breq	.+10     	; 0x15e8 <__mulsf3+0x1d2>
    15de:	80 5c       	subi	r24, 0xC0	; 192
    15e0:	9f 4f       	sbci	r25, 0xFF	; 255
    15e2:	af 4f       	sbci	r26, 0xFF	; 255
    15e4:	bf 4f       	sbci	r27, 0xFF	; 255
    15e6:	80 78       	andi	r24, 0x80	; 128
    15e8:	8d 8f       	std	Y+29, r24	; 0x1d
    15ea:	9e 8f       	std	Y+30, r25	; 0x1e
    15ec:	af 8f       	std	Y+31, r26	; 0x1f
    15ee:	b8 a3       	std	Y+32, r27	; 0x20
    15f0:	83 e0       	ldi	r24, 0x03	; 3
    15f2:	89 8f       	std	Y+25, r24	; 0x19
    15f4:	ce 01       	movw	r24, r28
    15f6:	49 96       	adiw	r24, 0x19	; 25
    15f8:	02 c0       	rjmp	.+4      	; 0x15fe <__mulsf3+0x1e8>
    15fa:	80 e6       	ldi	r24, 0x60	; 96
    15fc:	90 e0       	ldi	r25, 0x00	; 0
    15fe:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <__pack_f>
    1602:	a0 96       	adiw	r28, 0x20	; 32
    1604:	e2 e1       	ldi	r30, 0x12	; 18
    1606:	0c 94 93 0d 	jmp	0x1b26	; 0x1b26 <__epilogue_restores__>

0000160a <__gtsf2>:
    160a:	a8 e1       	ldi	r26, 0x18	; 24
    160c:	b0 e0       	ldi	r27, 0x00	; 0
    160e:	eb e0       	ldi	r30, 0x0B	; 11
    1610:	fb e0       	ldi	r31, 0x0B	; 11
    1612:	0c 94 83 0d 	jmp	0x1b06	; 0x1b06 <__prologue_saves__+0x18>
    1616:	69 83       	std	Y+1, r22	; 0x01
    1618:	7a 83       	std	Y+2, r23	; 0x02
    161a:	8b 83       	std	Y+3, r24	; 0x03
    161c:	9c 83       	std	Y+4, r25	; 0x04
    161e:	2d 83       	std	Y+5, r18	; 0x05
    1620:	3e 83       	std	Y+6, r19	; 0x06
    1622:	4f 83       	std	Y+7, r20	; 0x07
    1624:	58 87       	std	Y+8, r21	; 0x08
    1626:	8e 01       	movw	r16, r28
    1628:	07 5f       	subi	r16, 0xF7	; 247
    162a:	1f 4f       	sbci	r17, 0xFF	; 255
    162c:	ce 01       	movw	r24, r28
    162e:	01 96       	adiw	r24, 0x01	; 1
    1630:	b8 01       	movw	r22, r16
    1632:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    1636:	81 e1       	ldi	r24, 0x11	; 17
    1638:	e8 2e       	mov	r14, r24
    163a:	f1 2c       	mov	r15, r1
    163c:	ec 0e       	add	r14, r28
    163e:	fd 1e       	adc	r15, r29
    1640:	ce 01       	movw	r24, r28
    1642:	05 96       	adiw	r24, 0x05	; 5
    1644:	b7 01       	movw	r22, r14
    1646:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    164a:	89 85       	ldd	r24, Y+9	; 0x09
    164c:	82 30       	cpi	r24, 0x02	; 2
    164e:	40 f0       	brcs	.+16     	; 0x1660 <__gtsf2+0x56>
    1650:	89 89       	ldd	r24, Y+17	; 0x11
    1652:	82 30       	cpi	r24, 0x02	; 2
    1654:	28 f0       	brcs	.+10     	; 0x1660 <__gtsf2+0x56>
    1656:	c8 01       	movw	r24, r16
    1658:	b7 01       	movw	r22, r14
    165a:	0e 94 1e 0d 	call	0x1a3c	; 0x1a3c <__fpcmp_parts_f>
    165e:	01 c0       	rjmp	.+2      	; 0x1662 <__gtsf2+0x58>
    1660:	8f ef       	ldi	r24, 0xFF	; 255
    1662:	68 96       	adiw	r28, 0x18	; 24
    1664:	e6 e0       	ldi	r30, 0x06	; 6
    1666:	0c 94 9f 0d 	jmp	0x1b3e	; 0x1b3e <__epilogue_restores__+0x18>

0000166a <__gesf2>:
    166a:	a8 e1       	ldi	r26, 0x18	; 24
    166c:	b0 e0       	ldi	r27, 0x00	; 0
    166e:	eb e3       	ldi	r30, 0x3B	; 59
    1670:	fb e0       	ldi	r31, 0x0B	; 11
    1672:	0c 94 83 0d 	jmp	0x1b06	; 0x1b06 <__prologue_saves__+0x18>
    1676:	69 83       	std	Y+1, r22	; 0x01
    1678:	7a 83       	std	Y+2, r23	; 0x02
    167a:	8b 83       	std	Y+3, r24	; 0x03
    167c:	9c 83       	std	Y+4, r25	; 0x04
    167e:	2d 83       	std	Y+5, r18	; 0x05
    1680:	3e 83       	std	Y+6, r19	; 0x06
    1682:	4f 83       	std	Y+7, r20	; 0x07
    1684:	58 87       	std	Y+8, r21	; 0x08
    1686:	8e 01       	movw	r16, r28
    1688:	07 5f       	subi	r16, 0xF7	; 247
    168a:	1f 4f       	sbci	r17, 0xFF	; 255
    168c:	ce 01       	movw	r24, r28
    168e:	01 96       	adiw	r24, 0x01	; 1
    1690:	b8 01       	movw	r22, r16
    1692:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    1696:	81 e1       	ldi	r24, 0x11	; 17
    1698:	e8 2e       	mov	r14, r24
    169a:	f1 2c       	mov	r15, r1
    169c:	ec 0e       	add	r14, r28
    169e:	fd 1e       	adc	r15, r29
    16a0:	ce 01       	movw	r24, r28
    16a2:	05 96       	adiw	r24, 0x05	; 5
    16a4:	b7 01       	movw	r22, r14
    16a6:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    16aa:	89 85       	ldd	r24, Y+9	; 0x09
    16ac:	82 30       	cpi	r24, 0x02	; 2
    16ae:	40 f0       	brcs	.+16     	; 0x16c0 <__gesf2+0x56>
    16b0:	89 89       	ldd	r24, Y+17	; 0x11
    16b2:	82 30       	cpi	r24, 0x02	; 2
    16b4:	28 f0       	brcs	.+10     	; 0x16c0 <__gesf2+0x56>
    16b6:	c8 01       	movw	r24, r16
    16b8:	b7 01       	movw	r22, r14
    16ba:	0e 94 1e 0d 	call	0x1a3c	; 0x1a3c <__fpcmp_parts_f>
    16be:	01 c0       	rjmp	.+2      	; 0x16c2 <__gesf2+0x58>
    16c0:	8f ef       	ldi	r24, 0xFF	; 255
    16c2:	68 96       	adiw	r28, 0x18	; 24
    16c4:	e6 e0       	ldi	r30, 0x06	; 6
    16c6:	0c 94 9f 0d 	jmp	0x1b3e	; 0x1b3e <__epilogue_restores__+0x18>

000016ca <__ltsf2>:
    16ca:	a8 e1       	ldi	r26, 0x18	; 24
    16cc:	b0 e0       	ldi	r27, 0x00	; 0
    16ce:	eb e6       	ldi	r30, 0x6B	; 107
    16d0:	fb e0       	ldi	r31, 0x0B	; 11
    16d2:	0c 94 83 0d 	jmp	0x1b06	; 0x1b06 <__prologue_saves__+0x18>
    16d6:	69 83       	std	Y+1, r22	; 0x01
    16d8:	7a 83       	std	Y+2, r23	; 0x02
    16da:	8b 83       	std	Y+3, r24	; 0x03
    16dc:	9c 83       	std	Y+4, r25	; 0x04
    16de:	2d 83       	std	Y+5, r18	; 0x05
    16e0:	3e 83       	std	Y+6, r19	; 0x06
    16e2:	4f 83       	std	Y+7, r20	; 0x07
    16e4:	58 87       	std	Y+8, r21	; 0x08
    16e6:	8e 01       	movw	r16, r28
    16e8:	07 5f       	subi	r16, 0xF7	; 247
    16ea:	1f 4f       	sbci	r17, 0xFF	; 255
    16ec:	ce 01       	movw	r24, r28
    16ee:	01 96       	adiw	r24, 0x01	; 1
    16f0:	b8 01       	movw	r22, r16
    16f2:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    16f6:	81 e1       	ldi	r24, 0x11	; 17
    16f8:	e8 2e       	mov	r14, r24
    16fa:	f1 2c       	mov	r15, r1
    16fc:	ec 0e       	add	r14, r28
    16fe:	fd 1e       	adc	r15, r29
    1700:	ce 01       	movw	r24, r28
    1702:	05 96       	adiw	r24, 0x05	; 5
    1704:	b7 01       	movw	r22, r14
    1706:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    170a:	89 85       	ldd	r24, Y+9	; 0x09
    170c:	82 30       	cpi	r24, 0x02	; 2
    170e:	40 f0       	brcs	.+16     	; 0x1720 <__ltsf2+0x56>
    1710:	89 89       	ldd	r24, Y+17	; 0x11
    1712:	82 30       	cpi	r24, 0x02	; 2
    1714:	28 f0       	brcs	.+10     	; 0x1720 <__ltsf2+0x56>
    1716:	c8 01       	movw	r24, r16
    1718:	b7 01       	movw	r22, r14
    171a:	0e 94 1e 0d 	call	0x1a3c	; 0x1a3c <__fpcmp_parts_f>
    171e:	01 c0       	rjmp	.+2      	; 0x1722 <__ltsf2+0x58>
    1720:	81 e0       	ldi	r24, 0x01	; 1
    1722:	68 96       	adiw	r28, 0x18	; 24
    1724:	e6 e0       	ldi	r30, 0x06	; 6
    1726:	0c 94 9f 0d 	jmp	0x1b3e	; 0x1b3e <__epilogue_restores__+0x18>

0000172a <__fixsfsi>:
    172a:	ac e0       	ldi	r26, 0x0C	; 12
    172c:	b0 e0       	ldi	r27, 0x00	; 0
    172e:	eb e9       	ldi	r30, 0x9B	; 155
    1730:	fb e0       	ldi	r31, 0x0B	; 11
    1732:	0c 94 87 0d 	jmp	0x1b0e	; 0x1b0e <__prologue_saves__+0x20>
    1736:	69 83       	std	Y+1, r22	; 0x01
    1738:	7a 83       	std	Y+2, r23	; 0x02
    173a:	8b 83       	std	Y+3, r24	; 0x03
    173c:	9c 83       	std	Y+4, r25	; 0x04
    173e:	ce 01       	movw	r24, r28
    1740:	01 96       	adiw	r24, 0x01	; 1
    1742:	be 01       	movw	r22, r28
    1744:	6b 5f       	subi	r22, 0xFB	; 251
    1746:	7f 4f       	sbci	r23, 0xFF	; 255
    1748:	0e 94 b5 0c 	call	0x196a	; 0x196a <__unpack_f>
    174c:	8d 81       	ldd	r24, Y+5	; 0x05
    174e:	82 30       	cpi	r24, 0x02	; 2
    1750:	81 f1       	breq	.+96     	; 0x17b2 <__fixsfsi+0x88>
    1752:	82 30       	cpi	r24, 0x02	; 2
    1754:	70 f1       	brcs	.+92     	; 0x17b2 <__fixsfsi+0x88>
    1756:	84 30       	cpi	r24, 0x04	; 4
    1758:	21 f4       	brne	.+8      	; 0x1762 <__fixsfsi+0x38>
    175a:	8e 81       	ldd	r24, Y+6	; 0x06
    175c:	88 23       	and	r24, r24
    175e:	69 f1       	breq	.+90     	; 0x17ba <__fixsfsi+0x90>
    1760:	0a c0       	rjmp	.+20     	; 0x1776 <__fixsfsi+0x4c>
    1762:	2f 81       	ldd	r18, Y+7	; 0x07
    1764:	38 85       	ldd	r19, Y+8	; 0x08
    1766:	37 fd       	sbrc	r19, 7
    1768:	24 c0       	rjmp	.+72     	; 0x17b2 <__fixsfsi+0x88>
    176a:	6e 81       	ldd	r22, Y+6	; 0x06
    176c:	2f 31       	cpi	r18, 0x1F	; 31
    176e:	31 05       	cpc	r19, r1
    1770:	3c f0       	brlt	.+14     	; 0x1780 <__fixsfsi+0x56>
    1772:	66 23       	and	r22, r22
    1774:	11 f1       	breq	.+68     	; 0x17ba <__fixsfsi+0x90>
    1776:	20 e0       	ldi	r18, 0x00	; 0
    1778:	30 e0       	ldi	r19, 0x00	; 0
    177a:	40 e0       	ldi	r20, 0x00	; 0
    177c:	50 e8       	ldi	r21, 0x80	; 128
    177e:	21 c0       	rjmp	.+66     	; 0x17c2 <__fixsfsi+0x98>
    1780:	8e e1       	ldi	r24, 0x1E	; 30
    1782:	90 e0       	ldi	r25, 0x00	; 0
    1784:	82 1b       	sub	r24, r18
    1786:	93 0b       	sbc	r25, r19
    1788:	29 85       	ldd	r18, Y+9	; 0x09
    178a:	3a 85       	ldd	r19, Y+10	; 0x0a
    178c:	4b 85       	ldd	r20, Y+11	; 0x0b
    178e:	5c 85       	ldd	r21, Y+12	; 0x0c
    1790:	04 c0       	rjmp	.+8      	; 0x179a <__fixsfsi+0x70>
    1792:	56 95       	lsr	r21
    1794:	47 95       	ror	r20
    1796:	37 95       	ror	r19
    1798:	27 95       	ror	r18
    179a:	8a 95       	dec	r24
    179c:	d2 f7       	brpl	.-12     	; 0x1792 <__fixsfsi+0x68>
    179e:	66 23       	and	r22, r22
    17a0:	81 f0       	breq	.+32     	; 0x17c2 <__fixsfsi+0x98>
    17a2:	50 95       	com	r21
    17a4:	40 95       	com	r20
    17a6:	30 95       	com	r19
    17a8:	21 95       	neg	r18
    17aa:	3f 4f       	sbci	r19, 0xFF	; 255
    17ac:	4f 4f       	sbci	r20, 0xFF	; 255
    17ae:	5f 4f       	sbci	r21, 0xFF	; 255
    17b0:	08 c0       	rjmp	.+16     	; 0x17c2 <__fixsfsi+0x98>
    17b2:	20 e0       	ldi	r18, 0x00	; 0
    17b4:	30 e0       	ldi	r19, 0x00	; 0
    17b6:	a9 01       	movw	r20, r18
    17b8:	04 c0       	rjmp	.+8      	; 0x17c2 <__fixsfsi+0x98>
    17ba:	2f ef       	ldi	r18, 0xFF	; 255
    17bc:	3f ef       	ldi	r19, 0xFF	; 255
    17be:	4f ef       	ldi	r20, 0xFF	; 255
    17c0:	5f e7       	ldi	r21, 0x7F	; 127
    17c2:	b9 01       	movw	r22, r18
    17c4:	ca 01       	movw	r24, r20
    17c6:	2c 96       	adiw	r28, 0x0c	; 12
    17c8:	e2 e0       	ldi	r30, 0x02	; 2
    17ca:	0c 94 a3 0d 	jmp	0x1b46	; 0x1b46 <__epilogue_restores__+0x20>

000017ce <__pack_f>:
    17ce:	ef 92       	push	r14
    17d0:	ff 92       	push	r15
    17d2:	0f 93       	push	r16
    17d4:	1f 93       	push	r17
    17d6:	cf 93       	push	r28
    17d8:	df 93       	push	r29
    17da:	fc 01       	movw	r30, r24
    17dc:	24 81       	ldd	r18, Z+4	; 0x04
    17de:	35 81       	ldd	r19, Z+5	; 0x05
    17e0:	46 81       	ldd	r20, Z+6	; 0x06
    17e2:	57 81       	ldd	r21, Z+7	; 0x07
    17e4:	61 81       	ldd	r22, Z+1	; 0x01
    17e6:	80 81       	ld	r24, Z
    17e8:	82 30       	cpi	r24, 0x02	; 2
    17ea:	20 f4       	brcc	.+8      	; 0x17f4 <__pack_f+0x26>
    17ec:	40 61       	ori	r20, 0x10	; 16
    17ee:	ef ef       	ldi	r30, 0xFF	; 255
    17f0:	f0 e0       	ldi	r31, 0x00	; 0
    17f2:	a3 c0       	rjmp	.+326    	; 0x193a <__pack_f+0x16c>
    17f4:	84 30       	cpi	r24, 0x04	; 4
    17f6:	09 f4       	brne	.+2      	; 0x17fa <__pack_f+0x2c>
    17f8:	9b c0       	rjmp	.+310    	; 0x1930 <__pack_f+0x162>
    17fa:	82 30       	cpi	r24, 0x02	; 2
    17fc:	09 f4       	brne	.+2      	; 0x1800 <__pack_f+0x32>
    17fe:	92 c0       	rjmp	.+292    	; 0x1924 <__pack_f+0x156>
    1800:	21 15       	cp	r18, r1
    1802:	31 05       	cpc	r19, r1
    1804:	41 05       	cpc	r20, r1
    1806:	51 05       	cpc	r21, r1
    1808:	09 f4       	brne	.+2      	; 0x180c <__pack_f+0x3e>
    180a:	8f c0       	rjmp	.+286    	; 0x192a <__pack_f+0x15c>
    180c:	02 80       	ldd	r0, Z+2	; 0x02
    180e:	f3 81       	ldd	r31, Z+3	; 0x03
    1810:	e0 2d       	mov	r30, r0
    1812:	8f ef       	ldi	r24, 0xFF	; 255
    1814:	e2 38       	cpi	r30, 0x82	; 130
    1816:	f8 07       	cpc	r31, r24
    1818:	0c f0       	brlt	.+2      	; 0x181c <__pack_f+0x4e>
    181a:	5a c0       	rjmp	.+180    	; 0x18d0 <__pack_f+0x102>
    181c:	c2 e8       	ldi	r28, 0x82	; 130
    181e:	df ef       	ldi	r29, 0xFF	; 255
    1820:	ce 1b       	sub	r28, r30
    1822:	df 0b       	sbc	r29, r31
    1824:	ca 31       	cpi	r28, 0x1A	; 26
    1826:	d1 05       	cpc	r29, r1
    1828:	6c f5       	brge	.+90     	; 0x1884 <__pack_f+0xb6>
    182a:	79 01       	movw	r14, r18
    182c:	8a 01       	movw	r16, r20
    182e:	0c 2e       	mov	r0, r28
    1830:	04 c0       	rjmp	.+8      	; 0x183a <__pack_f+0x6c>
    1832:	16 95       	lsr	r17
    1834:	07 95       	ror	r16
    1836:	f7 94       	ror	r15
    1838:	e7 94       	ror	r14
    183a:	0a 94       	dec	r0
    183c:	d2 f7       	brpl	.-12     	; 0x1832 <__pack_f+0x64>
    183e:	81 e0       	ldi	r24, 0x01	; 1
    1840:	90 e0       	ldi	r25, 0x00	; 0
    1842:	a0 e0       	ldi	r26, 0x00	; 0
    1844:	b0 e0       	ldi	r27, 0x00	; 0
    1846:	0c 2e       	mov	r0, r28
    1848:	04 c0       	rjmp	.+8      	; 0x1852 <__pack_f+0x84>
    184a:	88 0f       	add	r24, r24
    184c:	99 1f       	adc	r25, r25
    184e:	aa 1f       	adc	r26, r26
    1850:	bb 1f       	adc	r27, r27
    1852:	0a 94       	dec	r0
    1854:	d2 f7       	brpl	.-12     	; 0x184a <__pack_f+0x7c>
    1856:	01 97       	sbiw	r24, 0x01	; 1
    1858:	a1 09       	sbc	r26, r1
    185a:	b1 09       	sbc	r27, r1
    185c:	82 23       	and	r24, r18
    185e:	93 23       	and	r25, r19
    1860:	a4 23       	and	r26, r20
    1862:	b5 23       	and	r27, r21
    1864:	21 e0       	ldi	r18, 0x01	; 1
    1866:	30 e0       	ldi	r19, 0x00	; 0
    1868:	40 e0       	ldi	r20, 0x00	; 0
    186a:	50 e0       	ldi	r21, 0x00	; 0
    186c:	00 97       	sbiw	r24, 0x00	; 0
    186e:	a1 05       	cpc	r26, r1
    1870:	b1 05       	cpc	r27, r1
    1872:	19 f4       	brne	.+6      	; 0x187a <__pack_f+0xac>
    1874:	20 e0       	ldi	r18, 0x00	; 0
    1876:	30 e0       	ldi	r19, 0x00	; 0
    1878:	a9 01       	movw	r20, r18
    187a:	2e 29       	or	r18, r14
    187c:	3f 29       	or	r19, r15
    187e:	40 2b       	or	r20, r16
    1880:	51 2b       	or	r21, r17
    1882:	03 c0       	rjmp	.+6      	; 0x188a <__pack_f+0xbc>
    1884:	20 e0       	ldi	r18, 0x00	; 0
    1886:	30 e0       	ldi	r19, 0x00	; 0
    1888:	a9 01       	movw	r20, r18
    188a:	da 01       	movw	r26, r20
    188c:	c9 01       	movw	r24, r18
    188e:	8f 77       	andi	r24, 0x7F	; 127
    1890:	90 70       	andi	r25, 0x00	; 0
    1892:	a0 70       	andi	r26, 0x00	; 0
    1894:	b0 70       	andi	r27, 0x00	; 0
    1896:	80 34       	cpi	r24, 0x40	; 64
    1898:	91 05       	cpc	r25, r1
    189a:	a1 05       	cpc	r26, r1
    189c:	b1 05       	cpc	r27, r1
    189e:	39 f4       	brne	.+14     	; 0x18ae <__pack_f+0xe0>
    18a0:	27 ff       	sbrs	r18, 7
    18a2:	09 c0       	rjmp	.+18     	; 0x18b6 <__pack_f+0xe8>
    18a4:	20 5c       	subi	r18, 0xC0	; 192
    18a6:	3f 4f       	sbci	r19, 0xFF	; 255
    18a8:	4f 4f       	sbci	r20, 0xFF	; 255
    18aa:	5f 4f       	sbci	r21, 0xFF	; 255
    18ac:	04 c0       	rjmp	.+8      	; 0x18b6 <__pack_f+0xe8>
    18ae:	21 5c       	subi	r18, 0xC1	; 193
    18b0:	3f 4f       	sbci	r19, 0xFF	; 255
    18b2:	4f 4f       	sbci	r20, 0xFF	; 255
    18b4:	5f 4f       	sbci	r21, 0xFF	; 255
    18b6:	e1 e0       	ldi	r30, 0x01	; 1
    18b8:	f0 e0       	ldi	r31, 0x00	; 0
    18ba:	20 30       	cpi	r18, 0x00	; 0
    18bc:	80 e0       	ldi	r24, 0x00	; 0
    18be:	38 07       	cpc	r19, r24
    18c0:	80 e0       	ldi	r24, 0x00	; 0
    18c2:	48 07       	cpc	r20, r24
    18c4:	80 e4       	ldi	r24, 0x40	; 64
    18c6:	58 07       	cpc	r21, r24
    18c8:	28 f5       	brcc	.+74     	; 0x1914 <__pack_f+0x146>
    18ca:	e0 e0       	ldi	r30, 0x00	; 0
    18cc:	f0 e0       	ldi	r31, 0x00	; 0
    18ce:	22 c0       	rjmp	.+68     	; 0x1914 <__pack_f+0x146>
    18d0:	e0 38       	cpi	r30, 0x80	; 128
    18d2:	f1 05       	cpc	r31, r1
    18d4:	6c f5       	brge	.+90     	; 0x1930 <__pack_f+0x162>
    18d6:	e1 58       	subi	r30, 0x81	; 129
    18d8:	ff 4f       	sbci	r31, 0xFF	; 255
    18da:	da 01       	movw	r26, r20
    18dc:	c9 01       	movw	r24, r18
    18de:	8f 77       	andi	r24, 0x7F	; 127
    18e0:	90 70       	andi	r25, 0x00	; 0
    18e2:	a0 70       	andi	r26, 0x00	; 0
    18e4:	b0 70       	andi	r27, 0x00	; 0
    18e6:	80 34       	cpi	r24, 0x40	; 64
    18e8:	91 05       	cpc	r25, r1
    18ea:	a1 05       	cpc	r26, r1
    18ec:	b1 05       	cpc	r27, r1
    18ee:	39 f4       	brne	.+14     	; 0x18fe <__pack_f+0x130>
    18f0:	27 ff       	sbrs	r18, 7
    18f2:	09 c0       	rjmp	.+18     	; 0x1906 <__pack_f+0x138>
    18f4:	20 5c       	subi	r18, 0xC0	; 192
    18f6:	3f 4f       	sbci	r19, 0xFF	; 255
    18f8:	4f 4f       	sbci	r20, 0xFF	; 255
    18fa:	5f 4f       	sbci	r21, 0xFF	; 255
    18fc:	04 c0       	rjmp	.+8      	; 0x1906 <__pack_f+0x138>
    18fe:	21 5c       	subi	r18, 0xC1	; 193
    1900:	3f 4f       	sbci	r19, 0xFF	; 255
    1902:	4f 4f       	sbci	r20, 0xFF	; 255
    1904:	5f 4f       	sbci	r21, 0xFF	; 255
    1906:	57 ff       	sbrs	r21, 7
    1908:	05 c0       	rjmp	.+10     	; 0x1914 <__pack_f+0x146>
    190a:	56 95       	lsr	r21
    190c:	47 95       	ror	r20
    190e:	37 95       	ror	r19
    1910:	27 95       	ror	r18
    1912:	31 96       	adiw	r30, 0x01	; 1
    1914:	87 e0       	ldi	r24, 0x07	; 7
    1916:	56 95       	lsr	r21
    1918:	47 95       	ror	r20
    191a:	37 95       	ror	r19
    191c:	27 95       	ror	r18
    191e:	8a 95       	dec	r24
    1920:	d1 f7       	brne	.-12     	; 0x1916 <__pack_f+0x148>
    1922:	0b c0       	rjmp	.+22     	; 0x193a <__pack_f+0x16c>
    1924:	e0 e0       	ldi	r30, 0x00	; 0
    1926:	f0 e0       	ldi	r31, 0x00	; 0
    1928:	05 c0       	rjmp	.+10     	; 0x1934 <__pack_f+0x166>
    192a:	e0 e0       	ldi	r30, 0x00	; 0
    192c:	f0 e0       	ldi	r31, 0x00	; 0
    192e:	05 c0       	rjmp	.+10     	; 0x193a <__pack_f+0x16c>
    1930:	ef ef       	ldi	r30, 0xFF	; 255
    1932:	f0 e0       	ldi	r31, 0x00	; 0
    1934:	20 e0       	ldi	r18, 0x00	; 0
    1936:	30 e0       	ldi	r19, 0x00	; 0
    1938:	a9 01       	movw	r20, r18
    193a:	8e 2f       	mov	r24, r30
    193c:	87 95       	ror	r24
    193e:	88 27       	eor	r24, r24
    1940:	87 95       	ror	r24
    1942:	94 2f       	mov	r25, r20
    1944:	9f 77       	andi	r25, 0x7F	; 127
    1946:	67 95       	ror	r22
    1948:	66 27       	eor	r22, r22
    194a:	67 95       	ror	r22
    194c:	e6 95       	lsr	r30
    194e:	e2 2e       	mov	r14, r18
    1950:	a9 2f       	mov	r26, r25
    1952:	a8 2b       	or	r26, r24
    1954:	fe 2f       	mov	r31, r30
    1956:	f6 2b       	or	r31, r22
    1958:	62 2f       	mov	r22, r18
    195a:	73 2f       	mov	r23, r19
    195c:	8a 2f       	mov	r24, r26
    195e:	9f 2f       	mov	r25, r31
    1960:	cd b7       	in	r28, 0x3d	; 61
    1962:	de b7       	in	r29, 0x3e	; 62
    1964:	e6 e0       	ldi	r30, 0x06	; 6
    1966:	0c 94 9f 0d 	jmp	0x1b3e	; 0x1b3e <__epilogue_restores__+0x18>

0000196a <__unpack_f>:
    196a:	dc 01       	movw	r26, r24
    196c:	fb 01       	movw	r30, r22
    196e:	2c 91       	ld	r18, X
    1970:	11 96       	adiw	r26, 0x01	; 1
    1972:	3c 91       	ld	r19, X
    1974:	11 97       	sbiw	r26, 0x01	; 1
    1976:	12 96       	adiw	r26, 0x02	; 2
    1978:	8c 91       	ld	r24, X
    197a:	12 97       	sbiw	r26, 0x02	; 2
    197c:	48 2f       	mov	r20, r24
    197e:	4f 77       	andi	r20, 0x7F	; 127
    1980:	50 e0       	ldi	r21, 0x00	; 0
    1982:	98 2f       	mov	r25, r24
    1984:	99 1f       	adc	r25, r25
    1986:	99 27       	eor	r25, r25
    1988:	99 1f       	adc	r25, r25
    198a:	13 96       	adiw	r26, 0x03	; 3
    198c:	6c 91       	ld	r22, X
    198e:	13 97       	sbiw	r26, 0x03	; 3
    1990:	86 2f       	mov	r24, r22
    1992:	88 0f       	add	r24, r24
    1994:	89 2b       	or	r24, r25
    1996:	90 e0       	ldi	r25, 0x00	; 0
    1998:	66 1f       	adc	r22, r22
    199a:	66 27       	eor	r22, r22
    199c:	66 1f       	adc	r22, r22
    199e:	61 83       	std	Z+1, r22	; 0x01
    19a0:	00 97       	sbiw	r24, 0x00	; 0
    19a2:	39 f5       	brne	.+78     	; 0x19f2 <__unpack_f+0x88>
    19a4:	21 15       	cp	r18, r1
    19a6:	31 05       	cpc	r19, r1
    19a8:	41 05       	cpc	r20, r1
    19aa:	51 05       	cpc	r21, r1
    19ac:	11 f4       	brne	.+4      	; 0x19b2 <__unpack_f+0x48>
    19ae:	82 e0       	ldi	r24, 0x02	; 2
    19b0:	29 c0       	rjmp	.+82     	; 0x1a04 <__unpack_f+0x9a>
    19b2:	82 e8       	ldi	r24, 0x82	; 130
    19b4:	9f ef       	ldi	r25, 0xFF	; 255
    19b6:	93 83       	std	Z+3, r25	; 0x03
    19b8:	82 83       	std	Z+2, r24	; 0x02
    19ba:	67 e0       	ldi	r22, 0x07	; 7
    19bc:	22 0f       	add	r18, r18
    19be:	33 1f       	adc	r19, r19
    19c0:	44 1f       	adc	r20, r20
    19c2:	55 1f       	adc	r21, r21
    19c4:	6a 95       	dec	r22
    19c6:	d1 f7       	brne	.-12     	; 0x19bc <__unpack_f+0x52>
    19c8:	83 e0       	ldi	r24, 0x03	; 3
    19ca:	80 83       	st	Z, r24
    19cc:	09 c0       	rjmp	.+18     	; 0x19e0 <__unpack_f+0x76>
    19ce:	22 0f       	add	r18, r18
    19d0:	33 1f       	adc	r19, r19
    19d2:	44 1f       	adc	r20, r20
    19d4:	55 1f       	adc	r21, r21
    19d6:	82 81       	ldd	r24, Z+2	; 0x02
    19d8:	93 81       	ldd	r25, Z+3	; 0x03
    19da:	01 97       	sbiw	r24, 0x01	; 1
    19dc:	93 83       	std	Z+3, r25	; 0x03
    19de:	82 83       	std	Z+2, r24	; 0x02
    19e0:	20 30       	cpi	r18, 0x00	; 0
    19e2:	80 e0       	ldi	r24, 0x00	; 0
    19e4:	38 07       	cpc	r19, r24
    19e6:	80 e0       	ldi	r24, 0x00	; 0
    19e8:	48 07       	cpc	r20, r24
    19ea:	80 e4       	ldi	r24, 0x40	; 64
    19ec:	58 07       	cpc	r21, r24
    19ee:	78 f3       	brcs	.-34     	; 0x19ce <__unpack_f+0x64>
    19f0:	20 c0       	rjmp	.+64     	; 0x1a32 <__unpack_f+0xc8>
    19f2:	8f 3f       	cpi	r24, 0xFF	; 255
    19f4:	91 05       	cpc	r25, r1
    19f6:	79 f4       	brne	.+30     	; 0x1a16 <__unpack_f+0xac>
    19f8:	21 15       	cp	r18, r1
    19fa:	31 05       	cpc	r19, r1
    19fc:	41 05       	cpc	r20, r1
    19fe:	51 05       	cpc	r21, r1
    1a00:	19 f4       	brne	.+6      	; 0x1a08 <__unpack_f+0x9e>
    1a02:	84 e0       	ldi	r24, 0x04	; 4
    1a04:	80 83       	st	Z, r24
    1a06:	08 95       	ret
    1a08:	44 ff       	sbrs	r20, 4
    1a0a:	03 c0       	rjmp	.+6      	; 0x1a12 <__unpack_f+0xa8>
    1a0c:	81 e0       	ldi	r24, 0x01	; 1
    1a0e:	80 83       	st	Z, r24
    1a10:	10 c0       	rjmp	.+32     	; 0x1a32 <__unpack_f+0xc8>
    1a12:	10 82       	st	Z, r1
    1a14:	0e c0       	rjmp	.+28     	; 0x1a32 <__unpack_f+0xc8>
    1a16:	8f 57       	subi	r24, 0x7F	; 127
    1a18:	90 40       	sbci	r25, 0x00	; 0
    1a1a:	93 83       	std	Z+3, r25	; 0x03
    1a1c:	82 83       	std	Z+2, r24	; 0x02
    1a1e:	83 e0       	ldi	r24, 0x03	; 3
    1a20:	80 83       	st	Z, r24
    1a22:	87 e0       	ldi	r24, 0x07	; 7
    1a24:	22 0f       	add	r18, r18
    1a26:	33 1f       	adc	r19, r19
    1a28:	44 1f       	adc	r20, r20
    1a2a:	55 1f       	adc	r21, r21
    1a2c:	8a 95       	dec	r24
    1a2e:	d1 f7       	brne	.-12     	; 0x1a24 <__unpack_f+0xba>
    1a30:	50 64       	ori	r21, 0x40	; 64
    1a32:	24 83       	std	Z+4, r18	; 0x04
    1a34:	35 83       	std	Z+5, r19	; 0x05
    1a36:	46 83       	std	Z+6, r20	; 0x06
    1a38:	57 83       	std	Z+7, r21	; 0x07
    1a3a:	08 95       	ret

00001a3c <__fpcmp_parts_f>:
    1a3c:	fc 01       	movw	r30, r24
    1a3e:	db 01       	movw	r26, r22
    1a40:	90 81       	ld	r25, Z
    1a42:	92 30       	cpi	r25, 0x02	; 2
    1a44:	08 f4       	brcc	.+2      	; 0x1a48 <__fpcmp_parts_f+0xc>
    1a46:	49 c0       	rjmp	.+146    	; 0x1ada <__fpcmp_parts_f+0x9e>
    1a48:	8c 91       	ld	r24, X
    1a4a:	82 30       	cpi	r24, 0x02	; 2
    1a4c:	08 f4       	brcc	.+2      	; 0x1a50 <__fpcmp_parts_f+0x14>
    1a4e:	45 c0       	rjmp	.+138    	; 0x1ada <__fpcmp_parts_f+0x9e>
    1a50:	94 30       	cpi	r25, 0x04	; 4
    1a52:	51 f4       	brne	.+20     	; 0x1a68 <__fpcmp_parts_f+0x2c>
    1a54:	61 81       	ldd	r22, Z+1	; 0x01
    1a56:	84 30       	cpi	r24, 0x04	; 4
    1a58:	b1 f5       	brne	.+108    	; 0x1ac6 <__fpcmp_parts_f+0x8a>
    1a5a:	11 96       	adiw	r26, 0x01	; 1
    1a5c:	2c 91       	ld	r18, X
    1a5e:	11 97       	sbiw	r26, 0x01	; 1
    1a60:	30 e0       	ldi	r19, 0x00	; 0
    1a62:	26 1b       	sub	r18, r22
    1a64:	31 09       	sbc	r19, r1
    1a66:	41 c0       	rjmp	.+130    	; 0x1aea <__fpcmp_parts_f+0xae>
    1a68:	84 30       	cpi	r24, 0x04	; 4
    1a6a:	21 f0       	breq	.+8      	; 0x1a74 <__fpcmp_parts_f+0x38>
    1a6c:	92 30       	cpi	r25, 0x02	; 2
    1a6e:	41 f4       	brne	.+16     	; 0x1a80 <__fpcmp_parts_f+0x44>
    1a70:	82 30       	cpi	r24, 0x02	; 2
    1a72:	b1 f1       	breq	.+108    	; 0x1ae0 <__fpcmp_parts_f+0xa4>
    1a74:	11 96       	adiw	r26, 0x01	; 1
    1a76:	8c 91       	ld	r24, X
    1a78:	11 97       	sbiw	r26, 0x01	; 1
    1a7a:	88 23       	and	r24, r24
    1a7c:	a1 f1       	breq	.+104    	; 0x1ae6 <__fpcmp_parts_f+0xaa>
    1a7e:	2d c0       	rjmp	.+90     	; 0x1ada <__fpcmp_parts_f+0x9e>
    1a80:	61 81       	ldd	r22, Z+1	; 0x01
    1a82:	82 30       	cpi	r24, 0x02	; 2
    1a84:	01 f1       	breq	.+64     	; 0x1ac6 <__fpcmp_parts_f+0x8a>
    1a86:	11 96       	adiw	r26, 0x01	; 1
    1a88:	8c 91       	ld	r24, X
    1a8a:	11 97       	sbiw	r26, 0x01	; 1
    1a8c:	68 17       	cp	r22, r24
    1a8e:	d9 f4       	brne	.+54     	; 0x1ac6 <__fpcmp_parts_f+0x8a>
    1a90:	22 81       	ldd	r18, Z+2	; 0x02
    1a92:	33 81       	ldd	r19, Z+3	; 0x03
    1a94:	12 96       	adiw	r26, 0x02	; 2
    1a96:	8d 91       	ld	r24, X+
    1a98:	9c 91       	ld	r25, X
    1a9a:	13 97       	sbiw	r26, 0x03	; 3
    1a9c:	82 17       	cp	r24, r18
    1a9e:	93 07       	cpc	r25, r19
    1aa0:	94 f0       	brlt	.+36     	; 0x1ac6 <__fpcmp_parts_f+0x8a>
    1aa2:	28 17       	cp	r18, r24
    1aa4:	39 07       	cpc	r19, r25
    1aa6:	bc f0       	brlt	.+46     	; 0x1ad6 <__fpcmp_parts_f+0x9a>
    1aa8:	24 81       	ldd	r18, Z+4	; 0x04
    1aaa:	35 81       	ldd	r19, Z+5	; 0x05
    1aac:	46 81       	ldd	r20, Z+6	; 0x06
    1aae:	57 81       	ldd	r21, Z+7	; 0x07
    1ab0:	14 96       	adiw	r26, 0x04	; 4
    1ab2:	8d 91       	ld	r24, X+
    1ab4:	9d 91       	ld	r25, X+
    1ab6:	0d 90       	ld	r0, X+
    1ab8:	bc 91       	ld	r27, X
    1aba:	a0 2d       	mov	r26, r0
    1abc:	82 17       	cp	r24, r18
    1abe:	93 07       	cpc	r25, r19
    1ac0:	a4 07       	cpc	r26, r20
    1ac2:	b5 07       	cpc	r27, r21
    1ac4:	18 f4       	brcc	.+6      	; 0x1acc <__fpcmp_parts_f+0x90>
    1ac6:	66 23       	and	r22, r22
    1ac8:	41 f0       	breq	.+16     	; 0x1ada <__fpcmp_parts_f+0x9e>
    1aca:	0d c0       	rjmp	.+26     	; 0x1ae6 <__fpcmp_parts_f+0xaa>
    1acc:	28 17       	cp	r18, r24
    1ace:	39 07       	cpc	r19, r25
    1ad0:	4a 07       	cpc	r20, r26
    1ad2:	5b 07       	cpc	r21, r27
    1ad4:	28 f4       	brcc	.+10     	; 0x1ae0 <__fpcmp_parts_f+0xa4>
    1ad6:	66 23       	and	r22, r22
    1ad8:	31 f0       	breq	.+12     	; 0x1ae6 <__fpcmp_parts_f+0xaa>
    1ada:	21 e0       	ldi	r18, 0x01	; 1
    1adc:	30 e0       	ldi	r19, 0x00	; 0
    1ade:	05 c0       	rjmp	.+10     	; 0x1aea <__fpcmp_parts_f+0xae>
    1ae0:	20 e0       	ldi	r18, 0x00	; 0
    1ae2:	30 e0       	ldi	r19, 0x00	; 0
    1ae4:	02 c0       	rjmp	.+4      	; 0x1aea <__fpcmp_parts_f+0xae>
    1ae6:	2f ef       	ldi	r18, 0xFF	; 255
    1ae8:	3f ef       	ldi	r19, 0xFF	; 255
    1aea:	c9 01       	movw	r24, r18
    1aec:	08 95       	ret

00001aee <__prologue_saves__>:
    1aee:	2f 92       	push	r2
    1af0:	3f 92       	push	r3
    1af2:	4f 92       	push	r4
    1af4:	5f 92       	push	r5
    1af6:	6f 92       	push	r6
    1af8:	7f 92       	push	r7
    1afa:	8f 92       	push	r8
    1afc:	9f 92       	push	r9
    1afe:	af 92       	push	r10
    1b00:	bf 92       	push	r11
    1b02:	cf 92       	push	r12
    1b04:	df 92       	push	r13
    1b06:	ef 92       	push	r14
    1b08:	ff 92       	push	r15
    1b0a:	0f 93       	push	r16
    1b0c:	1f 93       	push	r17
    1b0e:	cf 93       	push	r28
    1b10:	df 93       	push	r29
    1b12:	cd b7       	in	r28, 0x3d	; 61
    1b14:	de b7       	in	r29, 0x3e	; 62
    1b16:	ca 1b       	sub	r28, r26
    1b18:	db 0b       	sbc	r29, r27
    1b1a:	0f b6       	in	r0, 0x3f	; 63
    1b1c:	f8 94       	cli
    1b1e:	de bf       	out	0x3e, r29	; 62
    1b20:	0f be       	out	0x3f, r0	; 63
    1b22:	cd bf       	out	0x3d, r28	; 61
    1b24:	09 94       	ijmp

00001b26 <__epilogue_restores__>:
    1b26:	2a 88       	ldd	r2, Y+18	; 0x12
    1b28:	39 88       	ldd	r3, Y+17	; 0x11
    1b2a:	48 88       	ldd	r4, Y+16	; 0x10
    1b2c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b2e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b30:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b32:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b34:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b36:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b38:	b9 84       	ldd	r11, Y+9	; 0x09
    1b3a:	c8 84       	ldd	r12, Y+8	; 0x08
    1b3c:	df 80       	ldd	r13, Y+7	; 0x07
    1b3e:	ee 80       	ldd	r14, Y+6	; 0x06
    1b40:	fd 80       	ldd	r15, Y+5	; 0x05
    1b42:	0c 81       	ldd	r16, Y+4	; 0x04
    1b44:	1b 81       	ldd	r17, Y+3	; 0x03
    1b46:	aa 81       	ldd	r26, Y+2	; 0x02
    1b48:	b9 81       	ldd	r27, Y+1	; 0x01
    1b4a:	ce 0f       	add	r28, r30
    1b4c:	d1 1d       	adc	r29, r1
    1b4e:	0f b6       	in	r0, 0x3f	; 63
    1b50:	f8 94       	cli
    1b52:	de bf       	out	0x3e, r29	; 62
    1b54:	0f be       	out	0x3f, r0	; 63
    1b56:	cd bf       	out	0x3d, r28	; 61
    1b58:	ed 01       	movw	r28, r26
    1b5a:	08 95       	ret

00001b5c <__eerd_byte_m32>:
    1b5c:	e1 99       	sbic	0x1c, 1	; 28
    1b5e:	fe cf       	rjmp	.-4      	; 0x1b5c <__eerd_byte_m32>
    1b60:	9f bb       	out	0x1f, r25	; 31
    1b62:	8e bb       	out	0x1e, r24	; 30
    1b64:	e0 9a       	sbi	0x1c, 0	; 28
    1b66:	99 27       	eor	r25, r25
    1b68:	8d b3       	in	r24, 0x1d	; 29
    1b6a:	08 95       	ret

00001b6c <__eewr_byte_m32>:
    1b6c:	26 2f       	mov	r18, r22

00001b6e <__eewr_r18_m32>:
    1b6e:	e1 99       	sbic	0x1c, 1	; 28
    1b70:	fe cf       	rjmp	.-4      	; 0x1b6e <__eewr_r18_m32>
    1b72:	9f bb       	out	0x1f, r25	; 31
    1b74:	8e bb       	out	0x1e, r24	; 30
    1b76:	2d bb       	out	0x1d, r18	; 29
    1b78:	0f b6       	in	r0, 0x3f	; 63
    1b7a:	f8 94       	cli
    1b7c:	e2 9a       	sbi	0x1c, 2	; 28
    1b7e:	e1 9a       	sbi	0x1c, 1	; 28
    1b80:	0f be       	out	0x3f, r0	; 63
    1b82:	01 96       	adiw	r24, 0x01	; 1
    1b84:	08 95       	ret

00001b86 <_exit>:
    1b86:	f8 94       	cli

00001b88 <__stop_program>:
    1b88:	ff cf       	rjmp	.-2      	; 0x1b88 <__stop_program>
